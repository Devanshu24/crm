Namespace(explain=True, file='./data/minichess/config', gpu=False, num_epochs=1, output='./data/minichess/results1', saved_model=None, tune=True, verbose=True)
***Loading data***
***Creating CRM structure***
***Get Best Config***
Namespace(explain=True, file='./data/minichess/config', gpu=False, num_epochs=1, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Epoch 0
Train loss: 1.155617370083928
Train acc: 0.4
-------------------------------------
***Train Metrics***
              precision    recall  f1-score   support

           0     0.4000    0.4000    0.4000        10
           1     0.4000    0.4000    0.4000        10

    accuracy                         0.4000        20
   macro avg     0.4000    0.4000    0.4000        20
weighted avg     0.4000    0.4000    0.4000        20

-------------------------------------
***Test Metrics***
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.5556    1.0000    0.7143         5

    accuracy                         0.6000        10
   macro avg     0.7778    0.6000    0.5238        10
weighted avg     0.7778    0.6000    0.5238        10

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.2000         5
   macro avg     0.5000    0.6000    0.1667         5
weighted avg     1.0000    0.2000    0.3333         5

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.8000    0.8889         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.8000         5
   macro avg     0.5000    0.9000    0.4444         5
weighted avg     1.0000    0.8000    0.8889         5

-------------------------------------
***Generating explanations for the test set***
Explaining 10 test instances::
Instance: y,y_pred,tp_count,fn_count,tn_count,fp_count,Top-1_neurons,ce_count,ie_count
0: 1,1,1,0,0,0,[243],0,1
	Ancestors of [243]: [243, 27, 10, 15]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(16.3168, 243), (8.7379, 168), (8.2622, 355), (5.2325, 377), (4.4882, 219)]
		L1: [(20.805, 27), (9.9549, 385), (8.7379, 76), (8.2622, 34), (8.1265, 116)]
		L0: [(27.1943, 15), (21.2263, 10), (19.0534, 14), (16.4882, 11), (8.2252, 4)]
1: 1,1,2,0,0,0,[352],0,2
	Ancestors of [352]: [352, 80, 10, 13]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(24.173, 352), (9.7657, 357), (0.3851, 273), (0.0, 411), (0.0, 409)]
		L1: [(24.173, 80), (12.7479, 404), (12.1493, 58), (11.9946, 149), (10.1508, 74)]
		L0: [(22.2596, 17), (21.715, 11), (19.6135, 13), (15.6102, 12), (14.9822, 10)]
Namespace(explain=True, file='./data/minichess/config', gpu=False, num_epochs=1, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Epoch 0
Train loss: 1.307470252737403
Train acc: 0.3125
Val loss: 0.5389080122113228
Val acc: 0.75
-------------------------------------
***Train Metrics***
              precision    recall  f1-score   support

           0     0.2857    0.2500    0.2667         8
           1     0.3333    0.3750    0.3529         8

    accuracy                         0.3125        16
   macro avg     0.3095    0.3125    0.3098        16
weighted avg     0.3095    0.3125    0.3098        16

-------------------------------------
***Test Metrics***
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.5556    1.0000    0.7143         5

    accuracy                         0.6000        10
   macro avg     0.7778    0.6000    0.5238        10
weighted avg     0.7778    0.6000    0.5238        10

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.2000         5
   macro avg     0.5000    0.6000    0.1667         5
weighted avg     1.0000    0.2000    0.3333         5

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.8000    0.8889         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.8000         5
   macro avg     0.5000    0.9000    0.4444         5
weighted avg     1.0000    0.8000    0.8889         5

-------------------------------------
***Generating explanations for the test set***
Explaining 10 test instances::
Instance: y,y_pred,tp_count,fn_count,tn_count,fp_count,Top-1_neurons,ce_count,ie_count
0: 1,1,1,0,0,0,[243],0,1
	Ancestors of [243]: [243, 27, 10, 15]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(16.2944, 243), (8.6874, 168), (8.2023, 355), (5.2228, 377), (4.4877, 219)]
		L1: [(20.7821, 27), (10.0048, 385), (8.6874, 76), (8.2664, 38), (8.2023, 34)]
		L0: [(27.3009, 15), (21.1662, 10), (19.0991, 14), (16.4513, 11), (8.194, 4)]
1: 1,1,2,0,0,0,[352],0,2
	Ancestors of [352]: [352, 80, 10, 13]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(24.0562, 352), (9.8339, 357), (0.4014, 273), (0.0, 411), (0.0, 409)]
		L1: [(24.0562, 80), (12.7515, 404), (12.123, 149), (12.1174, 58), (10.2353, 74)]
		L0: [(22.2886, 17), (21.8289, 11), (19.534, 13), (15.6555, 12), (14.9276, 10)]
2: 1,1,3,0,0,0,[375],0,3
	Ancestors of [375]: [375, 84, 9, 16]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(3.8764, 375), (3.8117, 386), (0.1643, 384), (0.0, 411), (0.0, 409)]
		L1: [(9.4976, 145), (8.438, 70), (8.2497, 404), (7.0217, 393), (6.9555, 155)]
		L0: [(23.0282, 19), (15.4886, 17), (14.2105, 7), (10.928, 9), (9.4905, 20)]
3: 1,1,4,0,0,0,[375],0,4
	Ancestors of [375]: [375, 84, 9, 16]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(3.3699, 375), (3.3367, 377), (3.3137, 386), (1.831, 253), (1.2429, 241)]
		L1: [(9.1306, 159), (8.2567, 145), (7.3356, 70), (6.5933, 116), (6.3919, 385)]
		L0: [(23.3152, 19), (18.3, 15), (13.6131, 14), (12.3538, 7), (8.2506, 20)]
4: 1,1,5,0,0,0,[386],0,5
	Ancestors of [386]: [386, 107, 9, 22]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(7.5378, 386), (4.3464, 303), (1.0605, 236), (0.0, 411), (0.0, 409)]
		L1: [(16.6868, 70), (16.3145, 404), (12.7771, 106), (10.2352, 53), (10.0221, 396)]
		L0: [(27.4359, 7), (25.6374, 17), (14.4356, 18), (11.0835, 22), (10.3867, 9)]
5: 0,1,5,0,0,1,[394],1,5
	Ancestors of [394]: [394, 129, 8, 11]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(0.5587, 394), (0.0, 411), (0.0, 409), (0.0, 408), (0.0, 407)]
		L1: [(20.8987, 159), (15.4071, 123), (14.6301, 385), (13.822, 160), (12.088, 38)]
		L0: [(34.3355, 15), (18.8686, 23), (16.648, 14), (12.4347, 10), (9.0885, 16)]
6: 0,1,5,0,0,2,[411],2,5
	Ancestors of [411]: [411, 102, 10, 18]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(0.0, 411), (0.0, 409), (0.0, 408), (0.0, 407), (0.0, 406)]
		L1: [(15.3006, 159), (10.7112, 385), (10.4581, 140), (10.2292, 393), (10.0068, 152)]
		L0: [(39.0704, 19), (28.0838, 15), (12.1885, 14), (10.4644, 16), (5.2004, 18)]
7: 0,1,5,0,0,3,[217],3,5
	Ancestors of [217]: [217, 84, 9, 16]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(8.77, 217), (8.4126, 207), (0.0, 411), (0.0, 409), (0.0, 408)]
		L1: [(20.3337, 123), (14.2738, 70), (10.095, 315), (8.77, 84), (8.5729, 396)]
		L0: [(26.5196, 7), (19.0012, 14), (15.2546, 23), (13.0327, 8), (12.6119, 18)]
8: 0,0,5,0,1,3,[357],4,5
	Ancestors of [357]: [357, 74, 11, 17]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(8.5506, 357), (0.0, 411), (0.0, 409), (0.0, 408), (0.0, 407)]
		L1: [(23.1842, 142), (14.651, 410), (13.5489, 97), (9.5449, 315), (9.4363, 112)]
		L0: [(26.0667, 7), (23.0584, 11), (17.0799, 16), (13.5489, 20), (10.7011, 17)]
9: 0,1,5,0,1,4,[171],5,5
	Ancestors of [171]: [171, 129, 8, 11]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(11.0595, 171), (8.7265, 355), (4.7744, 219), (1.4371, 394), (1.1987, 400)]
		L1: [(15.9216, 143), (13.7495, 145), (12.4966, 129), (10.6441, 385), (8.7946, 38)]
		L0: [(24.4145, 8), (21.0373, 11), (19.0635, 15), (12.1122, 14), (9.538, 20)]

Explanation statistics:
TP: 5
FN: 0
TN: 1
FP: 4
CE: 5
IE: 5
Accuracy: 0.6, Fidelity: 0.5
-------------------------------------
Explaining 5 test instances::
Instance: y,y_pred,tp_count,fn_count,tn_count,fp_count,Top-1_neurons,ce_count,ie_count
0: 0,1,0,0,0,1,[211],1,0
	Ancestors of [211]: [211, 25, 1, 14]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(6.741, 211), (6.7201, 209), (4.6272, 285), (4.2469, 208), (4.029, 389)]
		L1: [(11.3473, 127), (8.7007, 144), (7.6221, 77), (7.3277, 25), (5.9832, 28)]
		L0: [(20.2444, 15), (16.8793, 14), (12.5846, 19), (9.4235, 23), (9.2861, 20)]
1: 0,0,0,0,1,1,[180],2,0
	Ancestors of [180]: [180, 48, 1, 19]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(6.4746, 180), (5.3887, 279), (3.8899, 309), (3.0462, 175), (2.8405, 353)]
		L1: [(22.0828, 33), (11.365, 157), (7.8558, 393), (6.4746, 48), (5.9301, 167)]
		L0: [(25.6931, 17), (21.5342, 1), (14.8362, 19), (9.8649, 2), (9.58, 18)]
2: 0,1,0,0,1,2,[211],3,0
	Ancestors of [211]: [211, 25, 1, 14]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(7.8157, 211), (7.7915, 209), (5.3649, 285), (3.9343, 163), (3.0029, 220)]
		L1: [(13.1564, 127), (10.0879, 144), (8.8373, 77), (8.496, 25), (6.9372, 28)]
		L0: [(23.472, 15), (19.5704, 14), (12.3214, 19), (10.7666, 20), (9.6083, 1)]
3: 0,1,0,0,1,3,[211],4,0
	Ancestors of [211]: [211, 25, 1, 14]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(7.8157, 211), (7.7915, 209), (5.3649, 285), (3.9343, 163), (3.0029, 220)]
		L1: [(13.1564, 127), (10.0879, 144), (8.8373, 77), (8.496, 25), (6.9372, 28)]
		L0: [(23.472, 15), (19.5704, 14), (12.3214, 19), (10.7666, 20), (9.6083, 1)]
4: 0,1,0,0,1,4,[211],5,0
	Ancestors of [211]: [211, 25, 1, 14]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(7.8157, 211), (7.7915, 209), (5.3649, 285), (3.9343, 163), (3.0029, 220)]
		L1: [(13.1564, 127), (10.0879, 144), (8.8373, 77), (8.496, 25), (6.9372, 28)]
		L0: [(23.472, 15), (19.5704, 14), (12.3214, 19), (10.7666, 20), (9.6083, 1)]

Explanation statistics:
TP: 0
FN: 0
TN: 1
FP: 4
CE: 5
IE: 0
Accuracy: 0.2, Fidelity: 1.0
-------------------------------------
Explaining 5 test instances::
Instance: y,y_pred,tp_count,fn_count,tn_count,fp_count,Top-1_neurons,ce_count,ie_count
0: 0,1,0,0,0,1,[316],1,0
	Ancestors of [316]: [316, 50, 4, 22]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 413), (0, 412)]
		L2: [(5.8431, 316), (2.6301, 307), (1.2502, 358), (1.0106, 330), (0.7894, 308)]
		L1: [(14.7098, 123), (13.4587, 143), (11.6226, 145), (8.6517, 292), (8.5117, 155)]
		L0: [(21.8161, 23), (17.593, 8), (11.6139, 20), (10.4373, 4), (9.5997, 9)]
1: 0,0,0,0,1,1,[374],2,0
	Ancestors of [374]: [374, 121, 11, 21]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(6.34, 374), (5.471, 284), (4.1315, 317), (2.2598, 355), (1.5838, 185)]
		L1: [(9.9923, 97), (8.219, 118), (7.9238, 121), (6.7318, 88), (5.4359, 410)]
		L0: [(23.4241, 7), (20.6308, 6), (17.5631, 21), (15.9834, 11), (5.9277, 20)]
2: 0,0,0,0,2,1,[374],3,0
	Ancestors of [374]: [374, 121, 11, 21]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(6.34, 374), (5.471, 284), (4.1315, 317), (2.2598, 355), (1.5838, 185)]
		L1: [(9.9923, 97), (8.219, 118), (7.9238, 121), (6.7318, 88), (5.4359, 410)]
		L0: [(23.4241, 7), (20.6308, 6), (17.5631, 21), (15.9834, 11), (5.9277, 20)]
3: 0,0,0,0,3,1,[374],4,0
	Ancestors of [374]: [374, 121, 11, 21]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(6.34, 374), (5.471, 284), (4.1315, 317), (2.2598, 355), (1.5838, 185)]
		L1: [(9.9923, 97), (8.219, 118), (7.9238, 121), (6.7318, 88), (5.4359, 410)]
		L0: [(23.4241, 7), (20.6308, 6), (17.5631, 21), (15.9834, 11), (5.9277, 20)]
4: 0,0,0,0,4,1,[374],5,0
	Ancestors of [374]: [374, 121, 11, 21]
	Top-5 neurons in each CRM layer (ordered by relevance, descending):
		L3: [(100.0, 412), (0, 413)]
		L2: [(6.34, 374), (5.471, 284), (4.1315, 317), (2.2598, 355), (1.5838, 185)]
		L1: [(9.9923, 97), (8.219, 118), (7.9238, 121), (6.7318, 88), (5.4359, 410)]
		L0: [(23.4241, 7), (20.6308, 6), (17.5631, 21), (15.9834, 11), (5.9277, 20)]

Explanation statistics:
TP: 0
FN: 0
TN: 4
FP: 1
CE: 5
IE: 0
Accuracy: 0.8, Fidelity: 1.0
-------------------------------------
         1461834 function calls (1414694 primitive calls) in 50.681 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.002    0.002   50.681   50.681 main.py:66(main)
        3    0.027    0.009   45.887   15.296 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:192(get_max_explanations)
       20   40.486    2.024   40.486    2.024 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:136(lrp)
       96    3.671    0.038    3.671    0.038 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:56(reset)
        1    0.025    0.025    3.535    3.535 /home/dell7810/Devanshu/CRM/crm/crm/utils/train_utils.py:19(train)
       96    2.659    0.028    3.025    0.032 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:27(forward)
        6    0.001    0.000    1.619    0.270 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:18(get_metrics)
       16    0.024    0.001    1.375    0.086 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:23(decorate_context)
       16    0.054    0.003    1.351    0.084 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/adam.py:55(step)
       16    0.330    0.021    1.152    0.072 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/functional.py:53(adam)
       16    0.000    0.000    0.545    0.034 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:181(backward)
       16    0.000    0.000    0.545    0.034 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:68(backward)
       16    0.544    0.034    0.544    0.034 {method 'run_backward' of 'torch._C._EngineBase' objects}
   103797    0.461    0.000    0.461    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.375    0.375 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:8(save_object)
        1    0.001    0.001    0.375    0.375 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:266(dump)
        1    0.000    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:466(dump)
        1    0.000    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:476(dump)
  33590/1    0.088    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:535(save)
   3786/1    0.014    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:621(save_reduce)
    418/1    0.003    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:960(save_module_dict)
    417/1    0.001    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:964(save_dict)
   1540/1    0.008    0.000    0.374    0.374 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:977(_batch_setitems)
    37440    0.053    0.000    0.362    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:1124(relu)
    35936    0.321    0.000    0.321    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
    37440    0.303    0.000    0.303    0.000 {built-in method relu}
7160/2662    0.016    0.000    0.242    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:873(save_tuple)
    35936    0.222    0.000    0.222    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
   125776    0.206    0.000    0.217    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:933(grad)
       16    0.034    0.002    0.188    0.012 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:167(zero_grad)
     9172    0.154    0.000    0.154    0.000 {built-in method tensor}
    17968    0.104    0.000    0.104    0.000 {method 'sqrt' of 'torch._C._TensorBase' objects}
     1258    0.092    0.000    0.093    0.000 {built-in method builtins.sorted}
       20    0.000    0.000    0.092    0.005 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:227(<listcomp>)
    17968    0.091    0.000    0.091    0.000 {method 'addcdiv_' of 'torch._C._TensorBase' objects}
     2661    0.003    0.000    0.083    0.000 {method '__reduce_ex__' of 'object' objects}
     1123    0.002    0.000    0.080    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/storage.py:32(__reduce__)
    17968    0.079    0.000    0.079    0.000 {method 'addcmul_' of 'torch._C._TensorBase' objects}
       53    0.000    0.000    0.079    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1463(display)
       42    0.000    0.000    0.078    0.002 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1159(__iter__)
       48    0.000    0.000    0.078    0.002 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1324(refresh)
     1123    0.005    0.000    0.077    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:333(save)
       37    0.001    0.000    0.076    0.002 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1197(update)
    832/4    0.001    0.000    0.074    0.019 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:924(save_list)
    832/4    0.003    0.000    0.074    0.019 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:937(_batch_appends)
       53    0.000    0.000    0.073    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1149(__str__)
       53    0.063    0.001    0.072    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:355(format_meter)
     1123    0.013    0.000    0.066    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:377(_legacy_save)
        6    0.000    0.000    0.042    0.007 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1964(classification_report)
       80    0.001    0.000    0.034    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:21(wrapped)
       80    0.033    0.000    0.033    0.000 {method 'eq' of 'torch._C._TensorBase' objects}
    11823    0.019    0.000    0.031    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:491(memoize)
    23583    0.027    0.000    0.030    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:596(__hash__)
       24    0.001    0.000    0.030    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1370(precision_recall_fscore_support)
     1123    0.009    0.000    0.027    0.000 {method 'dump' of '_pickle.Pickler' objects}
        1    0.003    0.003    0.025    0.025 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:11(make_dataset_cli)
    17968    0.024    0.000    0.024    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
1624/1283    0.002    0.000    0.023    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    49119    0.017    0.000    0.023    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:241(write)
     1123    0.015    0.000    0.021    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:83(__reduce_ex__)
    33591    0.015    0.000    0.021    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:217(commit_frame)
        2    0.000    0.000    0.019    0.010 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:9(__init__)
       54    0.000    0.000    0.019    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:57(_check_targets)
     7861    0.010    0.000    0.018    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:382(persistent_id)
       24    0.001    0.000    0.017    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:374(multilabel_confusion_matrix)
      531    0.000    0.000    0.016    0.000 <__array_function__ internals>:2(unique)
     8340    0.016    0.000    0.016    0.000 {method 'item' of 'torch._C._TensorBase' objects}
    10358    0.008    0.000    0.015    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:751(save_long)
      531    0.001    0.000    0.015    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:138(unique)
    24852    0.010    0.000    0.014    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:432(get)
      531    0.004    0.000    0.014    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:320(_unique1d)
       20    0.000    0.000    0.012    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2416(cross_entropy)
    90237    0.012    0.000    0.012    0.000 {built-in method builtins.id}
   128169    0.012    0.000    0.012    0.000 {built-in method builtins.hasattr}
       80    0.000    0.000    0.012    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:317(check_consistent_length)
     4492    0.011    0.000    0.011    0.000 {built-in method _pickle.dump}
       20    0.000    0.000    0.011    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:1581(log_softmax)
       20    0.011    0.001    0.011    0.001 {method 'log_softmax' of 'torch._C._TensorBase' objects}
     2246    0.011    0.000    0.011    0.000 {built-in method zeros_like}
     8280    0.011    0.000    0.011    0.000 {built-in method builtins.round}
      216    0.002    0.000    0.010    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:201(type_of_target)
        2    0.001    0.001    0.010    0.005 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:86(_set_weights)
      165    0.000    0.000    0.010    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:333(disp_len)
      165    0.000    0.000    0.009    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:329(_text_width)
      898    0.009    0.000    0.009    0.000 {method 'write' of '_io.TextIOWrapper' objects}
      167    0.002    0.000    0.009    0.000 {built-in method builtins.sum}
      188    0.000    0.000    0.009    0.000 {built-in method builtins.print}
     1648    0.009    0.000    0.009    0.000 {built-in method rand}
    19091    0.009    0.000    0.009    0.000 {method 'requires_grad_' of 'torch._C._TensorBase' objects}
      388    0.000    0.000    0.009    0.000 main.py:58(write)
      530    0.009    0.000    0.009    0.000 {method 'sort' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.008    0.008 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:33(seed_all)
       24    0.000    0.000    0.008    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1329(_check_set_wise_labels)
     1125    0.003    0.000    0.008    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:789(save_bytes)
       54    0.001    0.000    0.008    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:41(unique_labels)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/adam.py:34(__init__)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:46(is_available)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:33(__init__)
        2    0.008    0.004    0.008    0.004 {built-in method torch._C._cuda_getDeviceCount}
        2    0.002    0.001    0.007    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:207(add_param_group)
    17730    0.005    0.000    0.007    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:330(<genexpr>)
    37528    0.007    0.000    0.007    0.000 {method 'get' of 'dict' objects}
     8738    0.004    0.000    0.007    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:526(get)
    37635    0.007    0.000    0.007    0.000 {built-in method builtins.getattr}
    49118    0.007    0.000    0.007    0.000 {method 'write' of '_io.BytesIO' objects}
      102    0.007    0.000    0.007    0.000 {built-in method stack}
47575/47549    0.006    0.000    0.006    0.000 {built-in method builtins.len}
    37517    0.006    0.000    0.006    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_jit_internal.py:750(is_scripting)
    17968    0.006    0.000    0.006    0.000 {built-in method math.sqrt}
    26598    0.005    0.000    0.006    0.000 {built-in method builtins.isinstance}
     1123    0.002    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:280(_should_read_directly)
       48    0.000    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/preprocessing/_label.py:119(transform)
    20264    0.005    0.000    0.005    0.000 {built-in method _struct.pack}
        2    0.001    0.000    0.005    0.003 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:12(<listcomp>)
       59    0.000    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:348(print_status)
      162    0.000    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:76(<genexpr>)
1124/1123    0.002    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:255(inner)
    33592    0.005    0.000    0.005    0.000 {method 'tell' of '_io.BytesIO' objects}
     3784    0.004    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:438(__missing__)
      826    0.001    0.000    0.004    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:8(__init__)
     1123    0.002    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:228(_open_file_like)
       53    0.000    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:341(disp_trim)
       15    0.004    0.000    0.004    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:120(<dictcomp>)
    33590    0.004    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:605(persistent_id)
       48    0.000    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:151(_encode)
        1    0.001    0.001    0.003    0.003 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:63(to)
       48    0.000    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:193(_check_unknown)
     1123    0.003    0.000    0.003    0.000 {method '_write_file' of 'torch._C.FloatStorageBase' objects}
      216    0.001    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:117(is_multilabel)
       15    0.000    0.000    0.003    0.000 {built-in method builtins.next}
     1123    0.003    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:272(_is_compressed_file)
       72    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(setdiff1d)
       72    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:784(setdiff1d)
       10    0.002    0.000    0.002    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:71(<dictcomp>)
    11823    0.002    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:514(put)
      824    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:198(search)
    17565    0.002    0.000    0.002    0.000 {built-in method unicodedata.east_asian_width}
       72    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(in1d)
     1123    0.002    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:193(_is_path)
     7861    0.002    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/__init__.py:265(is_storage)
        5    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/asyncio.py:23(__init__)
        5    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:846(__init__)
        1    0.000    0.000    0.002    0.002 main.py:21(cmd_line_args)
       72    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:519(in1d)
       10    0.002    0.000    0.002    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:85(<dictcomp>)
        6    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:613(write)
       10    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1264(close)
      850    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:289(_compile)
      212    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:253(_num_samples)
      438    0.001    0.000    0.002    0.000 {method 'format' of 'str' objects}
      434    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:165(simplefilter)
     1123    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:164(location_tag)
       12    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:622(external_write_mode)
        2    0.001    0.001    0.002    0.001 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:117(_assign_layers)
      162    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:104(<genexpr>)
        2    0.000    0.000    0.002    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/auto.py:38(trange)
     1123    0.002    0.000    0.002    0.000 {method 'storage' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.002    0.002 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2321(train_test_split)
       76    0.002    0.000    0.002    0.000 {built-in method argmax}
      180    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:994(column_or_1d)
       54    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(average)
       80    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:328(<listcomp>)
      108    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:23(_unique_multiclass)
     8784    0.001    0.000    0.001    0.000 {built-in method builtins.issubclass}
     1163    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C._TensorBase' objects}
        6    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:117(__exit__)
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_namedtensor_internals.py:10(check_serializing_named_tensor)
       54    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/function_base.py:280(average)
      434    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:181(_add_filter)
      226    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:143(inner)
     1124    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:329(__hash__)
     1125    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:744(save_bool)
       54    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(union1d)
        5    0.001    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:106(<dictcomp>)
     1125    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:720(__hash__)
       48    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1265(_prf_divide)
        2    0.001    0.000    0.001    0.001 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:76(_setup_neurons)
        7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:759(compile)
       54    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:743(union1d)
        1    0.000    0.000    0.001    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1638(__init__)
     1123    0.001    0.000    0.001    0.000 {method 'to' of 'torch._C._TensorBase' objects}
      233    0.001    0.000    0.001    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       59    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:342(fp_write)
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:183(normalize_storage_type)
       66    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(any)
      455    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/abc.py:96(__instancecheck__)
       24    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/preprocessing/_label.py:85(fit)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1569(split)
     1123    0.001    0.000    0.001    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
      824    0.001    0.000    0.001    0.000 {method 'search' of 're.Pattern' objects}
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1920(_iter_indices)
       20    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2204(nll_loss)
       46    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1440(moveto)
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:224(__exit__)
        9    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1337(add_argument)
     2249    0.001    0.000    0.001    0.000 {built-in method builtins.hash}
     1123    0.001    0.000    0.001    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
      856    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1436(info)
      455    0.000    0.000    0.001    0.000 {built-in method _abc._abc_instancecheck}
       85    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:69(_wrapreduction)
        7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:937(parse)
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:116(_cpu_tag)
      434    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:458(__enter__)
      180    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ravel)
       66    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2268(any)
       72    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/numeric.py:149(ones)
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/utils/hooks.py:52(warn_if_has_hooks)
        2    0.000    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:108(_topological_sort)
     1123    0.001    0.000    0.001    0.000 {method 'size' of 'torch._C.FloatStorageBase' objects}
       24    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:7(_unique)
        5    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:560(__new__)
       36    0.000    0.000    0.001    0.000 {method 'mean' of 'numpy.ndarray' objects}
     1123    0.001    0.000    0.001    0.000 {method 'stride' of 'torch._C._TensorBase' objects}
     1123    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:199(__init__)
     14/7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:435(_parse_sub)
       21    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:250(compile)
       16    0.001    0.000    0.001    0.000 {built-in method io.open}
      6/4    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1464(save_function)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/random.py:98(manual_seed_all)
       36    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:162(_mean)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:112(_lazy_call)
      106    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:222(_is_ascii)
   826/48    0.001    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:96(_topological_sort_util)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:193(format_stack)
     2214    0.001    0.000    0.001    0.000 {built-in method builtins.max}
     1129    0.001    0.000    0.001    0.000 {method 'keys' of 'dict' objects}
     8280    0.001    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:227(<lambda>)
     15/8    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:493(_parse)
       95    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:288(format_interval)
      604    0.001    0.000    0.001    0.000 {built-in method numpy.empty}
     1321    0.000    0.000    0.001    0.000 {method 'readline' of '_io.TextIOWrapper' objects}
       72    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(searchsorted)
      531    0.001    0.000    0.001    0.000 {method 'flatten' of 'numpy.ndarray' objects}
     2378    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
     1123    0.001    0.000    0.001    0.000 {method 'fileno' of '_io._IOBase' objects}
       12    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:15(getline)
     3809    0.001    0.000    0.001    0.000 {built-in method builtins.callable}
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:28(_make_grads)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:200(extract_stack)
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1445(format_dict)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:321(extract)
       24    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(hstack)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_fx/graph_module.py:24(patched_getline)
     1123    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:314(_check_dill_version)
      434    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:477(__exit__)
       79    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(concatenate)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:37(getlines)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/random.py:22(manual_seed)
     1400    0.000    0.000    0.000    0.000 {built-in method numpy.asanyarray}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2480(_get_formatter)
       20    0.000    0.000    0.000    0.000 {built-in method torch._C._nn.nll_loss}
       80    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/overrides.py:1073(has_torch_function)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:82(updatecache)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:161(__init__)
      439    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       48    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       66    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:54(_any)
       24    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isposinf)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1255(__init__)
       13    0.000    0.000    0.000    0.000 {method 'write' of '_io.BufferedWriter' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:486(check_array)
      531    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:125(_unpack_tuple)
      180    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1718(ravel)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1767(parse_args)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:598(_code)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1774(parse_known_args)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:108(__enter__)
      233    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:233(__call__)
      180    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(shape)
     1123    0.000    0.000    0.000    0.000 {method 'storage_offset' of 'torch._C._TensorBase' objects}
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:188(__format__)
       72    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
       42    0.000    0.000    0.000    0.000 {built-in method now}
       48    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1140(check_is_fitted)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1809(_parse_known_args)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:285(hstack)
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1283(searchsorted)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:735(gettext)
       40    0.000    0.000    0.000    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:660(dgettext)
      942    0.000    0.000    0.000    0.000 {built-in method numpy.asarray}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:579(translation)
     1253    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1599(is_dill)
     2246    0.000    0.000    0.000    0.000 {method 'flush' of '_io.BytesIO' objects}
      434    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:437(__init__)
  228/213    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/abc.py:100(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1988(split)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:538(find)
       33    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:285(line)
       16    0.000    0.000    0.000    0.000 {built-in method ones_like}
       40    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:528(__format__)
       68    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:104(acquire)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1877(consume_optional)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:1055(save_global)
       64    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       78    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:51(_wrapfunc)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1029(check_random_state)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:48(func)
      120    0.000    0.000    0.000    0.000 {built-in method builtins.any}
      856    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1689(isEnabledFor)
       96    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    17/16    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:127(isposinf)
       68    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:108(release)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:70(_set_output_neurons)
      3/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:986(_find_and_load)
     1123    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
      165    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/_monitor.py:30(__init__)
  228/213    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:657(get_lock)
      478    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:96(_showwarnmsg)
      778    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:127(<listcomp>)
       64    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:46(_sum)
       18    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sum)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:850(save_str)
      3/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:583(_decr_instances)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2084(_match_argument)
      2/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:20(_showwarnmsg_impl)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:92(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:927(save_code)
     26/7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:71(_compile)
     1123    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:202(__enter__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:118(create_mp_lock)
       17    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:89(__exit__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:357(indexable)
       20    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:179(get_ancestors_of_neurons)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:117(_formatwarnmsg)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:35(_formatwarnmsg_impl)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:70(RLock)
       73    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(bincount)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:188(match)
      990    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1308(clear)
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:155(__init__)
       86    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:388(open)
     2248    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:49(<genexpr>)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2123(sum)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:186(__init__)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:66(_count_reduce_items)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:50(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:834(start)
     1123    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:1149(cast)
       41    0.000    0.000    0.000    0.000 {built-in method posix.stat}
      240    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/overrides.py:1086(<genexpr>)
       34    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:166(__init__)
       17    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:80(__init__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1385(save_type)
     1302    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:53(<listcomp>)
      396    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:85(__enter__)
       72    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       29    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:58(__iter__)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:536(_compile_info)
     1139    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:72(inner)
       15    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:119(<listcomp>)
       96    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:46(<listcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:540(wait)
        4    0.000    0.000    0.000    0.000 {method 'readlines' of '_io._IOBase' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:282(_screen_shape_linux)
       24    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
      240    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:24(<genexpr>)
      110    0.000    0.000    0.000    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
      434    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:989(is_scalar_nan)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:270(wait)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1399(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1367(_get_spec)
       26    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/genericpath.py:16(exists)
        4    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
       48    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1204(<listcomp>)
        1    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x7f58dc1dc9d0}
      826    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:24(set_successor_neurons)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1498(find_spec)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/shutil.py:1312(get_terminal_size)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:1021(_approximate_mode)
      826    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:27(set_predecessor_neurons)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:319(decode)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:71(join)
      162    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:107(<genexpr>)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2446(<genexpr>)
       18    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:576(_get_free_pos)
      515    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
    33/14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:174(getwidth)
       10    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:70(<listcomp>)
      531    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:133(_unique_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:307(_safe_indexing)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:23(atleast_1d)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/joblib/externals/loky/backend/__init__.py:8(_make_name)
      195    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
       68    0.000    0.000    0.000    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:162(__init__)
      243    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:212(_expand_lang)
      146    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:164(__getitem__)
      2/1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:347(__getitem__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:27(format_list)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:144(__next__)
       85    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:70(<dictcomp>)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:112(__enter__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:77(<listcomp>)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1747(_add_action)
       18    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
       59    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:254(get)
       10    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:84(<listcomp>)
        1    0.000    0.000    0.000    0.000 main.py:54(__init__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:90(_assert_all_finite)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:295(detect_encoding)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:212(end_framing)
       32    0.000    0.000    0.000    0.000 {method 'numpy' of 'torch._C._TensorBase' objects}
        5    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
       46    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:319(_term_move_up)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:106(remove)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1589(_add_action)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:115(__exit__)
      180    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1928(shape)
       77    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:233(__next)
        4    0.000    0.000    0.000    0.000 {method 'permutation' of 'numpy.random.mtrand.RandomState' objects}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1478(_get_optional_kwargs)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:388(format)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1388(add_argument_group)
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:670(__getitem__)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:910(_locate_function)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:579(<setcomp>)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:225(_list_indexing)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1856(take_action)
       21    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:57(__init__)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:896(_import_module)
       51    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1567(__init__)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:22(func)
       20    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:215(<listcomp>)
       22    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:355(_escape)
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:61(__format__)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:26(__exit__)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:624(__array__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1398(_add_action)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:586(_format_args)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:938(__and__)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2104(<listcomp>)
       36    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        5    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:105(<listcomp>)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(split)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:47(_check_zero_division)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:123(seed)
       54    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       48    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/inspect.py:72(isclass)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:53(checkcache)
      164    0.000    0.000    0.000    0.000 {built-in method time.time}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:133(rng)
       60    0.000    0.000    0.000    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:218(_vhstack_dispatcher)
       24    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:121(_path_join)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:799(split)
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1285(fp_write)
      111    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(array_split)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:761(__init__)
       48    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
       70    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:169(colour)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_bootlocale.py:33(getpreferredencoding)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:739(array_split)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:329(status_printer)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:96(closegroup)
       80    0.000    0.000    0.000    0.000 {built-in method torch._C._is_torch_function_enabled}
       40    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
      180    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1924(_shape_dispatcher)
       68    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2158(<listcomp>)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2358(_get_values)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:369(<listcomp>)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/numeric.py:1858(isscalar)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:20(__enter__)
       23    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:250(_randbelow_with_getrandbits)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:659(__init__)
       79    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        2    0.000    0.000    0.000    0.000 {function Random.seed at 0x7f595172b790}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2458(cumsum)
        1    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:126(<listcomp>)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2026(_validate_shuffle_split)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
      180    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1714(_ravel_dispatcher)
       48    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       31    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:215(_supports_unicode)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2461(<listcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:94(__init__)
      108    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
      9/6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:461(_get_literal_prefix)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:293(shuffle)
       40    0.000    0.000    0.000    0.000 {method '__format__' of 'int' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:452(__init__)
       80    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       28    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:171(__eq__)
       52    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:172(append)
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:748(encode)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:309(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:147(<listcomp>)
       43    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       37    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1308(register)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(amin)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:319(read_or_stop)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:207(_arrays_for_stack_dispatcher)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:238(helper)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:116(__repr__)
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:423(_simple)
       36    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       34    0.000    0.000    0.000    0.000 {built-in method torch._C._set_grad_enabled}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:81(add)
       62    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:237(_determine_key_type)
       52    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:160(__len__)
       70    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:313(__call__)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:224(__init__)
       39    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:249(match)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/_config.py:24(get_config)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:74(__eq__)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:285(choice)
        2    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2126(<listcomp>)
        4    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:32(seterr)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2763(amin)
       70    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_collections_abc.py:657(get)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:123(<listcomp>)
       24    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:921(fix_flags)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:909(__init__)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:276(_optimize_charset)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:809(__init__)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:640(<genexpr>)
       79    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:148(concatenate)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2250(<listcomp>)
       31    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:286(tell)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:147(lazycache)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:762(__setattr__)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:135(_path_stat)
       24    0.000    0.000    0.000    0.000 {built-in method math.isnan}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:429(__enter__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/locale.py:384(normalize)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:120(_type_check)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:337(_make_indexable)
       26    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:111(__init__)
       11    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
       53    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:165(colour)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:84(opengroup)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:322(_getattribute)
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:1071(copyto)
       11    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:136(disable_on_exception)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:105(__init__)
       55    0.000    0.000    0.000    0.000 {built-in method from_iterable}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:82(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/util.py:171(register_after_fork)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1514(_pop_action_class)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:505(__init__)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/_reduction.py:7(get_enum)
       53    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:780(_setdiff1d_dispatcher)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(argsort)
        9    0.000    0.000    0.000    0.000 {built-in method posix.get_terminal_size}
        3    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(swapaxes)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:234(<listcomp>)
       15    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:101(wrapper_setattr)
       66    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2263(_any_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:325(find_cookie)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:886(__init__)
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1279(_searchsorted_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:409(__init__)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2225(_get_nargs_pattern)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:16(__init__)
        2    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:515(_in1d_dispatcher)
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1312(_registry_get)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:60(_tensor_or_tensors_to_tuple)
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1156(__hash__)
        1    0.000    0.000    0.000    0.000 {method 'seed' of 'numpy.random.mtrand.RandomState' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1152(_comparable)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/copyreg.py:99(_slotnames)
       54    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:739(_union1d_dispatcher)
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._log_api_usage_once}
       28    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:81(groups)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:851(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1006(argsort)
       73    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:883(bincount)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/_config.py:16(_get_threadlocal_config)
       54    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/function_base.py:276(_average_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:154(numpyufunc)
       20    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/explainer_utils.py:229(<listcomp>)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:222(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:159(__setitem__)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:52(_commit_removals)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:369(from_list)
       17    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:88(__getattr__)
       15    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:228(__init__)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:201(_is_utf)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/_monitor.py:94(report)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:721(getrandbits)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/types.py:171(__get__)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:631(__new__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1031(__init__)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:595(isstring)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(may_share_memory)
       20    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       19    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:41(_get_sep)
       25    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:331(getstate)
       53    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:358(<genexpr>)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:48(parameters)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:432(_generate_overlap_table)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:550(swapaxes)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:646(_is_dunder)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:434(__exit__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2414(_get_value)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
       13    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:219(_remove_dups_flatten)
        7    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
       16    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        9    0.000    0.000    0.000    0.000 {method 'fileno' of '_io.TextIOWrapper' objects}
       27    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:260(__init__)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/scipy/sparse/base.py:1205(isspmatrix)
       19    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       13    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:292(walk_stack)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:579(format)
       37    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2129(<genexpr>)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:249(_compile_charset)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:140(basename)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1527(_check_conflict)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1518(_get_handler)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:131(geterr)
        2    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:76(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:131(_get_kwargs)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:243(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method math.ceil}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:403(__init__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:202(__init__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2124(<dictcomp>)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:476(_ensure_no_complex_data)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:335(whichmodule)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1146(__del__)
       10    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1909(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       23    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1954(consume_positionals)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/pkg_resources/extern/__init__.py:57(find_spec)
       50    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:570(_metavar_formatter)
        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:65(_combine_flags)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:68(_dispatcher)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        6    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x55a46faae9a0}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:19(_atleast_1d_dispatcher)
       21    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1759(_get_positional_actions)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:136(ndarraysubclassinstance)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:740(save_none)
        7    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2122(_parse_optional)
        4    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2118(_sum_dispatcher)
        5    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1983(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method torch._C.set_num_threads}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/pkg_resources/extern/__init__.py:24(_module_matches_namespace)
        1    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1330(_path_importer_cache)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1177(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:323(__new__)
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
        4    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:231(_screen_shape_wrapper)
        9    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:664(result_type)
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
       23    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:752(decode)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:492(_get_charset_prefix)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:453(_get_iscased)
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:168(__setitem__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:880(__call__)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:324(__eq__)
       19    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_collections_abc.py:302(__subclasshook__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1560(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:246(__enter__)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        4    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:249(__exit__)
        4    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1306(current_thread)
        9    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        2    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
       13    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:172(_collect_type_vars)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:261(_is_owned)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:513(is_set)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1110(daemon)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:903(__call__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:605(<lambda>)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:753(value)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:711(__eq__)
       13    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        3    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        9    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:604(<listcomp>)
       11    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:90(_make_methods)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:255(_release_save)
        2    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2106(_match_arguments_partial)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:734(_newname)
        4    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:328(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:218(_acquireLock)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:209(start_framing)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:233(get_context)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:162(__delitem__)
        8    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:258(_acquire_restore)
        5    0.000    0.000    0.000    0.000 main.py:62(flush)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1300(<lambda>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:186(__init__)
        2    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:227(_releaseLock)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:205(__init__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:669(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1760(<listcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1095(daemon)
        1    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/six.py:194(find_spec)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2440(_check_value)
        1    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        2    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        2    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:100(<listcomp>)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_relax_case)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/urllib3/packages/six.py:190(find_spec)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:107(is_initialized)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1675(getEffectiveLevel)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1276(disable)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:197(get_start_method)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/util.py:48(debug)
        1    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2454(_cumsum_dispatcher)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:1368(may_share_memory)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1240(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
        1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:546(_swapaxes_dispatcher)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2407(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:214(setstate)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1676(identity)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/importlib_metadata/_compat.py:56(find_spec)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1002(_argsort_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:59(_recreate_cm)
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2758(_amin_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:134(_get_args)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:795(_split_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:735(_array_split_dispatcher)


Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Epoch 0
Train loss: 1.307470252737403
Train acc: 0.3125
Val loss: 0.5389080122113228
Val acc: 0.75
-------------------------------------
Epoch 1
Train loss: 1.2386027351021767
Train acc: 0.3125
Val loss: 0.5521849859505892
Val acc: 0.75
-------------------------------------
Epoch 2
Train loss: 1.1737943850457668
Train acc: 0.3125
Val loss: 0.5616972669959068
Val acc: 0.5
-------------------------------------
Epoch 3
Train loss: 1.116161703132093
Train acc: 0.3125
Val loss: 0.5746087059378624
Val acc: 0.5
-------------------------------------
Patience exceeded. Stopping training.
***Train Metrics***
              precision    recall  f1-score   support

           0     0.2857    0.2500    0.2667         8
           1     0.3333    0.3750    0.3529         8

    accuracy                         0.3125        16
   macro avg     0.3095    0.3125    0.3098        16
weighted avg     0.3095    0.3125    0.3098        16

-------------------------------------
***Test Metrics***
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.5556    1.0000    0.7143         5

    accuracy                         0.6000        10
   macro avg     0.7778    0.6000    0.5238        10
weighted avg     0.7778    0.6000    0.5238        10

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.2000    0.3333         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.2000         5
   macro avg     0.5000    0.6000    0.1667         5
weighted avg     1.0000    0.2000    0.3333         5

-------------------------------------
              precision    recall  f1-score   support

           0     1.0000    0.8000    0.8889         5
           1     0.0000    1.0000    0.0000         0

    accuracy                         0.8000         5
   macro avg     0.5000    0.9000    0.4444         5
weighted avg     1.0000    0.8000    0.8889         5

-------------------------------------
         5828776 function calls (5643482 primitive calls) in 18.406 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.002    0.002   18.406   18.406 main.py:66(main)
        1    0.134    0.134   17.114   17.114 /home/dell7810/Devanshu/CRM/crm/crm/utils/train_utils.py:19(train)
       80    0.106    0.001    6.414    0.080 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:23(decorate_context)
       80    0.268    0.003    6.306    0.079 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/adam.py:55(step)
      236    5.288    0.022    6.017    0.025 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:27(forward)
       80    1.517    0.019    5.365    0.067 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/functional.py:53(adam)
       14    0.001    0.000    3.323    0.237 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:18(get_metrics)
       80    0.001    0.000    2.785    0.035 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:181(backward)
       80    0.001    0.000    2.784    0.035 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:68(backward)
       80    2.780    0.035    2.780    0.035 {method 'run_backward' of 'torch._C._EngineBase' objects}
        4    0.000    0.000    1.568    0.392 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:8(save_object)
        4    0.004    0.001    1.568    0.392 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:266(dump)
        4    0.000    0.000    1.564    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:466(dump)
        4    0.000    0.000    1.564    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:476(dump)
 134360/4    0.356    0.000    1.563    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:535(save)
  15144/4    0.057    0.000    1.563    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:621(save_reduce)
   1672/4    0.010    0.000    1.563    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:960(save_module_dict)
   1668/4    0.003    0.000    1.563    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:964(save_dict)
   6160/4    0.030    0.000    1.563    0.391 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:977(_batch_setitems)
   179680    1.521    0.000    1.521    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
   628880    1.038    0.000    1.094    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:933(grad)
   179680    1.042    0.000    1.042    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
28640/10648    0.067    0.000    1.035    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:873(save_tuple)
       80    0.188    0.002    0.973    0.012 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:167(zero_grad)
    92040    0.133    0.000    0.719    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:1124(relu)
    92040    0.575    0.000    0.575    0.000 {built-in method relu}
    89840    0.475    0.000    0.475    0.000 {method 'sqrt' of 'torch._C._TensorBase' objects}
    89840    0.409    0.000    0.409    0.000 {method 'addcdiv_' of 'torch._C._TensorBase' objects}
    10644    0.015    0.000    0.398    0.000 {method '__reduce_ex__' of 'object' objects}
     4492    0.010    0.000    0.383    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/storage.py:32(__reduce__)
    89840    0.378    0.000    0.378    0.000 {method 'addcmul_' of 'torch._C._TensorBase' objects}
     4492    0.020    0.000    0.371    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:333(save)
     4492    0.125    0.000    0.329    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:377(_legacy_save)
  3328/16    0.004    0.000    0.301    0.019 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:924(save_list)
  3328/16    0.012    0.000    0.301    0.019 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:937(_batch_appends)
      236    0.162    0.001    0.162    0.001 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:56(reset)
    47292    0.078    0.000    0.127    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:491(memoize)
    95455    0.110    0.000    0.124    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:596(__hash__)
    89840    0.122    0.000    0.122    0.000 {method 'zero_' of 'torch._C._TensorBase' objects}
       14    0.001    0.000    0.109    0.008 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1964(classification_report)
     4492    0.035    0.000    0.106    0.000 {method 'dump' of '_pickle.Pickler' objects}
   196476    0.068    0.000    0.095    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:241(write)
      120    0.001    0.000    0.092    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1463(display)
      114    0.001    0.000    0.091    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1324(refresh)
       91    0.001    0.000    0.086    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1159(__iter__)
     4492    0.059    0.000    0.084    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:83(__reduce_ex__)
       84    0.001    0.000    0.082    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1197(update)
   134364    0.060    0.000    0.080    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:217(commit_frame)
      120    0.001    0.000    0.074    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1149(__str__)
      120    0.049    0.000    0.072    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:355(format_meter)
      100    0.001    0.000    0.072    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2416(cross_entropy)
    31444    0.042    0.000    0.071    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:382(persistent_id)
       56    0.002    0.000    0.070    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1370(precision_recall_fscore_support)
      100    0.000    0.000    0.066    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:1581(log_softmax)
      100    0.066    0.001    0.066    0.001 {method 'log_softmax' of 'torch._C._TensorBase' objects}
3768/2979    0.006    0.000    0.066    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    41432    0.033    0.000    0.062    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:751(save_long)
   455077    0.062    0.000    0.062    0.000 {method 'append' of 'list' objects}
   635031    0.058    0.000    0.058    0.000 {built-in method builtins.hasattr}
      126    0.001    0.000    0.055    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:57(_check_targets)
    99408    0.038    0.000    0.053    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:432(get)
     1235    0.001    0.000    0.050    0.000 <__array_function__ internals>:2(unique)
   362040    0.048    0.000    0.048    0.000 {built-in method builtins.id}
     1235    0.002    0.000    0.047    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:138(unique)
    90963    0.045    0.000    0.045    0.000 {method 'requires_grad_' of 'torch._C._TensorBase' objects}
     1235    0.010    0.000    0.043    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:320(_unique1d)
       56    0.002    0.000    0.041    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:374(multilabel_confusion_matrix)
    17968    0.039    0.000    0.039    0.000 {built-in method _pickle.dump}
      184    0.001    0.000    0.038    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:317(check_consistent_length)
     4500    0.010    0.000    0.032    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:789(save_bytes)
     1234    0.031    0.000    0.031    0.000 {method 'sort' of 'numpy.ndarray' objects}
   149745    0.030    0.000    0.030    0.000 {method 'get' of 'dict' objects}
    34952    0.018    0.000    0.028    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:526(get)
   196472    0.028    0.000    0.028    0.000 {method 'write' of '_io.BytesIO' objects}
   149907    0.027    0.000    0.027    0.000 {built-in method builtins.getattr}
      384    0.001    0.000    0.025    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:333(disp_len)
        1    0.003    0.003    0.025    0.025 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:11(make_dataset_cli)
196417/196391    0.024    0.000    0.024    0.000 {built-in method builtins.len}
      384    0.001    0.000    0.024    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:329(_text_width)
    89840    0.024    0.000    0.024    0.000 {built-in method math.sqrt}
      504    0.004    0.000    0.024    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:201(type_of_target)
      394    0.006    0.000    0.024    0.000 {built-in method builtins.sum}
     4492    0.008    0.000    0.021    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:280(_should_read_directly)
    81056    0.020    0.000    0.020    0.000 {built-in method _struct.pack}
        2    0.000    0.000    0.019    0.010 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:9(__init__)
       56    0.000    0.000    0.019    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1329(_check_set_wise_labels)
    93318    0.017    0.000    0.019    0.000 {built-in method builtins.isinstance}
      126    0.003    0.000    0.018    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:41(unique_labels)
   134368    0.018    0.000    0.018    0.000 {method 'tell' of '_io.BytesIO' objects}
4493/4492    0.008    0.000    0.018    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:255(inner)
    48088    0.012    0.000    0.018    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:330(<genexpr>)
   134360    0.017    0.000    0.017    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:605(persistent_id)
     4492    0.006    0.000    0.016    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:228(_open_file_like)
    15136    0.012    0.000    0.015    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:438(__missing__)
     4492    0.014    0.000    0.014    0.000 {method '_write_file' of 'torch._C.FloatStorageBase' objects}
      144    0.001    0.000    0.014    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:348(print_status)
      112    0.000    0.000    0.012    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/preprocessing/_label.py:119(transform)
       51    0.000    0.000    0.011    0.000 {built-in method builtins.next}
    92425    0.011    0.000    0.011    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_jit_internal.py:750(is_scripting)
      378    0.000    0.000    0.011    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:76(<genexpr>)
      120    0.000    0.000    0.011    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:341(disp_trim)
       24    0.000    0.000    0.011    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:613(write)
     4492    0.011    0.000    0.011    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:272(_is_compressed_file)
     2246    0.011    0.000    0.011    0.000 {built-in method zeros_like}
       48    0.000    0.000    0.010    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:622(external_write_mode)
      250    0.010    0.000    0.010    0.000 {built-in method stack}
        2    0.001    0.001    0.010    0.005 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:86(_set_weights)
    47292    0.010    0.000    0.010    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:514(put)
      112    0.000    0.000    0.009    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:151(_encode)
     1648    0.009    0.000    0.009    0.000 {built-in method rand}
       24    0.000    0.000    0.009    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:117(__exit__)
    31444    0.009    0.000    0.009    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/__init__.py:265(is_storage)
        1    0.000    0.000    0.009    0.009 /home/dell7810/Devanshu/CRM/crm/crm/utils/utils.py:33(seed_all)
      112    0.001    0.000    0.008    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:193(_check_unknown)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/adam.py:34(__init__)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:33(__init__)
        2    0.000    0.000    0.008    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:46(is_available)
        2    0.008    0.004    0.008    0.004 {built-in method torch._C._cuda_getDeviceCount}
     4492    0.004    0.000    0.008    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_namedtensor_internals.py:10(check_serializing_named_tensor)
        2    0.002    0.001    0.007    0.004 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/optim/optimizer.py:207(add_param_group)
      504    0.002    0.000    0.007    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:117(is_multilabel)
     4492    0.005    0.000    0.007    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:193(_is_path)
     4492    0.004    0.000    0.007    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:164(location_tag)
      168    0.000    0.000    0.006    0.000 <__array_function__ internals>:2(setdiff1d)
    34986    0.006    0.000    0.006    0.000 {built-in method builtins.issubclass}
      168    0.000    0.000    0.006    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:784(setdiff1d)
     4492    0.006    0.000    0.006    0.000 {method 'storage' of 'torch._C._TensorBase' objects}
    47704    0.006    0.000    0.006    0.000 {built-in method unicodedata.east_asian_width}
     4692    0.005    0.000    0.005    0.000 {method 'size' of 'torch._C._TensorBase' objects}
      168    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(in1d)
     4494    0.004    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:720(__hash__)
     4500    0.003    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:744(save_bool)
     4493    0.003    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:329(__hash__)
      168    0.003    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:519(in1d)
        2    0.001    0.000    0.005    0.002 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:12(<listcomp>)
      760    0.000    0.000    0.005    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:143(inner)
     4619    0.004    0.000    0.004    0.000 {built-in method builtins.sorted}
      484    0.002    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:253(_num_samples)
      826    0.001    0.000    0.004    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:8(__init__)
     1010    0.001    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:165(simplefilter)
      880    0.004    0.000    0.004    0.000 {built-in method tensor}
      971    0.003    0.000    0.004    0.000 {method 'format' of 'str' objects}
      100    0.001    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2204(nll_loss)
      554    0.004    0.000    0.004    0.000 {method 'write' of '_io.TextIOWrapper' objects}
       15    0.004    0.000    0.004    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:120(<dictcomp>)
        1    0.001    0.001    0.004    0.004 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:63(to)
      378    0.000    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:104(<genexpr>)
      218    0.001    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1440(moveto)
        6    0.000    0.000    0.004    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/auto.py:38(trange)
      126    0.000    0.000    0.004    0.000 <__array_function__ internals>:2(average)
     4492    0.002    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:183(normalize_storage_type)
     4492    0.004    0.000    0.004    0.000 {method 'has_names' of 'torch._C._TensorBase' objects}
      420    0.001    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:994(column_or_1d)
      252    0.000    0.000    0.004    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:23(_unique_multiclass)
      184    0.000    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:328(<listcomp>)
      126    0.001    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/function_base.py:280(average)
     4492    0.003    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:224(__exit__)
     1010    0.002    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:181(_add_filter)
      126    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(union1d)
        6    0.000    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/asyncio.py:23(__init__)
     3424    0.002    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1436(info)
        6    0.000    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:846(__init__)
      112    0.001    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1265(_prf_divide)
     8987    0.003    0.000    0.003    0.000 {built-in method builtins.hash}
      126    0.000    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:743(union1d)
     4492    0.003    0.000    0.003    0.000 {method 'size' of 'torch._C.FloatStorageBase' objects}
     4492    0.003    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:199(__init__)
      136    0.003    0.000    0.003    0.000 {built-in method argmax}
     4492    0.003    0.000    0.003    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:116(_cpu_tag)
      144    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:342(fp_write)
     4492    0.002    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/utils/hooks.py:52(warn_if_has_hooks)
        2    0.001    0.001    0.002    0.001 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:117(_assign_layers)
       10    0.002    0.000    0.002    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:71(<dictcomp>)
       80    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:28(_make_grads)
    24/16    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1464(save_function)
       12    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1264(close)
      537    0.002    0.000    0.002    0.000 {method 'reduce' of 'numpy.ufunc' objects}
      100    0.002    0.000    0.002    0.000 {built-in method torch._C._nn.nll_loss}
      154    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(any)
     4492    0.002    0.000    0.002    0.000 {method 'stride' of 'torch._C._TensorBase' objects}
      824    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:198(search)
     4492    0.002    0.000    0.002    0.000 {method 'fileno' of '_io._IOBase' objects}
       56    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/preprocessing/_label.py:85(fit)
    15167    0.002    0.000    0.002    0.000 {built-in method builtins.callable}
     9495    0.002    0.000    0.002    0.000 {built-in method builtins.iter}
     1047    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/abc.py:96(__instancecheck__)
       10    0.002    0.000    0.002    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:85(<dictcomp>)
        1    0.000    0.000    0.002    0.002 main.py:21(cmd_line_args)
       24    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:108(__enter__)
     4492    0.002    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:314(_check_dill_version)
       52    0.002    0.000    0.002    0.000 {method 'write' of '_io.BufferedWriter' objects}
      849    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:289(_compile)
      200    0.002    0.000    0.002    0.000 {method 'reshape' of 'torch._C._TensorBase' objects}
      197    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:69(_wrapreduction)
      154    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2268(any)
     4492    0.002    0.000    0.002    0.000 {method 'storage_offset' of 'torch._C._TensorBase' objects}
      420    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(ravel)
     1047    0.001    0.000    0.002    0.000 {built-in method _abc._abc_instancecheck}
     1010    0.001    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:458(__enter__)
      168    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/numeric.py:149(ones)
       80    0.002    0.000    0.002    0.000 {built-in method ones_like}
       56    0.000    0.000    0.002    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/_encode.py:7(_unique)
     4506    0.001    0.000    0.001    0.000 {method 'keys' of 'dict' objects}
       84    0.000    0.000    0.001    0.000 {method 'mean' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.001    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2321(train_test_split)
      228    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:288(format_interval)
     5012    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1599(is_dill)
     8984    0.001    0.000    0.001    0.000 {method 'flush' of '_io.BytesIO' objects}
      240    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:222(_is_ascii)
       84    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:162(_mean)
       32    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:1055(save_global)
      168    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(searchsorted)
        5    0.001    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:106(<dictcomp>)
      120    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1445(format_dict)
     1404    0.001    0.000    0.001    0.000 {built-in method numpy.empty}
        2    0.001    0.000    0.001    0.001 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:76(_setup_neurons)
     1235    0.001    0.000    0.001    0.000 {method 'flatten' of 'numpy.ndarray' objects}
       56    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
     3424    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1689(isEnabledFor)
        1    0.000    0.000    0.001    0.001 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1638(__init__)
        7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:759(compile)
     1123    0.001    0.000    0.001    0.000 {method 'to' of 'torch._C._TensorBase' objects}
       24    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1308(clear)
      183    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(concatenate)
      570    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:233(__call__)
     3256    0.001    0.000    0.001    0.000 {built-in method numpy.asanyarray}
     1010    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:477(__exit__)
     1014    0.001    0.000    0.001    0.000 {method 'remove' of 'list' objects}
       56    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(isposinf)
       85    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:89(__exit__)
      144    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:850(save_str)
     1123    0.001    0.000    0.001    0.000 {method 'detach' of 'torch._C._TensorBase' objects}
      154    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:54(_any)
     4492    0.001    0.000    0.001    0.000 {method 'getvalue' of '_io.BytesIO' objects}
      420    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1718(ravel)
      108    0.001    0.000    0.001    0.000 {built-in method now}
      168    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(copyto)
      112    0.000    0.000    0.001    0.000 {method 'any' of 'numpy.ndarray' objects}
     1235    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:125(_unpack_tuple)
     4492    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/serialization.py:202(__enter__)
      168    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1283(searchsorted)
      420    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(shape)
      170    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:166(__init__)
      112    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1140(check_is_fitted)
      100    0.001    0.000    0.001    0.000 {method 'item' of 'torch._C._TensorBase' objects}
        4    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:927(save_code)
       56    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:285(hstack)
      120    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:188(__format__)
       85    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:80(__init__)
     2366    0.001    0.000    0.001    0.000 {built-in method builtins.max}
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1569(split)
      824    0.001    0.000    0.001    0.000 {method 'search' of 're.Pattern' objects}
     1777    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
       85    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/grad_mode.py:85(__enter__)
     1010    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/warnings.py:437(__init__)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1920(_iter_indices)
      144    0.000    0.000    0.001    0.000 {method 'sum' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:1385(save_type)
     4492    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:1149(cast)
        9    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1337(add_argument)
       56    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:48(func)
  500/485    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/abc.py:100(__subclasscheck__)
      224    0.001    0.000    0.001    0.000 {built-in method numpy.array}
        6    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:560(__new__)
      174    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:51(_wrapfunc)
      138    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:104(acquire)
       56    0.001    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:127(isposinf)
        7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:937(parse)
       18    0.001    0.000    0.001    0.000 {built-in method io.open}
        2    0.000    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:108(_topological_sort)
      384    0.001    0.000    0.001    0.000 {method 'sub' of 're.Pattern' objects}
      144    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:46(_sum)
     14/7    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:435(_parse_sub)
      368    0.001    0.000    0.001    0.000 {method 'flush' of '_io.TextIOWrapper' objects}
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/random.py:98(manual_seed_all)
   826/48    0.001    0.000    0.001    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:96(_topological_sort_util)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:112(_lazy_call)
      138    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:108(release)
        2    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:193(format_stack)
       21    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:250(compile)
     15/8    0.000    0.000    0.001    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:493(_parse)
      169    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(bincount)
     2190    0.000    0.000    0.001    0.000 {built-in method numpy.asarray}
  500/485    0.001    0.000    0.001    0.000 {built-in method _abc._abc_subclasscheck}
       78    0.000    0.000    0.001    0.000 main.py:58(write)
       42    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(sum)
      120    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:155(__init__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:200(extract_stack)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:321(extract)
    62/61    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/random.py:22(manual_seed)
       84    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_methods.py:66(_count_reduce_items)
     1321    0.000    0.000    0.000    0.000 {method 'readline' of '_io.TextIOWrapper' objects}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2480(_get_formatter)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:161(__init__)
      924    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       15    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1767(parse_args)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1774(parse_known_args)
       42    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2123(sum)
      168    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       76    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:58(__iter__)
     3030    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
     2546    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1255(__init__)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:598(_code)
      236    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:46(<listcomp>)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:735(gettext)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:660(dgettext)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1809(_parse_known_args)
     1886    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:579(translation)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:486(check_array)
       56    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
      778    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:127(<listcomp>)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:538(find)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:212(end_framing)
       33    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:285(line)
      218    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:319(_term_move_up)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:989(is_scalar_nan)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1029(check_random_state)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1877(consume_optional)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1988(split)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:15(getline)
     1010    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/_monitor.py:30(__init__)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:583(_decr_instances)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:70(_set_output_neurons)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/_fx/graph_module.py:24(patched_getline)
      255    0.000    0.000    0.000    0.000 {built-in method torch._C.is_grad_enabled}
       42    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
      112    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:1204(<listcomp>)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:37(getlines)
       30    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:657(get_lock)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:910(_locate_function)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:82(updatecache)
      3/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:986(_find_and_load)
       28    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:896(_import_module)
     1235    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:133(_unique_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2084(_match_argument)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:92(__init__)
      3/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:834(start)
      378    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/multiclass.py:107(<genexpr>)
      2/1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:23(atleast_1d)
     26/7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:71(_compile)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:118(create_mp_lock)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/re.py:188(match)
     2248    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:49(<genexpr>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:70(RLock)
      200    0.000    0.000    0.000    0.000 {method 'item' of 'numpy.generic' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:282(_screen_shape_linux)
      138    0.000    0.000    0.000    0.000 {method 'acquire' of '_multiprocessing.SemLock' objects}
      100    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2461(<listcomp>)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:357(indexable)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:186(__init__)
      576    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       42    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:50(__init__)
      989    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
       30    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2158(<listcomp>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:890(_find_spec)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:540(wait)
        1    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:53(<listcomp>)
       40    0.000    0.000    0.000    0.000 {built-in method posix.stat}
      420    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1928(shape)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:270(wait)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:72(inner)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:293(shuffle)
      197    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:70(<dictcomp>)
       15    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:119(<listcomp>)
      200    0.000    0.000    0.000    0.000 {built-in method builtins.any}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:576(_get_free_pos)
      362    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:536(_compile_info)
        4    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
       24    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1399(find_spec)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:22(func)
       48    0.000    0.000    0.000    0.000 {method 'numpy' of 'torch._C._TensorBase' objects}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1367(_get_spec)
      120    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:57(__init__)
      120    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:169(colour)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:218(_vhstack_dispatcher)
       26    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/genericpath.py:16(exists)
      100    0.000    0.000    0.000    0.000 {method 'dim' of 'torch._C._TensorBase' objects}
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:26(__exit__)
      826    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:24(set_successor_neurons)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2104(<listcomp>)
      372    0.000    0.000    0.000    0.000 {built-in method time.time}
      170    0.000    0.000    0.000    0.000 {built-in method torch._C._set_grad_enabled}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:388(open)
        1    0.000    0.000    0.000    0.000 {function SeedSequence.generate_state at 0x7f6b78f959d0}
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1498(find_spec)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/shutil.py:1312(get_terminal_size)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:47(_check_zero_division)
      112    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/inspect.py:72(isclass)
       83    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:250(_randbelow_with_getrandbits)
      120    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:61(__format__)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:238(helper)
      826    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/neuron.py:27(set_predecessor_neurons)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2446(<genexpr>)
       10    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:70(<listcomp>)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2126(<listcomp>)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:1021(_approximate_mode)
      100    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/functional.py:2250(<listcomp>)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:307(_safe_indexing)
      2/1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:347(__getitem__)
       72    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:640(<genexpr>)
       56    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
      124    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:162(__init__)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:71(join)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:579(<setcomp>)
        6    0.000    0.000    0.000    0.000 {built-in method fcntl.ioctl}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/joblib/externals/loky/backend/__init__.py:8(_make_name)
       84    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:171(__eq__)
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:112(__enter__)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:452(__init__)
      112    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {method 'readlines' of '_io._IOBase' objects}
      140    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:115(__exit__)
    33/14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:174(getwidth)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:106(remove)
       33    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:319(decode)
       42    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      146    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:164(__getitem__)
      420    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1924(_shape_dispatcher)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/gettext.py:212(_expand_lang)
      420    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1714(_ravel_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:144(__next__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:27(format_list)
      100    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/nn/_reduction.py:7(get_enum)
      174    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       32    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:322(_getattribute)
       10    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:84(<listcomp>)
        4    0.000    0.000    0.000    0.000 {method 'permutation' of 'numpy.random.mtrand.RandomState' objects}
       24    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:82(__init__)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:20(__enter__)
      112    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:207(_arrays_for_stack_dispatcher)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1747(_add_action)
      252    0.000    0.000    0.000    0.000 {method 'pop' of 'set' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:225(_list_indexing)
       80    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/autograd/__init__.py:60(_tensor_or_tensors_to_tuple)
      161    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
       22    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:355(_escape)
      138    0.000    0.000    0.000    0.000 {method 'release' of '_multiprocessing.SemLock' objects}
      171    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:670(__getitem__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1589(_add_action)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:388(format)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1388(add_argument_group)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1478(_get_optional_kwargs)
       59    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:254(get)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1285(fp_write)
        1    0.000    0.000    0.000    0.000 main.py:54(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:659(__init__)
      168    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1279(_searchsorted_dispatcher)
       20    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/tensor.py:624(__array__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:77(<listcomp>)
       77    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:233(__next)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1567(__init__)
      120    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:165(colour)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1856(take_action)
       56    0.000    0.000    0.000    0.000 {method 'tolist' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:90(_assert_all_finite)
        5    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:105(<listcomp>)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:938(__and__)
        1    0.000    0.000    0.000    0.000 {built-in method _thread.start_new_thread}
      183    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:148(concatenate)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:329(status_printer)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(split)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1398(_add_action)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:123(seed)
      140    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
       80    0.000    0.000    0.000    0.000 {method 'numel' of 'torch._C._TensorBase' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:154(numpyufunc)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:295(detect_encoding)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:53(checkcache)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:121(_path_join)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:133(rng)
       84    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
      168    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:1071(copyto)
      168    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:780(_setdiff1d_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:409(__init__)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/numeric.py:1858(isscalar)
       56    0.000    0.000    0.000    0.000 {built-in method math.isnan}
       33    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:799(split)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:586(_format_args)
      127    0.000    0.000    0.000    0.000 {built-in method from_iterable}
       62    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:761(__init__)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_bootlocale.py:33(getpreferredencoding)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(array_split)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:215(_supports_unicode)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:16(__init__)
      154    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2263(_any_dispatcher)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:96(closegroup)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:81(add)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:739(array_split)
      168    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:515(_in1d_dispatcher)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2458(cumsum)
        2    0.000    0.000    0.000    0.000 {function Random.seed at 0x7f6bee4e5790}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:2026(_validate_shuffle_split)
      169    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:883(bincount)
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2124(<dictcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tempfile.py:147(<listcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/utils/data_utils.py:126(<listcomp>)
      9/6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:461(_get_literal_prefix)
      126    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/arraysetops.py:739(_union1d_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2358(_get_values)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/dill/_dill.py:136(ndarraysubclassinstance)
       79    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:94(__init__)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:74(__eq__)
       36    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_weakrefset.py:52(_commit_removals)
       52    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:172(append)
       32    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:335(whichmodule)
      126    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/function_base.py:276(_average_dispatcher)
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:748(encode)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(amin)
       37    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1308(register)
       39    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:249(match)
       28    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
       73    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:32(seterr)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:237(_determine_key_type)
      130    0.000    0.000    0.000    0.000 {method 'getrandbits' of '_random.Random' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:116(__repr__)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:313(__call__)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:136(disable_on_exception)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2763(amin)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:762(__setattr__)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:123(<listcomp>)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:285(choice)
        2    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:105(__init__)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:135(_path_stat)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:429(__enter__)
       52    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:160(__len__)
       47    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:423(_simple)
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:224(__init__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_collections_abc.py:657(get)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:101(wrapper_setattr)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
       31    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:286(tell)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:276(_optimize_charset)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/linecache.py:147(lazycache)
       13    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:309(__init__)
       24    0.000    0.000    0.000    0.000 {method 'getbuffer' of '_io.BytesIO' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/_monitor.py:94(report)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/locale.py:384(normalize)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:369(<listcomp>)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:809(__init__)
        1    0.000    0.000    0.000    0.000 {method 'seed' of 'numpy.random.mtrand.RandomState' objects}
       12    0.000    0.000    0.000    0.000 {built-in method utcfromtimestamp}
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(argsort)
       11    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:120(_type_check)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:84(opengroup)
       16    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:740(save_none)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1152(_comparable)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1514(_pop_action_class)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/_config.py:24(get_config)
        2    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {built-in method torch._C._log_api_usage_once}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:505(__init__)
        9    0.000    0.000    0.000    0.000 {built-in method posix.get_terminal_size}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/__init__.py:234(<listcomp>)
        3    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(swapaxes)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/util.py:171(register_after_fork)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:909(__init__)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:337(_make_indexable)
       21    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1312(_registry_get)
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:201(_is_utf)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1156(__hash__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:319(read_or_stop)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1006(argsort)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:88(__getattr__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/copyreg.py:99(_slotnames)
       26    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:111(__init__)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/ufunclike.py:68(_dispatcher)
        2    0.000    0.000    0.000    0.000 /home/dell7810/Devanshu/CRM/crm/crm/core/network.py:48(parameters)
       83    0.000    0.000    0.000    0.000 {method 'bit_length' of 'int' objects}
       28    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:81(groups)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1031(__init__)
        3    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:851(__init__)
       56    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/shape_base.py:19(_atleast_1d_dispatcher)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2225(_get_nargs_pattern)
       17    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:159(__setitem__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:222(__init__)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(may_share_memory)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/tokenize.py:325(find_cookie)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/random.py:721(getrandbits)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:886(__init__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/types.py:171(__get__)
        8    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:646(_is_dunder)
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:631(__new__)
       53    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
       14    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:595(isstring)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:921(fix_flags)
       42    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2118(_sum_dispatcher)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:369(from_list)
       19    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:41(_get_sep)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:432(_generate_overlap_table)
       18    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:228(__init__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:550(swapaxes)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:358(<genexpr>)
       42    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:664(result_type)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1240(__init__)
       12    0.000    0.000    0.000    0.000 {built-in method _weakref.proxy}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1146(__del__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2414(_get_value)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:434(__exit__)
       12    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/metrics/_classification.py:2129(<genexpr>)
       27    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        7    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:219(_remove_dups_flatten)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/_config.py:16(_get_threadlocal_config)
       12    0.000    0.000    0.000    0.000 {built-in method builtins.setattr}
       30    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:209(start_framing)
       25    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:331(getstate)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:579(format)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:249(_compile_charset)
        9    0.000    0.000    0.000    0.000 {method 'fileno' of '_io.TextIOWrapper' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/posixpath.py:140(basename)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/_ufunc_config.py:131(geterr)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1527(_check_conflict)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1518(_get_handler)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/scipy/sparse/base.py:1205(isspmatrix)
        1    0.000    0.000    0.000    0.000 {built-in method math.ceil}
       13    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:292(walk_stack)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/traceback.py:243(__init__)
        2    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:605(<lambda>)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:76(__init__)
       17    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
       50    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:131(_get_kwargs)
       13    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:260(__init__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:202(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:570(_metavar_formatter)
        7    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x5573a55ec9a0}
        6    0.000    0.000    0.000    0.000 {method 'difference' of 'set' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1909(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1954(consume_positionals)
        1    0.000    0.000    0.000    0.000 {method 'manual_seed' of 'torch._C.Generator' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:65(_combine_flags)
       22    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/pkg_resources/extern/__init__.py:57(find_spec)
        8    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/pickle.py:205(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/utils/validation.py:476(_ensure_no_complex_data)
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2122(_parse_optional)
        8    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/utils.py:231(_screen_shape_wrapper)
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:903(__call__)
        1    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C.set_num_threads}
        9    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/pkg_resources/extern/__init__.py:24(_module_matches_namespace)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1177(_make_invoke_excepthook)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:172(_collect_type_vars)
        7    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:323(__new__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/os.py:752(decode)
        4    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:880(__call__)
       11    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:453(_get_iscased)
        2    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1330(_path_importer_cache)
        6    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       10    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:168(__setitem__)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_compile.py:492(_get_charset_prefix)
        2    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       19    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
        7    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:513(is_set)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:246(__enter__)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1983(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/_collections_abc.py:302(__subclasshook__)
        3    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/sklearn/model_selection/_split.py:1560(__init__)
        3    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:324(__eq__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:261(_is_owned)
       13    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:249(__exit__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1759(_get_positional_actions)
       13    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        1    0.000    0.000    0.000    0.000 {built-in method torch._C._cuda_isInBadFork}
        9    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        9    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/enum.py:753(value)
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:711(__eq__)
        9    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1306(current_thread)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1110(daemon)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
       11    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:218(_acquireLock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        6    0.000    0.000    0.000    0.000 main.py:62(flush)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/synchronize.py:90(_make_methods)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:233(get_context)
        3    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:734(_newname)
        2    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/weakref.py:328(__init__)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2106(_match_arguments_partial)
        7    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
        6    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:1300(<lambda>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:255(_release_save)
        4    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        4    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/sre_parse.py:162(__delitem__)
        8    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:186(__init__)
        5    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:604(<listcomp>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:258(_acquire_restore)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/typing.py:669(<genexpr>)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:227(_releaseLock)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2440(_check_value)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1760(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_relax_case)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_builtin}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1276(disable)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/threading.py:1095(daemon)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/torch/cuda/__init__.py:107(is_initialized)
        2    0.000    0.000    0.000    0.000 {method 'isdisjoint' of 'set' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/tqdm/std.py:100(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/urllib3/packages/six.py:190(find_spec)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/multiarray.py:1368(may_share_memory)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/util.py:48(debug)
        2    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/six.py:194(find_spec)
        1    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/logging/__init__.py:1675(getEffectiveLevel)
        2    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
        3    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:546(_swapaxes_dispatcher)
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2454(_cumsum_dispatcher)
        1    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/multiprocessing/context.py:197(get_start_method)
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_thread.lock' objects}
        2    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:1676(identity)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/importlib_metadata/_compat.py:56(find_spec)
        1    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/codecs.py:214(setstate)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:735(_array_split_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:134(_get_args)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:1002(_argsort_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/contextlib.py:59(_recreate_cm)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/argparse.py:2407(<listcomp>)
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/core/fromnumeric.py:2758(_amin_dispatcher)
        1    0.000    0.000    0.000    0.000 /home/dell7810/anaconda3/envs/crm/lib/python3.8/site-packages/numpy/lib/shape_base.py:795(_split_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}


Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
tensor([[7.5831, 5.4451]])
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
tensor([[7.5831, 5.4451]], grad_fn=<ViewBackward>)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
tensor(2.2494, grad_fn=<NllLossBackward>)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
tensor(2.2494)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
tensor(2.2494, grad_fn=<NllLossBackward>)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=26997)[0m tensor([[6.4484],
[2m[36m(DataWorker pid=26997)[0m         [7.5429]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=26997)[0m tensor(1)
[2m[36m(DataWorker pid=27014)[0m tensor([[6.4484],
[2m[36m(DataWorker pid=27014)[0m         [7.5429]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27014)[0m tensor(1)
[2m[36m(DataWorker pid=27010)[0m tensor([[6.4484],
[2m[36m(DataWorker pid=27010)[0m         [7.5429]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27010)[0m tensor(1)
[2m[36m(DataWorker pid=27012)[0m tensor([[6.4484],
[2m[36m(DataWorker pid=27012)[0m         [7.5429]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27012)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=27813)[0m tensor([[5.2378],
[2m[36m(DataWorker pid=27813)[0m         [5.0280]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27813)[0m tensor(1)
[2m[36m(DataWorker pid=27815)[0m tensor([[5.2378],
[2m[36m(DataWorker pid=27815)[0m         [5.0280]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27815)[0m tensor(1)
[2m[36m(DataWorker pid=27814)[0m tensor([[5.2378],
[2m[36m(DataWorker pid=27814)[0m         [5.0280]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27814)[0m tensor(1)
[2m[36m(DataWorker pid=27811)[0m tensor([[5.2378],
[2m[36m(DataWorker pid=27811)[0m         [5.0280]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=27811)[0m tensor(1)
Iter 0: 	accuracy is 0.8
Iter 10: 	accuracy is 0.8
Iter 20: 	accuracy is 0.8
Iter 30: 	accuracy is 0.8
Iter 40: 	accuracy is 0.8
Iter 50: 	accuracy is 0.8
Iter 60: 	accuracy is 0.8
Iter 70: 	accuracy is 0.8
Iter 80: 	accuracy is 0.8
Iter 90: 	accuracy is 0.8
Iter 100: 	accuracy is 0.8
Iter 110: 	accuracy is 0.8
Iter 120: 	accuracy is 0.8
Iter 130: 	accuracy is 0.8
Iter 140: 	accuracy is 0.8
Iter 150: 	accuracy is 0.8
Iter 160: 	accuracy is 0.8
Iter 170: 	accuracy is 0.8
Iter 180: 	accuracy is 0.8
Iter 190: 	accuracy is 0.8
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=29018)[0m tensor([[4.7453],
[2m[36m(DataWorker pid=29018)[0m         [4.3261]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29018)[0m tensor(1)
[2m[36m(DataWorker pid=29009)[0m tensor([[4.7453],
[2m[36m(DataWorker pid=29009)[0m         [4.3261]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29009)[0m tensor(1)
[2m[36m(DataWorker pid=29005)[0m tensor([[4.7453],
[2m[36m(DataWorker pid=29005)[0m         [4.3261]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29005)[0m tensor(1)
[2m[36m(DataWorker pid=29016)[0m tensor([[4.7453],
[2m[36m(DataWorker pid=29016)[0m         [4.3261]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29016)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=29805)[0m tensor([[5.8263],
[2m[36m(DataWorker pid=29805)[0m         [5.9690]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29805)[0m tensor(1)
[2m[36m(DataWorker pid=29815)[0m tensor([[5.8263],
[2m[36m(DataWorker pid=29815)[0m         [5.9690]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29815)[0m tensor(1)
[2m[36m(DataWorker pid=29798)[0m tensor([[5.8263],
[2m[36m(DataWorker pid=29798)[0m         [5.9690]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29798)[0m tensor(1)
[2m[36m(DataWorker pid=29814)[0m tensor([[5.8263],
[2m[36m(DataWorker pid=29814)[0m         [5.9690]], grad_fn=<StackBackward>)
[2m[36m(DataWorker pid=29814)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=30607)[0m tensor([[4.9847, 3.5681]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=30607)[0m tensor(1)
[2m[36m(DataWorker pid=30612)[0m tensor([[4.9847, 3.5681]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=30612)[0m tensor(1)
[2m[36m(DataWorker pid=30610)[0m tensor([[4.9847, 3.5681]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=30610)[0m tensor(1)
[2m[36m(DataWorker pid=30603)[0m tensor([[4.9847, 3.5681]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=30603)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=31458)[0m {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 1, 20: 0, 21: 0, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 0, 40: 0, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 0, 67: 0, 68: 0, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 1, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 1, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 0, 225: 0, 226: 0, 227: 0, 228: 1, 229: 0, 230: 0, 231: 0, 232: 1, 233: 0, 234: 0, 235: 0, 236: 0, 237: 0, 238: 0, 239: 0, 240: 0, 241: 0, 242: 0, 243: 0, 244: 0, 245: 0, 246: 0, 247: 0, 248: 0, 249: 0, 250: 0, 251: 0, 252: 0, 253: 0, 254: 0, 255: 0, 256: 0, 257: 0, 258: 0, 259: 0, 260: 0, 261: 0, 262: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0, 268: 0, 269: 0, 270: 0, 271: 0, 272: 0, 273: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 1, 279: 0, 280: 0, 281: 0, 282: 0, 283: 1, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 0, 290: 0, 291: 0, 292: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 298: 0, 299: 0, 300: 0, 301: 1, 302: 1, 303: 0, 304: 0, 305: 0, 306: 0, 307: 0, 308: 1, 309: 0, 310: 0, 311: 0, 312: 0, 313: 0, 314: 0, 315: 1, 316: 0, 317: 0, 318: 0, 319: 0, 320: 0, 321: 0, 322: 0, 323: 0, 324: 0, 325: 0, 326: 0, 327: 0, 328: 0, 329: 0, 330: 0, 331: 0, 332: 0, 333: 0, 334: 0, 335: 0, 336: 0, 337: 0, 338: 0, 339: 0, 340: 0, 341: 0, 342: 0, 343: 0, 344: 0, 345: 0, 346: 0, 347: 0, 348: 0, 349: 0, 350: 0, 351: 0, 352: 0, 353: 0, 354: 0, 355: 0, 356: 0, 357: 0, 358: 0, 359: 0, 360: 0, 361: 0, 362: 0, 363: 0, 364: 0, 365: 0, 366: 0, 367: 0, 368: 0, 369: 0, 370: 0, 371: 0, 372: 0, 373: 0, 374: 0, 375: 0, 376: 1, 377: 0, 378: 0, 379: 0, 380: 0, 381: 0, 382: 0, 383: 1, 384: 0, 385: 1, 386: 0, 387: 0, 388: 0, 389: 0, 390: 0, 391: 1, 392: 0, 393: 0, 394: 0, 395: 0, 396: 1, 397: 0, 398: 0, 399: 0, 400: 0, 401: 0, 402: 0, 403: 0, 404: 0, 405: 0, 406: 0, 407: 0, 408: 0, 409: 0, 410: 0, 411: 0, 412: 1, 413: 1}
[2m[36m(DataWorker pid=31469)[0m {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 1, 20: 0, 21: 0, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 0, 40: 0, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 0, 67: 0, 68: 0, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 1, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 1, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 0, 225: 0, 226: 0, 227: 0, 228: 1, 229: 0, 230: 0, 231: 0, 232: 1, 233: 0, 234: 0, 235: 0, 236: 0, 237: 0, 238: 0, 239: 0, 240: 0, 241: 0, 242: 0, 243: 0, 244: 0, 245: 0, 246: 0, 247: 0, 248: 0, 249: 0, 250: 0, 251: 0, 252: 0, 253: 0, 254: 0, 255: 0, 256: 0, 257: 0, 258: 0, 259: 0, 260: 0, 261: 0, 262: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0, 268: 0, 269: 0, 270: 0, 271: 0, 272: 0, 273: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 1, 279: 0, 280: 0, 281: 0, 282: 0, 283: 1, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 0, 290: 0, 291: 0, 292: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 298: 0, 299: 0, 300: 0, 301: 1, 302: 1, 303: 0, 304: 0, 305: 0, 306: 0, 307: 0, 308: 1, 309: 0, 310: 0, 311: 0, 312: 0, 313: 0, 314: 0, 315: 1, 316: 0, 317: 0, 318: 0, 319: 0, 320: 0, 321: 0, 322: 0, 323: 0, 324: 0, 325: 0, 326: 0, 327: 0, 328: 0, 329: 0, 330: 0, 331: 0, 332: 0, 333: 0, 334: 0, 335: 0, 336: 0, 337: 0, 338: 0, 339: 0, 340: 0, 341: 0, 342: 0, 343: 0, 344: 0, 345: 0, 346: 0, 347: 0, 348: 0, 349: 0, 350: 0, 351: 0, 352: 0, 353: 0, 354: 0, 355: 0, 356: 0, 357: 0, 358: 0, 359: 0, 360: 0, 361: 0, 362: 0, 363: 0, 364: 0, 365: 0, 366: 0, 367: 0, 368: 0, 369: 0, 370: 0, 371: 0, 372: 0, 373: 0, 374: 0, 375: 0, 376: 1, 377: 0, 378: 0, 379: 0, 380: 0, 381: 0, 382: 0, 383: 1, 384: 0, 385: 1, 386: 0, 387: 0, 388: 0, 389: 0, 390: 0, 391: 1, 392: 0, 393: 0, 394: 0, 395: 0, 396: 1, 397: 0, 398: 0, 399: 0, 400: 0, 401: 0, 402: 0, 403: 0, 404: 0, 405: 0, 406: 0, 407: 0, 408: 0, 409: 0, 410: 0, 411: 0, 412: 1, 413: 1}
[2m[36m(DataWorker pid=31460)[0m {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 1, 20: 0, 21: 0, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 0, 40: 0, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 0, 67: 0, 68: 0, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 1, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 1, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 0, 225: 0, 226: 0, 227: 0, 228: 1, 229: 0, 230: 0, 231: 0, 232: 1, 233: 0, 234: 0, 235: 0, 236: 0, 237: 0, 238: 0, 239: 0, 240: 0, 241: 0, 242: 0, 243: 0, 244: 0, 245: 0, 246: 0, 247: 0, 248: 0, 249: 0, 250: 0, 251: 0, 252: 0, 253: 0, 254: 0, 255: 0, 256: 0, 257: 0, 258: 0, 259: 0, 260: 0, 261: 0, 262: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0, 268: 0, 269: 0, 270: 0, 271: 0, 272: 0, 273: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 1, 279: 0, 280: 0, 281: 0, 282: 0, 283: 1, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 0, 290: 0, 291: 0, 292: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 298: 0, 299: 0, 300: 0, 301: 1, 302: 1, 303: 0, 304: 0, 305: 0, 306: 0, 307: 0, 308: 1, 309: 0, 310: 0, 311: 0, 312: 0, 313: 0, 314: 0, 315: 1, 316: 0, 317: 0, 318: 0, 319: 0, 320: 0, 321: 0, 322: 0, 323: 0, 324: 0, 325: 0, 326: 0, 327: 0, 328: 0, 329: 0, 330: 0, 331: 0, 332: 0, 333: 0, 334: 0, 335: 0, 336: 0, 337: 0, 338: 0, 339: 0, 340: 0, 341: 0, 342: 0, 343: 0, 344: 0, 345: 0, 346: 0, 347: 0, 348: 0, 349: 0, 350: 0, 351: 0, 352: 0, 353: 0, 354: 0, 355: 0, 356: 0, 357: 0, 358: 0, 359: 0, 360: 0, 361: 0, 362: 0, 363: 0, 364: 0, 365: 0, 366: 0, 367: 0, 368: 0, 369: 0, 370: 0, 371: 0, 372: 0, 373: 0, 374: 0, 375: 0, 376: 1, 377: 0, 378: 0, 379: 0, 380: 0, 381: 0, 382: 0, 383: 1, 384: 0, 385: 1, 386: 0, 387: 0, 388: 0, 389: 0, 390: 0, 391: 1, 392: 0, 393: 0, 394: 0, 395: 0, 396: 1, 397: 0, 398: 0, 399: 0, 400: 0, 401: 0, 402: 0, 403: 0, 404: 0, 405: 0, 406: 0, 407: 0, 408: 0, 409: 0, 410: 0, 411: 0, 412: 1, 413: 1}
[2m[36m(DataWorker pid=31465)[0m {0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 1, 8: 1, 9: 1, 10: 0, 11: 0, 12: 0, 13: 0, 14: 1, 15: 1, 16: 0, 17: 0, 18: 0, 19: 1, 20: 0, 21: 0, 22: 1, 23: 0, 24: 0, 25: 0, 26: 0, 27: 0, 28: 0, 29: 0, 30: 0, 31: 0, 32: 0, 33: 0, 34: 0, 35: 0, 36: 0, 37: 1, 38: 1, 39: 0, 40: 0, 41: 1, 42: 1, 43: 0, 44: 0, 45: 0, 46: 0, 47: 0, 48: 0, 49: 0, 50: 1, 51: 0, 52: 0, 53: 0, 54: 0, 55: 1, 56: 0, 57: 0, 58: 0, 59: 0, 60: 0, 61: 0, 62: 0, 63: 0, 64: 0, 65: 1, 66: 0, 67: 0, 68: 0, 69: 1, 70: 0, 71: 0, 72: 0, 73: 0, 74: 0, 75: 0, 76: 0, 77: 0, 78: 0, 79: 1, 80: 0, 81: 0, 82: 0, 83: 0, 84: 0, 85: 0, 86: 0, 87: 0, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 95: 0, 96: 0, 97: 0, 98: 0, 99: 0, 100: 1, 101: 0, 102: 0, 103: 0, 104: 0, 105: 0, 106: 0, 107: 1, 108: 0, 109: 0, 110: 0, 111: 0, 112: 0, 113: 0, 114: 0, 115: 0, 116: 0, 117: 0, 118: 0, 119: 0, 120: 0, 121: 0, 122: 0, 123: 0, 124: 0, 125: 0, 126: 0, 127: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 1, 133: 0, 134: 0, 135: 0, 136: 0, 137: 0, 138: 0, 139: 0, 140: 1, 141: 0, 142: 0, 143: 0, 144: 0, 145: 0, 146: 0, 147: 0, 148: 0, 149: 0, 150: 0, 151: 1, 152: 0, 153: 0, 154: 0, 155: 0, 156: 0, 157: 0, 158: 0, 159: 0, 160: 0, 161: 0, 162: 0, 163: 0, 164: 0, 165: 0, 166: 0, 167: 0, 168: 0, 169: 0, 170: 0, 171: 0, 172: 0, 173: 0, 174: 0, 175: 0, 176: 0, 177: 0, 178: 0, 179: 0, 180: 0, 181: 0, 182: 0, 183: 0, 184: 0, 185: 0, 186: 0, 187: 0, 188: 0, 189: 0, 190: 0, 191: 0, 192: 0, 193: 0, 194: 0, 195: 0, 196: 0, 197: 0, 198: 0, 199: 0, 200: 0, 201: 0, 202: 0, 203: 0, 204: 0, 205: 0, 206: 0, 207: 0, 208: 0, 209: 0, 210: 0, 211: 0, 212: 0, 213: 0, 214: 0, 215: 0, 216: 0, 217: 0, 218: 0, 219: 0, 220: 0, 221: 0, 222: 0, 223: 0, 224: 0, 225: 0, 226: 0, 227: 0, 228: 1, 229: 0, 230: 0, 231: 0, 232: 1, 233: 0, 234: 0, 235: 0, 236: 0, 237: 0, 238: 0, 239: 0, 240: 0, 241: 0, 242: 0, 243: 0, 244: 0, 245: 0, 246: 0, 247: 0, 248: 0, 249: 0, 250: 0, 251: 0, 252: 0, 253: 0, 254: 0, 255: 0, 256: 0, 257: 0, 258: 0, 259: 0, 260: 0, 261: 0, 262: 0, 263: 0, 264: 0, 265: 0, 266: 0, 267: 0, 268: 0, 269: 0, 270: 0, 271: 0, 272: 0, 273: 0, 274: 0, 275: 0, 276: 0, 277: 0, 278: 1, 279: 0, 280: 0, 281: 0, 282: 0, 283: 1, 284: 0, 285: 0, 286: 0, 287: 0, 288: 0, 289: 0, 290: 0, 291: 0, 292: 0, 293: 0, 294: 0, 295: 0, 296: 0, 297: 0, 298: 0, 299: 0, 300: 0, 301: 1, 302: 1, 303: 0, 304: 0, 305: 0, 306: 0, 307: 0, 308: 1, 309: 0, 310: 0, 311: 0, 312: 0, 313: 0, 314: 0, 315: 1, 316: 0, 317: 0, 318: 0, 319: 0, 320: 0, 321: 0, 322: 0, 323: 0, 324: 0, 325: 0, 326: 0, 327: 0, 328: 0, 329: 0, 330: 0, 331: 0, 332: 0, 333: 0, 334: 0, 335: 0, 336: 0, 337: 0, 338: 0, 339: 0, 340: 0, 341: 0, 342: 0, 343: 0, 344: 0, 345: 0, 346: 0, 347: 0, 348: 0, 349: 0, 350: 0, 351: 0, 352: 0, 353: 0, 354: 0, 355: 0, 356: 0, 357: 0, 358: 0, 359: 0, 360: 0, 361: 0, 362: 0, 363: 0, 364: 0, 365: 0, 366: 0, 367: 0, 368: 0, 369: 0, 370: 0, 371: 0, 372: 0, 373: 0, 374: 0, 375: 0, 376: 1, 377: 0, 378: 0, 379: 0, 380: 0, 381: 0, 382: 0, 383: 1, 384: 0, 385: 1, 386: 0, 387: 0, 388: 0, 389: 0, 390: 0, 391: 1, 392: 0, 393: 0, 394: 0, 395: 0, 396: 1, 397: 0, 398: 0, 399: 0, 400: 0, 401: 0, 402: 0, 403: 0, 404: 0, 405: 0, 406: 0, 407: 0, 408: 0, 409: 0, 410: 0, 411: 0, 412: 1, 413: 1}
[2m[36m(DataWorker pid=31465)[0m tensor([[5.5748, 4.9575]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=31465)[0m tensor(1)
[2m[36m(DataWorker pid=31458)[0m tensor([[5.5748, 4.9575]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=31458)[0m tensor(1)
[2m[36m(DataWorker pid=31469)[0m tensor([[5.5748, 4.9575]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=31469)[0m tensor(1)
[2m[36m(DataWorker pid=31460)[0m tensor([[5.5748, 4.9575]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=31460)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
[2m[36m(DataWorker pid=683)[0m tensor([[3.5450, 4.3331]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=683)[0m tensor(1)
[2m[36m(DataWorker pid=685)[0m tensor([[3.5450, 4.3331]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=685)[0m tensor(1)
[2m[36m(DataWorker pid=677)[0m tensor([[3.5450, 4.3331]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=677)[0m tensor(1)
[2m[36m(DataWorker pid=682)[0m tensor([[3.5450, 4.3331]], grad_fn=<ViewBackward>)
[2m[36m(DataWorker pid=682)[0m tensor(1)
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
{(0, 372): tensor([0.8997], requires_grad=True), (0, 204): tensor([0.6023], requires_grad=True), (0, 184): tensor([0.9941], requires_grad=True), (0, 158): tensor([0.1170], requires_grad=True), (0, 131): tensor([0.7624], requires_grad=True), (0, 116): tensor([0.0101], requires_grad=True), (0, 101): tensor([0.0094], requires_grad=True), (0, 98): tensor([0.4071], requires_grad=True), (0, 86): tensor([0.1246], requires_grad=True), (0, 82): tensor([0.5424], requires_grad=True), (0, 81): tensor([0.5653], requires_grad=True), (0, 78): tensor([0.8374], requires_grad=True), (0, 76): tensor([0.8708], requires_grad=True), (0, 35): tensor([0.1508], requires_grad=True), (0, 24): tensor([0.4885], requires_grad=True), (1, 287): tensor([0.9935], requires_grad=True), (1, 266): tensor([0.5894], requires_grad=True), (1, 176): tensor([0.8829], requires_grad=True), (1, 156): tensor([0.3364], requires_grad=True), (1, 137): tensor([0.5970], requires_grad=True), (1, 128): tensor([0.4210], requires_grad=True), (1, 120): tensor([0.2121], requires_grad=True), (1, 99): tensor([0.5115], requires_grad=True), (1, 77): tensor([0.1439], requires_grad=True), (1, 51): tensor([0.3531], requires_grad=True), (1, 48): tensor([0.9194], requires_grad=True), (1, 33): tensor([0.6020], requires_grad=True), (1, 32): tensor([0.9141], requires_grad=True), (1, 25): tensor([0.1324], requires_grad=True), (2, 267): tensor([0.1909], requires_grad=True), (2, 157): tensor([0.6685], requires_grad=True), (2, 154): tensor([0.3622], requires_grad=True), (2, 148): tensor([0.6290], requires_grad=True), (2, 144): tensor([0.1155], requires_grad=True), (2, 141): tensor([0.4744], requires_grad=True), (2, 66): tensor([0.8342], requires_grad=True), (2, 64): tensor([0.2126], requires_grad=True), (2, 51): tensor([0.8804], requires_grad=True), (2, 47): tensor([0.9982], requires_grad=True), (2, 31): tensor([0.6823], requires_grad=True), (3, 321): tensor([0.2166], requires_grad=True), (3, 187): tensor([0.0051], requires_grad=True), (3, 150): tensor([0.3278], requires_grad=True), (3, 124): tensor([0.4631], requires_grad=True), (3, 119): tensor([0.4897], requires_grad=True), (3, 108): tensor([0.6457], requires_grad=True), (3, 89): tensor([0.7485], requires_grad=True), (3, 71): tensor([0.6478], requires_grad=True), (3, 62): tensor([0.4904], requires_grad=True), (3, 35): tensor([0.3655], requires_grad=True), (3, 26): tensor([0.9173], requires_grad=True), (4, 391): tensor([0.0832], requires_grad=True), (4, 302): tensor([0.3916], requires_grad=True), (4, 301): tensor([0.8162], requires_grad=True), (4, 153): tensor([0.0004], requires_grad=True), (4, 134): tensor([0.7821], requires_grad=True), (4, 100): tensor([0.8150], requires_grad=True), (4, 99): tensor([0.4032], requires_grad=True), (4, 75): tensor([0.1687], requires_grad=True), (4, 55): tensor([0.6431], requires_grad=True), (4, 50): tensor([0.9682], requires_grad=True), (4, 42): tensor([0.5371], requires_grad=True), (4, 31): tensor([0.6342], requires_grad=True), (5, 288): tensor([0.1191], requires_grad=True), (5, 269): tensor([0.7044], requires_grad=True), (5, 192): tensor([0.3078], requires_grad=True), (5, 147): tensor([0.7012], requires_grad=True), (5, 130): tensor([0.0932], requires_grad=True), (5, 117): tensor([0.9377], requires_grad=True), (5, 93): tensor([0.4372], requires_grad=True), (5, 91): tensor([0.3928], requires_grad=True), (5, 87): tensor([0.2998], requires_grad=True), (5, 82): tensor([0.6590], requires_grad=True), (5, 73): tensor([0.9573], requires_grad=True), (5, 68): tensor([0.9650], requires_grad=True), (5, 47): tensor([0.0364], requires_grad=True), (5, 29): tensor([0.0865], requires_grad=True), (5, 26): tensor([0.7631], requires_grad=True), (6, 329): tensor([0.3595], requires_grad=True), (6, 264): tensor([0.9606], requires_grad=True), (6, 133): tensor([0.6576], requires_grad=True), (6, 103): tensor([0.8886], requires_grad=True), (6, 97): tensor([0.9660], requires_grad=True), (6, 88): tensor([0.6988], requires_grad=True), (6, 85): tensor([0.0195], requires_grad=True), (6, 61): tensor([0.7377], requires_grad=True), (6, 44): tensor([0.4970], requires_grad=True), (6, 43): tensor([0.0560], requires_grad=True), (7, 396): tensor([0.8099], requires_grad=True), (7, 383): tensor([0.9530], requires_grad=True), (7, 362): tensor([0.7903], requires_grad=True), (7, 278): tensor([0.2279], requires_grad=True), (7, 150): tensor([0.9738], requires_grad=True), (7, 142): tensor([0.1637], requires_grad=True), (7, 139): tensor([0.8378], requires_grad=True), (7, 125): tensor([0.8481], requires_grad=True), (7, 118): tensor([0.2233], requires_grad=True), (7, 114): tensor([0.9262], requires_grad=True), (7, 104): tensor([0.1459], requires_grad=True), (7, 88): tensor([0.9828], requires_grad=True), (7, 79): tensor([0.8644], requires_grad=True), (7, 70): tensor([0.8594], requires_grad=True), (7, 65): tensor([0.2404], requires_grad=True), (7, 63): tensor([0.7720], requires_grad=True), (8, 151): tensor([0.1123], requires_grad=True), (8, 143): tensor([0.9673], requires_grad=True), (8, 129): tensor([0.7172], requires_grad=True), (8, 123): tensor([0.9512], requires_grad=True), (8, 117): tensor([0.3282], requires_grad=True), (8, 79): tensor([0.5166], requires_grad=True), (8, 64): tensor([0.0122], requires_grad=True), (8, 55): tensor([0.6046], requires_grad=True), (8, 45): tensor([0.3080], requires_grad=True), (8, 41): tensor([0.6885], requires_grad=True), (8, 40): tensor([0.7493], requires_grad=True), (8, 37): tensor([0.8059], requires_grad=True), (9, 289): tensor([0.4132], requires_grad=True), (9, 228): tensor([0.9631], requires_grad=True), (9, 155): tensor([0.5291], requires_grad=True), (9, 138): tensor([0.1601], requires_grad=True), (9, 120): tensor([0.6430], requires_grad=True), (9, 107): tensor([0.3679], requires_grad=True), (9, 106): tensor([0.0382], requires_grad=True), (9, 90): tensor([0.8450], requires_grad=True), (9, 86): tensor([0.0659], requires_grad=True), (9, 84): tensor([0.4715], requires_grad=True), (9, 72): tensor([0.7147], requires_grad=True), (9, 71): tensor([0.3582], requires_grad=True), (9, 61): tensor([0.5806], requires_grad=True), (9, 56): tensor([0.8107], requires_grad=True), (9, 52): tensor([0.2574], requires_grad=True), (10, 341): tensor([0.4656], requires_grad=True), (10, 160): tensor([0.3985], requires_grad=True), (10, 146): tensor([0.1810], requires_grad=True), (10, 143): tensor([0.6615], requires_grad=True), (10, 102): tensor([0.1501], requires_grad=True), (10, 80): tensor([0.9274], requires_grad=True), (10, 76): tensor([0.7979], requires_grad=True), (10, 73): tensor([0.7402], requires_grad=True), (10, 60): tensor([0.6432], requires_grad=True), (10, 59): tensor([0.3026], requires_grad=True), (10, 54): tensor([0.5344], requires_grad=True), (10, 27): tensor([0.3427], requires_grad=True), (11, 410): tensor([0.4456], requires_grad=True), (11, 403): tensor([0.8078], requires_grad=True), (11, 382): tensor([0.4344], requires_grad=True), (11, 367): tensor([0.4913], requires_grad=True), (11, 149): tensor([0.8841], requires_grad=True), (11, 139): tensor([0.6077], requires_grad=True), (11, 129): tensor([0.7506], requires_grad=True), (11, 121): tensor([0.0657], requires_grad=True), (11, 113): tensor([0.0524], requires_grad=True), (11, 74): tensor([0.7218], requires_grad=True), (11, 68): tensor([0.0006], requires_grad=True), (11, 60): tensor([0.6365], requires_grad=True), (11, 58): tensor([0.8448], requires_grad=True), (11, 46): tensor([0.1534], requires_grad=True), (11, 34): tensor([0.3940], requires_grad=True), (11, 32): tensor([0.7624], requires_grad=True), (12, 371): tensor([0.1187], requires_grad=True), (12, 167): tensor([0.6612], requires_grad=True), (12, 149): tensor([0.6784], requires_grad=True), (12, 136): tensor([0.6143], requires_grad=True), (12, 128): tensor([0.2440], requires_grad=True), (12, 125): tensor([0.5615], requires_grad=True), (12, 109): tensor([0.8812], requires_grad=True), (12, 91): tensor([0.0362], requires_grad=True), (12, 90): tensor([0.9020], requires_grad=True), (12, 85): tensor([0.8243], requires_grad=True), (12, 78): tensor([0.4860], requires_grad=True), (12, 75): tensor([0.5745], requires_grad=True), (12, 57): tensor([0.3909], requires_grad=True), (12, 40): tensor([0.4667], requires_grad=True), (12, 39): tensor([0.4111], requires_grad=True), (13, 156): tensor([0.6507], requires_grad=True), (13, 104): tensor([0.6353], requires_grad=True), (13, 80): tensor([0.7305], requires_grad=True), (13, 72): tensor([0.8469], requires_grad=True), (13, 58): tensor([0.2423], requires_grad=True), (13, 49): tensor([0.4384], requires_grad=True), (13, 36): tensor([0.0766], requires_grad=True), (14, 315): tensor([0.5068], requires_grad=True), (14, 151): tensor([0.9789], requires_grad=True), (14, 132): tensor([0.5670], requires_grad=True), (14, 130): tensor([0.9032], requires_grad=True), (14, 116): tensor([0.1591], requires_grad=True), (14, 113): tensor([0.2546], requires_grad=True), (14, 96): tensor([0.1289], requires_grad=True), (14, 67): tensor([0.8087], requires_grad=True), (14, 66): tensor([0.3879], requires_grad=True), (14, 42): tensor([0.4302], requires_grad=True), (14, 38): tensor([0.6722], requires_grad=True), (14, 28): tensor([0.4504], requires_grad=True), (14, 25): tensor([0.9777], requires_grad=True), (15, 385): tensor([0.6391], requires_grad=True), (15, 348): tensor([0.3306], requires_grad=True), (15, 169): tensor([0.1485], requires_grad=True), (15, 159): tensor([0.5910], requires_grad=True), (15, 158): tensor([0.6595], requires_grad=True), (15, 140): tensor([0.2651], requires_grad=True), (15, 127): tensor([0.0478], requires_grad=True), (15, 103): tensor([0.0148], requires_grad=True), (15, 77): tensor([0.8541], requires_grad=True), (15, 46): tensor([0.2191], requires_grad=True), (15, 41): tensor([0.4018], requires_grad=True), (15, 38): tensor([0.0779], requires_grad=True), (15, 27): tensor([0.9101], requires_grad=True), (16, 199): tensor([0.2546], requires_grad=True), (16, 195): tensor([0.9879], requires_grad=True), (16, 172): tensor([0.2929], requires_grad=True), (16, 159): tensor([0.6340], requires_grad=True), (16, 152): tensor([0.4612], requires_grad=True), (16, 142): tensor([0.5167], requires_grad=True), (16, 122): tensor([0.6912], requires_grad=True), (16, 112): tensor([0.8252], requires_grad=True), (16, 110): tensor([0.7297], requires_grad=True), (16, 94): tensor([0.9753], requires_grad=True), (16, 84): tensor([0.7265], requires_grad=True), (16, 81): tensor([0.6957], requires_grad=True), (16, 54): tensor([0.9923], requires_grad=True), (16, 39): tensor([0.3099], requires_grad=True), (17, 404): tensor([0.5879], requires_grad=True), (17, 327): tensor([0.3521], requires_grad=True), (17, 239): tensor([0.0105], requires_grad=True), (17, 157): tensor([0.4058], requires_grad=True), (17, 146): tensor([0.0277], requires_grad=True), (17, 136): tensor([0.4849], requires_grad=True), (17, 133): tensor([0.6998], requires_grad=True), (17, 112): tensor([0.9815], requires_grad=True), (17, 106): tensor([0.1707], requires_grad=True), (17, 105): tensor([0.7002], requires_grad=True), (17, 101): tensor([0.6625], requires_grad=True), (17, 95): tensor([0.5390], requires_grad=True), (17, 83): tensor([0.5636], requires_grad=True), (17, 74): tensor([0.7354], requires_grad=True), (17, 53): tensor([0.6909], requires_grad=True), (17, 33): tensor([0.1444], requires_grad=True), (17, 30): tensor([0.2528], requires_grad=True), (18, 397): tensor([0.3709], requires_grad=True), (18, 147): tensor([0.8592], requires_grad=True), (18, 144): tensor([0.7643], requires_grad=True), (18, 135): tensor([0.0524], requires_grad=True), (18, 134): tensor([0.6556], requires_grad=True), (18, 131): tensor([0.1582], requires_grad=True), (18, 115): tensor([0.6304], requires_grad=True), (18, 102): tensor([0.0589], requires_grad=True), (18, 92): tensor([0.1529], requires_grad=True), (18, 89): tensor([0.1979], requires_grad=True), (18, 70): tensor([0.9732], requires_grad=True), (18, 56): tensor([0.9917], requires_grad=True), (18, 53): tensor([0.2525], requires_grad=True), (18, 45): tensor([0.8947], requires_grad=True), (18, 44): tensor([0.2576], requires_grad=True), (18, 28): tensor([0.6131], requires_grad=True), (19, 393): tensor([0.4471], requires_grad=True), (19, 283): tensor([0.2101], requires_grad=True), (19, 232): tensor([0.0714], requires_grad=True), (19, 152): tensor([0.8378], requires_grad=True), (19, 140): tensor([0.2614], requires_grad=True), (19, 126): tensor([0.8533], requires_grad=True), (19, 119): tensor([0.4857], requires_grad=True), (19, 111): tensor([0.5383], requires_grad=True), (19, 105): tensor([0.8763], requires_grad=True), (19, 100): tensor([0.3205], requires_grad=True), (19, 93): tensor([0.3581], requires_grad=True), (19, 69): tensor([0.9040], requires_grad=True), (19, 48): tensor([0.1190], requires_grad=True), (19, 37): tensor([0.2264], requires_grad=True), (19, 36): tensor([0.3295], requires_grad=True), (20, 387): tensor([0.4673], requires_grad=True), (20, 155): tensor([0.8565], requires_grad=True), (20, 145): tensor([0.3760], requires_grad=True), (20, 127): tensor([0.3850], requires_grad=True), (20, 124): tensor([0.4594], requires_grad=True), (20, 122): tensor([0.4403], requires_grad=True), (20, 115): tensor([0.8349], requires_grad=True), (20, 111): tensor([0.4702], requires_grad=True), (20, 98): tensor([0.3939], requires_grad=True), (20, 97): tensor([0.5356], requires_grad=True), (20, 96): tensor([0.6443], requires_grad=True), (20, 63): tensor([0.1946], requires_grad=True), (21, 197): tensor([0.1925], requires_grad=True), (21, 153): tensor([0.4363], requires_grad=True), (21, 148): tensor([0.4826], requires_grad=True), (21, 137): tensor([0.1847], requires_grad=True), (21, 121): tensor([0.4564], requires_grad=True), (21, 118): tensor([0.6795], requires_grad=True), (21, 92): tensor([0.7146], requires_grad=True), (21, 83): tensor([0.3296], requires_grad=True), (21, 67): tensor([0.7728], requires_grad=True), (21, 62): tensor([0.6797], requires_grad=True), (21, 59): tensor([0.2879], requires_grad=True), (21, 57): tensor([0.3302], requires_grad=True), (21, 52): tensor([0.9550], requires_grad=True), (21, 43): tensor([0.3040], requires_grad=True), (21, 29): tensor([0.0526], requires_grad=True), (21, 24): tensor([0.6125], requires_grad=True), (22, 373): tensor([0.3111], requires_grad=True), (22, 154): tensor([0.3823], requires_grad=True), (22, 145): tensor([0.8813], requires_grad=True), (22, 135): tensor([0.9820], requires_grad=True), (22, 132): tensor([0.0422], requires_grad=True), (22, 110): tensor([0.2598], requires_grad=True), (22, 109): tensor([0.3478], requires_grad=True), (22, 107): tensor([0.4414], requires_grad=True), (22, 95): tensor([0.1658], requires_grad=True), (22, 69): tensor([0.6916], requires_grad=True), (22, 65): tensor([0.9831], requires_grad=True), (22, 50): tensor([0.9379], requires_grad=True), (22, 49): tensor([0.5801], requires_grad=True), (22, 34): tensor([0.6938], requires_grad=True), (23, 324): tensor([0.5562], requires_grad=True), (23, 292): tensor([0.1404], requires_grad=True), (23, 231): tensor([0.4718], requires_grad=True), (23, 160): tensor([0.6382], requires_grad=True), (23, 141): tensor([0.3948], requires_grad=True), (23, 138): tensor([0.8517], requires_grad=True), (23, 126): tensor([0.0610], requires_grad=True), (23, 123): tensor([0.6777], requires_grad=True), (23, 114): tensor([0.7119], requires_grad=True), (23, 108): tensor([0.8678], requires_grad=True), (23, 94): tensor([0.0522], requires_grad=True), (23, 87): tensor([0.5799], requires_grad=True), (23, 30): tensor([0.1874], requires_grad=True), (24, 328): tensor([0.1599], requires_grad=True), (24, 322): tensor([0.6371], requires_grad=True), (24, 275): tensor([0.8740], requires_grad=True), (24, 230): tensor([0.8455], requires_grad=True), (24, 200): tensor([0.8033], requires_grad=True), (24, 162): tensor([0.8866], requires_grad=True), (25, 346): tensor([0.6777], requires_grad=True), (25, 318): tensor([0.3284], requires_grad=True), (25, 211): tensor([0.2962], requires_grad=True), (25, 201): tensor([0.1799], requires_grad=True), (26, 380): tensor([0.2310], requires_grad=True), (27, 365): tensor([0.7274], requires_grad=True), (27, 243): tensor([0.3416], requires_grad=True), (27, 219): tensor([0.7141], requires_grad=True), (27, 215): tensor([0.0975], requires_grad=True), (28, 220): tensor([0.7945], requires_grad=True), (28, 163): tensor([0.9529], requires_grad=True), (29, 412): tensor([0.2462], requires_grad=True), (29, 413): tensor([0.9687], requires_grad=True), (30, 206): tensor([0.0371], requires_grad=True), (31, 412): tensor([0.1069], requires_grad=True), (31, 413): tensor([0.8840], requires_grad=True), (32, 363): tensor([0.8861], requires_grad=True), (33, 412): tensor([0.2556], requires_grad=True), (33, 413): tensor([0.1265], requires_grad=True), (34, 355): tensor([0.2391], requires_grad=True), (34, 347): tensor([0.6598], requires_grad=True), (35, 412): tensor([0.2641], requires_grad=True), (35, 413): tensor([0.7634], requires_grad=True), (36, 354): tensor([0.8574], requires_grad=True), (36, 309): tensor([0.5067], requires_grad=True), (37, 277): tensor([0.8692], requires_grad=True), (38, 412): tensor([0.5455], requires_grad=True), (38, 413): tensor([0.1015], requires_grad=True), (39, 335): tensor([0.3058], requires_grad=True), (40, 395): tensor([0.1332], requires_grad=True), (40, 332): tensor([0.4663], requires_grad=True), (40, 255): tensor([0.0816], requires_grad=True), (41, 240): tensor([0.8870], requires_grad=True), (42, 234): tensor([0.3806], requires_grad=True), (42, 181): tensor([0.9619], requires_grad=True), (43, 333): tensor([0.8295], requires_grad=True), (43, 170): tensor([0.7324], requires_grad=True), (44, 210): tensor([0.8402], requires_grad=True), (45, 295): tensor([0.1379], requires_grad=True), (46, 400): tensor([0.9335], requires_grad=True), (47, 412): tensor([0.9306], requires_grad=True), (47, 413): tensor([0.9351], requires_grad=True), (48, 280): tensor([0.8100], requires_grad=True), (48, 180): tensor([0.9214], requires_grad=True), (49, 314): tensor([0.6190], requires_grad=True), (50, 316): tensor([0.4862], requires_grad=True), (50, 293): tensor([0.9930], requires_grad=True), (50, 196): tensor([0.1863], requires_grad=True), (51, 274): tensor([0.8874], requires_grad=True), (51, 235): tensor([0.4923], requires_grad=True), (52, 350): tensor([0.9294], requires_grad=True), (52, 307): tensor([0.2087], requires_grad=True), (52, 242): tensor([0.3570], requires_grad=True), (52, 179): tensor([0.1869], requires_grad=True), (53, 412): tensor([0.1007], requires_grad=True), (53, 413): tensor([0.5845], requires_grad=True), (54, 249): tensor([0.8135], requires_grad=True), (55, 247): tensor([0.9457], requires_grad=True), (56, 369): tensor([0.9283], requires_grad=True), (57, 412): tensor([0.2739], requires_grad=True), (57, 413): tensor([0.6739], requires_grad=True), (58, 412): tensor([0.3425], requires_grad=True), (58, 413): tensor([0.6119], requires_grad=True), (59, 254): tensor([0.2762], requires_grad=True), (60, 412): tensor([0.7347], requires_grad=True), (60, 413): tensor([0.1391], requires_grad=True), (61, 412): tensor([0.2592], requires_grad=True), (61, 413): tensor([0.5945], requires_grad=True), (62, 313): tensor([0.5538], requires_grad=True), (62, 214): tensor([0.3317], requires_grad=True), (63, 177): tensor([0.2974], requires_grad=True), (64, 325): tensor([0.8451], requires_grad=True), (65, 412): tensor([0.1350], requires_grad=True), (65, 413): tensor([0.9377], requires_grad=True), (66, 366): tensor([0.7473], requires_grad=True), (66, 342): tensor([0.8227], requires_grad=True), (66, 319): tensor([0.3359], requires_grad=True), (66, 299): tensor([0.6270], requires_grad=True), (66, 166): tensor([0.4205], requires_grad=True), (67, 282): tensor([0.7869], requires_grad=True), (67, 272): tensor([0.6990], requires_grad=True), (67, 246): tensor([0.0136], requires_grad=True), (67, 233): tensor([0.1684], requires_grad=True), (67, 212): tensor([0.9549], requires_grad=True), (68, 305): tensor([0.9149], requires_grad=True), (68, 291): tensor([0.1427], requires_grad=True), (68, 268): tensor([0.4589], requires_grad=True), (68, 259): tensor([0.6272], requires_grad=True), (68, 224): tensor([0.8725], requires_grad=True), (69, 381): tensor([0.7094], requires_grad=True), (69, 376): tensor([0.0559], requires_grad=True), (69, 364): tensor([0.5757], requires_grad=True), (70, 412): tensor([0.8118], requires_grad=True), (70, 413): tensor([0.7402], requires_grad=True), (71, 238): tensor([0.6297], requires_grad=True), (72, 303): tensor([0.9035], requires_grad=True), (72, 286): tensor([0.0688], requires_grad=True), (72, 227): tensor([0.5594], requires_grad=True), (72, 225): tensor([0.4182], requires_grad=True), (73, 358): tensor([0.8404], requires_grad=True), (73, 330): tensor([0.4936], requires_grad=True), (74, 357): tensor([0.8131], requires_grad=True), (74, 276): tensor([0.5288], requires_grad=True), (74, 273): tensor([0.9130], requires_grad=True), (74, 258): tensor([0.3945], requires_grad=True), (74, 229): tensor([0.8395], requires_grad=True), (75, 412): tensor([0.8231], requires_grad=True), (75, 413): tensor([0.1187], requires_grad=True), (76, 360): tensor([0.5943], requires_grad=True), (76, 168): tensor([0.5217], requires_grad=True), (77, 412): tensor([0.2592], requires_grad=True), (77, 413): tensor([0.2519], requires_grad=True), (78, 412): tensor([0.0463], requires_grad=True), (78, 413): tensor([0.9525], requires_grad=True), (79, 412): tensor([0.9231], requires_grad=True), (79, 413): tensor([0.5250], requires_grad=True), (80, 352): tensor([0.0681], requires_grad=True), (80, 339): tensor([0.1524], requires_grad=True), (80, 244): tensor([0.8219], requires_grad=True), (81, 384): tensor([0.9372], requires_grad=True), (81, 221): tensor([0.4275], requires_grad=True), (81, 182): tensor([0.0752], requires_grad=True), (82, 250): tensor([0.6488], requires_grad=True), (82, 165): tensor([0.0406], requires_grad=True), (83, 304): tensor([0.2220], requires_grad=True), (83, 290): tensor([0.9514], requires_grad=True), (83, 218): tensor([0.1345], requires_grad=True), (84, 390): tensor([0.0608], requires_grad=True), (84, 375): tensor([0.8473], requires_grad=True), (84, 217): tensor([0.8937], requires_grad=True), (84, 178): tensor([0.6749], requires_grad=True), (85, 412): tensor([0.1478], requires_grad=True), (85, 413): tensor([0.2064], requires_grad=True), (86, 359): tensor([0.7494], requires_grad=True), (86, 297): tensor([0.4886], requires_grad=True), (87, 402): tensor([0.7870], requires_grad=True), (88, 408): tensor([0.4411], requires_grad=True), (88, 284): tensor([0.8223], requires_grad=True), (88, 256): tensor([0.9642], requires_grad=True), (89, 174): tensor([0.0590], requires_grad=True), (90, 356): tensor([0.1807], requires_grad=True), (91, 262): tensor([0.3433], requires_grad=True), (91, 213): tensor([0.8968], requires_grad=True), (91, 188): tensor([0.9977], requires_grad=True), (92, 370): tensor([0.9970], requires_grad=True), (92, 271): tensor([0.0910], requires_grad=True), (93, 361): tensor([0.2741], requires_grad=True), (94, 389): tensor([0.1736], requires_grad=True), (95, 260): tensor([0.0004], requires_grad=True), (95, 226): tensor([0.5117], requires_grad=True), (95, 223): tensor([0.7398], requires_grad=True), (96, 331): tensor([0.0711], requires_grad=True), (96, 312): tensor([0.8255], requires_grad=True), (97, 412): tensor([0.3966], requires_grad=True), (97, 413): tensor([0.4386], requires_grad=True), (98, 222): tensor([0.8326], requires_grad=True), (99, 405): tensor([0.2069], requires_grad=True), (99, 388): tensor([0.1723], requires_grad=True), (99, 337): tensor([0.0192], requires_grad=True), (99, 261): tensor([0.8256], requires_grad=True), (100, 409): tensor([0.4034], requires_grad=True), (100, 398): tensor([0.4242], requires_grad=True), (101, 338): tensor([0.9634], requires_grad=True), (101, 175): tensor([0.6894], requires_grad=True), (102, 411): tensor([0.0255], requires_grad=True), (102, 257): tensor([0.5569], requires_grad=True), (102, 252): tensor([0.9705], requires_grad=True), (103, 340): tensor([0.5823], requires_grad=True), (103, 326): tensor([0.5503], requires_grad=True), (103, 281): tensor([0.0704], requires_grad=True), (104, 236): tensor([0.7037], requires_grad=True), (104, 173): tensor([0.0618], requires_grad=True), (104, 161): tensor([0.9542], requires_grad=True), (105, 412): tensor([0.5094], requires_grad=True), (105, 413): tensor([0.8052], requires_grad=True), (106, 412): tensor([0.6647], requires_grad=True), (106, 413): tensor([0.1012], requires_grad=True), (107, 386): tensor([0.7492], requires_grad=True), (107, 308): tensor([0.6672], requires_grad=True), (107, 189): tensor([0.8672], requires_grad=True), (108, 368): tensor([0.0586], requires_grad=True), (108, 186): tensor([0.9447], requires_grad=True), (109, 344): tensor([0.1193], requires_grad=True), (109, 336): tensor([0.8429], requires_grad=True), (109, 191): tensor([0.6164], requires_grad=True), (110, 251): tensor([0.4866], requires_grad=True), (111, 216): tensor([0.7424], requires_grad=True), (112, 412): tensor([0.4675], requires_grad=True), (112, 413): tensor([0.5671], requires_grad=True), (113, 164): tensor([0.2512], requires_grad=True), (114, 317): tensor([0.7244], requires_grad=True), (114, 263): tensor([0.9883], requires_grad=True), (115, 279): tensor([0.6471], requires_grad=True), (116, 377): tensor([0.3599], requires_grad=True), (116, 270): tensor([0.8923], requires_grad=True), (116, 253): tensor([0.7670], requires_grad=True), (116, 241): tensor([0.7871], requires_grad=True), (116, 205): tensor([0.0924], requires_grad=True), (116, 198): tensor([0.5699], requires_grad=True), (117, 345): tensor([0.2545], requires_grad=True), (117, 306): tensor([0.5450], requires_grad=True), (117, 202): tensor([0.6998], requires_grad=True), (118, 412): tensor([0.3315], requires_grad=True), (118, 413): tensor([0.7494], requires_grad=True), (119, 323): tensor([0.0981], requires_grad=True), (119, 298): tensor([0.9001], requires_grad=True), (120, 407): tensor([0.6874], requires_grad=True), (121, 374): tensor([0.6487], requires_grad=True), (121, 185): tensor([0.0516], requires_grad=True), (122, 294): tensor([0.3231], requires_grad=True), (122, 203): tensor([0.7375], requires_grad=True), (123, 412): tensor([0.5716], requires_grad=True), (123, 413): tensor([0.6931], requires_grad=True), (124, 392): tensor([0.6721], requires_grad=True), (124, 379): tensor([0.7049], requires_grad=True), (125, 334): tensor([0.8217], requires_grad=True), (125, 265): tensor([0.2217], requires_grad=True), (126, 399): tensor([0.7467], requires_grad=True), (126, 351): tensor([0.4211], requires_grad=True), (126, 208): tensor([0.8693], requires_grad=True), (127, 285): tensor([0.7388], requires_grad=True), (127, 209): tensor([0.5432], requires_grad=True), (128, 401): tensor([0.5151], requires_grad=True), (129, 394): tensor([0.9801], requires_grad=True), (129, 378): tensor([0.3369], requires_grad=True), (129, 311): tensor([0.5207], requires_grad=True), (129, 171): tensor([0.0688], requires_grad=True), (130, 207): tensor([0.3487], requires_grad=True), (130, 194): tensor([0.2494], requires_grad=True), (130, 183): tensor([0.2912], requires_grad=True), (131, 406): tensor([0.8405], requires_grad=True), (131, 237): tensor([0.1687], requires_grad=True), (131, 190): tensor([0.5491], requires_grad=True), (132, 300): tensor([0.1043], requires_grad=True), (132, 248): tensor([0.3654], requires_grad=True), (133, 349): tensor([0.2705], requires_grad=True), (133, 320): tensor([0.1697], requires_grad=True), (133, 310): tensor([0.2455], requires_grad=True), (134, 343): tensor([0.3654], requires_grad=True), (135, 296): tensor([0.5950], requires_grad=True), (135, 245): tensor([0.3094], requires_grad=True), (135, 193): tensor([0.1618], requires_grad=True), (136, 353): tensor([0.9038], requires_grad=True), (137, 412): tensor([0.7586], requires_grad=True), (137, 413): tensor([0.0811], requires_grad=True), (138, 412): tensor([0.5970], requires_grad=True), (138, 413): tensor([0.8729], requires_grad=True), (139, 412): tensor([0.0198], requires_grad=True), (139, 413): tensor([0.2372], requires_grad=True), (140, 412): tensor([0.2414], requires_grad=True), (140, 413): tensor([0.7929], requires_grad=True), (141, 412): tensor([0.2130], requires_grad=True), (141, 413): tensor([0.8855], requires_grad=True), (142, 412): tensor([0.7337], requires_grad=True), (142, 413): tensor([0.9928], requires_grad=True), (143, 412): tensor([0.5377], requires_grad=True), (143, 413): tensor([0.6174], requires_grad=True), (144, 412): tensor([0.3209], requires_grad=True), (144, 413): tensor([0.9932], requires_grad=True), (145, 412): tensor([0.6473], requires_grad=True), (145, 413): tensor([0.3592], requires_grad=True), (146, 412): tensor([0.9382], requires_grad=True), (146, 413): tensor([0.8582], requires_grad=True), (147, 412): tensor([0.3127], requires_grad=True), (147, 413): tensor([0.5701], requires_grad=True), (148, 412): tensor([0.3955], requires_grad=True), (148, 413): tensor([0.2780], requires_grad=True), (149, 412): tensor([0.5102], requires_grad=True), (149, 413): tensor([0.9537], requires_grad=True), (150, 412): tensor([0.5690], requires_grad=True), (150, 413): tensor([0.1389], requires_grad=True), (151, 412): tensor([0.1547], requires_grad=True), (151, 413): tensor([0.6505], requires_grad=True), (152, 412): tensor([0.7035], requires_grad=True), (152, 413): tensor([0.5003], requires_grad=True), (153, 412): tensor([0.8659], requires_grad=True), (153, 413): tensor([0.4451], requires_grad=True), (154, 412): tensor([0.0760], requires_grad=True), (154, 413): tensor([0.8324], requires_grad=True), (155, 412): tensor([0.1967], requires_grad=True), (155, 413): tensor([0.8475], requires_grad=True), (156, 412): tensor([0.2893], requires_grad=True), (156, 413): tensor([0.5689], requires_grad=True), (157, 412): tensor([0.1242], requires_grad=True), (157, 413): tensor([0.4661], requires_grad=True), (158, 412): tensor([0.5303], requires_grad=True), (158, 413): tensor([0.0822], requires_grad=True), (159, 412): tensor([0.2962], requires_grad=True), (159, 413): tensor([0.9555], requires_grad=True), (160, 412): tensor([0.4511], requires_grad=True), (160, 413): tensor([0.4048], requires_grad=True), (161, 412): tensor([0.2290], requires_grad=True), (161, 413): tensor([0.3193], requires_grad=True), (162, 412): tensor([0.1319], requires_grad=True), (162, 413): tensor([0.2943], requires_grad=True), (163, 412): tensor([0.3875], requires_grad=True), (163, 413): tensor([0.3262], requires_grad=True), (164, 412): tensor([0.1006], requires_grad=True), (164, 413): tensor([0.8982], requires_grad=True), (165, 412): tensor([0.6527], requires_grad=True), (165, 413): tensor([0.3528], requires_grad=True), (166, 412): tensor([0.6747], requires_grad=True), (166, 413): tensor([0.0875], requires_grad=True), (167, 412): tensor([0.1870], requires_grad=True), (167, 413): tensor([0.1354], requires_grad=True), (168, 412): tensor([0.7994], requires_grad=True), (168, 413): tensor([0.7926], requires_grad=True), (169, 412): tensor([0.4886], requires_grad=True), (169, 413): tensor([0.8279], requires_grad=True), (170, 412): tensor([0.0500], requires_grad=True), (170, 413): tensor([0.7035], requires_grad=True), (171, 412): tensor([0.6097], requires_grad=True), (171, 413): tensor([0.4274], requires_grad=True), (172, 412): tensor([0.5641], requires_grad=True), (172, 413): tensor([0.8570], requires_grad=True), (173, 412): tensor([0.9387], requires_grad=True), (173, 413): tensor([0.4489], requires_grad=True), (174, 412): tensor([0.4084], requires_grad=True), (174, 413): tensor([0.1152], requires_grad=True), (175, 412): tensor([0.3021], requires_grad=True), (175, 413): tensor([0.8737], requires_grad=True), (176, 412): tensor([0.9523], requires_grad=True), (176, 413): tensor([0.4003], requires_grad=True), (177, 412): tensor([0.6736], requires_grad=True), (177, 413): tensor([0.2584], requires_grad=True), (178, 412): tensor([0.6327], requires_grad=True), (178, 413): tensor([0.4962], requires_grad=True), (179, 412): tensor([0.5157], requires_grad=True), (179, 413): tensor([0.7273], requires_grad=True), (180, 412): tensor([0.8850], requires_grad=True), (180, 413): tensor([0.9670], requires_grad=True), (181, 412): tensor([0.2562], requires_grad=True), (181, 413): tensor([0.9671], requires_grad=True), (182, 412): tensor([0.1193], requires_grad=True), (182, 413): tensor([0.9405], requires_grad=True), (183, 412): tensor([0.0058], requires_grad=True), (183, 413): tensor([0.5008], requires_grad=True), (184, 412): tensor([0.5201], requires_grad=True), (184, 413): tensor([0.6907], requires_grad=True), (185, 412): tensor([0.6142], requires_grad=True), (185, 413): tensor([0.2695], requires_grad=True), (186, 412): tensor([0.4931], requires_grad=True), (186, 413): tensor([0.5584], requires_grad=True), (187, 412): tensor([0.8464], requires_grad=True), (187, 413): tensor([0.2917], requires_grad=True), (188, 412): tensor([0.1985], requires_grad=True), (188, 413): tensor([0.5846], requires_grad=True), (189, 412): tensor([0.9712], requires_grad=True), (189, 413): tensor([0.6099], requires_grad=True), (190, 412): tensor([0.6178], requires_grad=True), (190, 413): tensor([0.8131], requires_grad=True), (191, 412): tensor([0.4968], requires_grad=True), (191, 413): tensor([0.8869], requires_grad=True), (192, 412): tensor([0.1031], requires_grad=True), (192, 413): tensor([0.6173], requires_grad=True), (193, 412): tensor([0.8713], requires_grad=True), (193, 413): tensor([0.3696], requires_grad=True), (194, 412): tensor([0.1063], requires_grad=True), (194, 413): tensor([0.7472], requires_grad=True), (195, 412): tensor([0.7273], requires_grad=True), (195, 413): tensor([0.5912], requires_grad=True), (196, 412): tensor([0.9158], requires_grad=True), (196, 413): tensor([0.0601], requires_grad=True), (197, 412): tensor([0.8585], requires_grad=True), (197, 413): tensor([0.0487], requires_grad=True), (198, 412): tensor([0.0687], requires_grad=True), (198, 413): tensor([0.7444], requires_grad=True), (199, 412): tensor([0.3229], requires_grad=True), (199, 413): tensor([0.4100], requires_grad=True), (200, 412): tensor([0.1557], requires_grad=True), (200, 413): tensor([0.6272], requires_grad=True), (201, 412): tensor([0.1060], requires_grad=True), (201, 413): tensor([0.9196], requires_grad=True), (202, 412): tensor([0.7303], requires_grad=True), (202, 413): tensor([0.5760], requires_grad=True), (203, 412): tensor([0.4190], requires_grad=True), (203, 413): tensor([0.9515], requires_grad=True), (204, 412): tensor([0.9037], requires_grad=True), (204, 413): tensor([0.6048], requires_grad=True), (205, 412): tensor([0.3010], requires_grad=True), (205, 413): tensor([0.2531], requires_grad=True), (206, 412): tensor([0.0504], requires_grad=True), (206, 413): tensor([0.4846], requires_grad=True), (207, 412): tensor([0.1733], requires_grad=True), (207, 413): tensor([0.3399], requires_grad=True), (208, 412): tensor([0.0253], requires_grad=True), (208, 413): tensor([0.0373], requires_grad=True), (209, 412): tensor([0.6395], requires_grad=True), (209, 413): tensor([0.1842], requires_grad=True), (210, 412): tensor([0.1977], requires_grad=True), (210, 413): tensor([0.0494], requires_grad=True), (211, 412): tensor([0.3572], requires_grad=True), (211, 413): tensor([0.5790], requires_grad=True), (212, 412): tensor([0.3294], requires_grad=True), (212, 413): tensor([0.5235], requires_grad=True), (213, 412): tensor([0.3182], requires_grad=True), (213, 413): tensor([0.3998], requires_grad=True), (214, 412): tensor([0.3406], requires_grad=True), (214, 413): tensor([0.4068], requires_grad=True), (215, 412): tensor([0.8570], requires_grad=True), (215, 413): tensor([0.3151], requires_grad=True), (216, 412): tensor([0.2443], requires_grad=True), (216, 413): tensor([0.5349], requires_grad=True), (217, 412): tensor([0.8936], requires_grad=True), (217, 413): tensor([0.9200], requires_grad=True), (218, 412): tensor([0.6494], requires_grad=True), (218, 413): tensor([0.6243], requires_grad=True), (219, 412): tensor([0.2328], requires_grad=True), (219, 413): tensor([0.6047], requires_grad=True), (220, 412): tensor([0.1928], requires_grad=True), (220, 413): tensor([0.5696], requires_grad=True), (221, 412): tensor([0.6346], requires_grad=True), (221, 413): tensor([0.5115], requires_grad=True), (222, 412): tensor([0.1738], requires_grad=True), (222, 413): tensor([0.0191], requires_grad=True), (223, 412): tensor([0.1152], requires_grad=True), (223, 413): tensor([0.0268], requires_grad=True), (224, 412): tensor([0.3573], requires_grad=True), (224, 413): tensor([0.7711], requires_grad=True), (225, 412): tensor([0.1220], requires_grad=True), (225, 413): tensor([0.7720], requires_grad=True), (226, 412): tensor([0.6465], requires_grad=True), (226, 413): tensor([0.7851], requires_grad=True), (227, 412): tensor([0.4703], requires_grad=True), (227, 413): tensor([0.1039], requires_grad=True), (228, 412): tensor([0.7397], requires_grad=True), (228, 413): tensor([0.2356], requires_grad=True), (229, 412): tensor([0.3594], requires_grad=True), (229, 413): tensor([0.1323], requires_grad=True), (230, 412): tensor([0.1848], requires_grad=True), (230, 413): tensor([0.9564], requires_grad=True), (231, 412): tensor([0.5079], requires_grad=True), (231, 413): tensor([0.1372], requires_grad=True), (232, 412): tensor([0.5660], requires_grad=True), (232, 413): tensor([0.9120], requires_grad=True), (233, 412): tensor([0.1539], requires_grad=True), (233, 413): tensor([0.3817], requires_grad=True), (234, 412): tensor([0.9253], requires_grad=True), (234, 413): tensor([0.3961], requires_grad=True), (235, 412): tensor([0.7435], requires_grad=True), (235, 413): tensor([0.5539], requires_grad=True), (236, 412): tensor([0.9821], requires_grad=True), (236, 413): tensor([0.1207], requires_grad=True), (237, 412): tensor([0.8455], requires_grad=True), (237, 413): tensor([0.6629], requires_grad=True), (238, 412): tensor([0.7167], requires_grad=True), (238, 413): tensor([0.9156], requires_grad=True), (239, 412): tensor([0.6891], requires_grad=True), (239, 413): tensor([0.1493], requires_grad=True), (240, 412): tensor([0.6267], requires_grad=True), (240, 413): tensor([0.5496], requires_grad=True), (241, 412): tensor([0.2654], requires_grad=True), (241, 413): tensor([0.5301], requires_grad=True), (242, 412): tensor([0.9949], requires_grad=True), (242, 413): tensor([0.8893], requires_grad=True), (243, 412): tensor([0.0864], requires_grad=True), (243, 413): tensor([0.8747], requires_grad=True), (244, 412): tensor([0.4202], requires_grad=True), (244, 413): tensor([0.8504], requires_grad=True), (245, 412): tensor([0.1144], requires_grad=True), (245, 413): tensor([0.8638], requires_grad=True), (246, 412): tensor([0.8569], requires_grad=True), (246, 413): tensor([0.1725], requires_grad=True), (247, 412): tensor([0.2318], requires_grad=True), (247, 413): tensor([0.9219], requires_grad=True), (248, 412): tensor([0.8991], requires_grad=True), (248, 413): tensor([0.8308], requires_grad=True), (249, 412): tensor([0.5929], requires_grad=True), (249, 413): tensor([0.4090], requires_grad=True), (250, 412): tensor([0.7837], requires_grad=True), (250, 413): tensor([0.1078], requires_grad=True), (251, 412): tensor([0.8251], requires_grad=True), (251, 413): tensor([0.4436], requires_grad=True), (252, 412): tensor([0.8131], requires_grad=True), (252, 413): tensor([0.7881], requires_grad=True), (253, 412): tensor([0.1575], requires_grad=True), (253, 413): tensor([0.0129], requires_grad=True), (254, 412): tensor([0.2814], requires_grad=True), (254, 413): tensor([0.6162], requires_grad=True), (255, 412): tensor([0.2968], requires_grad=True), (255, 413): tensor([0.4737], requires_grad=True), (256, 412): tensor([0.7075], requires_grad=True), (256, 413): tensor([0.8291], requires_grad=True), (257, 412): tensor([0.8057], requires_grad=True), (257, 413): tensor([0.1870], requires_grad=True), (258, 412): tensor([0.5903], requires_grad=True), (258, 413): tensor([0.5873], requires_grad=True), (259, 412): tensor([0.0835], requires_grad=True), (259, 413): tensor([0.8776], requires_grad=True), (260, 412): tensor([0.1148], requires_grad=True), (260, 413): tensor([0.8958], requires_grad=True), (261, 412): tensor([0.8082], requires_grad=True), (261, 413): tensor([0.3453], requires_grad=True), (262, 412): tensor([0.3763], requires_grad=True), (262, 413): tensor([0.8855], requires_grad=True), (263, 412): tensor([0.1404], requires_grad=True), (263, 413): tensor([0.1470], requires_grad=True), (264, 412): tensor([0.3071], requires_grad=True), (264, 413): tensor([0.8526], requires_grad=True), (265, 412): tensor([0.8620], requires_grad=True), (265, 413): tensor([0.5823], requires_grad=True), (266, 412): tensor([0.3363], requires_grad=True), (266, 413): tensor([0.0146], requires_grad=True), (267, 412): tensor([0.0261], requires_grad=True), (267, 413): tensor([0.5180], requires_grad=True), (268, 412): tensor([0.3974], requires_grad=True), (268, 413): tensor([0.3502], requires_grad=True), (269, 412): tensor([0.4069], requires_grad=True), (269, 413): tensor([0.6371], requires_grad=True), (270, 412): tensor([0.6428], requires_grad=True), (270, 413): tensor([0.3256], requires_grad=True), (271, 412): tensor([0.9416], requires_grad=True), (271, 413): tensor([0.3182], requires_grad=True), (272, 412): tensor([0.2391], requires_grad=True), (272, 413): tensor([0.2657], requires_grad=True), (273, 412): tensor([0.5930], requires_grad=True), (273, 413): tensor([0.1995], requires_grad=True), (274, 412): tensor([0.1279], requires_grad=True), (274, 413): tensor([0.1893], requires_grad=True), (275, 412): tensor([0.2564], requires_grad=True), (275, 413): tensor([0.4157], requires_grad=True), (276, 412): tensor([0.7943], requires_grad=True), (276, 413): tensor([0.5232], requires_grad=True), (277, 412): tensor([0.7414], requires_grad=True), (277, 413): tensor([0.1896], requires_grad=True), (278, 412): tensor([0.8602], requires_grad=True), (278, 413): tensor([0.2986], requires_grad=True), (279, 412): tensor([0.2585], requires_grad=True), (279, 413): tensor([0.7302], requires_grad=True), (280, 412): tensor([0.5506], requires_grad=True), (280, 413): tensor([0.4142], requires_grad=True), (281, 412): tensor([0.2229], requires_grad=True), (281, 413): tensor([0.9807], requires_grad=True), (282, 412): tensor([0.6158], requires_grad=True), (282, 413): tensor([0.4075], requires_grad=True), (283, 412): tensor([0.5598], requires_grad=True), (283, 413): tensor([0.5953], requires_grad=True), (284, 412): tensor([0.7263], requires_grad=True), (284, 413): tensor([0.7141], requires_grad=True), (285, 412): tensor([0.3482], requires_grad=True), (285, 413): tensor([0.6573], requires_grad=True), (286, 412): tensor([0.3385], requires_grad=True), (286, 413): tensor([0.2009], requires_grad=True), (287, 412): tensor([0.8355], requires_grad=True), (287, 413): tensor([0.8739], requires_grad=True), (288, 412): tensor([0.4980], requires_grad=True), (288, 413): tensor([0.4116], requires_grad=True), (289, 412): tensor([0.9446], requires_grad=True), (289, 413): tensor([0.0676], requires_grad=True), (290, 412): tensor([0.3392], requires_grad=True), (290, 413): tensor([0.6992], requires_grad=True), (291, 412): tensor([0.2190], requires_grad=True), (291, 413): tensor([0.3430], requires_grad=True), (292, 412): tensor([0.2968], requires_grad=True), (292, 413): tensor([0.4119], requires_grad=True), (293, 412): tensor([0.8589], requires_grad=True), (293, 413): tensor([0.1151], requires_grad=True), (294, 412): tensor([0.1482], requires_grad=True), (294, 413): tensor([0.3259], requires_grad=True), (295, 412): tensor([0.4845], requires_grad=True), (295, 413): tensor([0.0197], requires_grad=True), (296, 412): tensor([0.3042], requires_grad=True), (296, 413): tensor([0.2320], requires_grad=True), (297, 412): tensor([0.4853], requires_grad=True), (297, 413): tensor([0.2566], requires_grad=True), (298, 412): tensor([0.0571], requires_grad=True), (298, 413): tensor([0.6433], requires_grad=True), (299, 412): tensor([0.6430], requires_grad=True), (299, 413): tensor([0.7776], requires_grad=True), (300, 412): tensor([0.7561], requires_grad=True), (300, 413): tensor([0.0841], requires_grad=True), (301, 412): tensor([0.3788], requires_grad=True), (301, 413): tensor([0.9615], requires_grad=True), (302, 412): tensor([0.2847], requires_grad=True), (302, 413): tensor([0.6893], requires_grad=True), (303, 412): tensor([0.0376], requires_grad=True), (303, 413): tensor([0.2458], requires_grad=True), (304, 412): tensor([0.1744], requires_grad=True), (304, 413): tensor([0.1897], requires_grad=True), (305, 412): tensor([0.4571], requires_grad=True), (305, 413): tensor([0.3268], requires_grad=True), (306, 412): tensor([0.3552], requires_grad=True), (306, 413): tensor([0.7517], requires_grad=True), (307, 412): tensor([0.7079], requires_grad=True), (307, 413): tensor([0.7421], requires_grad=True), (308, 412): tensor([0.1729], requires_grad=True), (308, 413): tensor([0.5901], requires_grad=True), (309, 412): tensor([0.2616], requires_grad=True), (309, 413): tensor([0.9118], requires_grad=True), (310, 412): tensor([0.6845], requires_grad=True), (310, 413): tensor([0.1776], requires_grad=True), (311, 412): tensor([0.8690], requires_grad=True), (311, 413): tensor([0.3935], requires_grad=True), (312, 412): tensor([0.1585], requires_grad=True), (312, 413): tensor([0.1180], requires_grad=True), (313, 412): tensor([0.4621], requires_grad=True), (313, 413): tensor([0.8344], requires_grad=True), (314, 412): tensor([0.5364], requires_grad=True), (314, 413): tensor([0.5102], requires_grad=True), (315, 412): tensor([0.9385], requires_grad=True), (315, 413): tensor([0.9778], requires_grad=True), (316, 412): tensor([0.0116], requires_grad=True), (316, 413): tensor([0.5465], requires_grad=True), (317, 412): tensor([0.8296], requires_grad=True), (317, 413): tensor([0.9249], requires_grad=True), (318, 412): tensor([0.8620], requires_grad=True), (318, 413): tensor([0.9576], requires_grad=True), (319, 412): tensor([0.8108], requires_grad=True), (319, 413): tensor([0.2170], requires_grad=True), (320, 412): tensor([0.1002], requires_grad=True), (320, 413): tensor([0.8900], requires_grad=True), (321, 412): tensor([0.7295], requires_grad=True), (321, 413): tensor([0.1440], requires_grad=True), (322, 412): tensor([0.0635], requires_grad=True), (322, 413): tensor([0.8886], requires_grad=True), (323, 412): tensor([0.9519], requires_grad=True), (323, 413): tensor([0.1470], requires_grad=True), (324, 412): tensor([0.5801], requires_grad=True), (324, 413): tensor([0.7001], requires_grad=True), (325, 412): tensor([0.2868], requires_grad=True), (325, 413): tensor([0.9479], requires_grad=True), (326, 412): tensor([0.4448], requires_grad=True), (326, 413): tensor([0.2063], requires_grad=True), (327, 412): tensor([0.9707], requires_grad=True), (327, 413): tensor([0.8913], requires_grad=True), (328, 412): tensor([0.2566], requires_grad=True), (328, 413): tensor([0.8375], requires_grad=True), (329, 412): tensor([0.2540], requires_grad=True), (329, 413): tensor([0.1464], requires_grad=True), (330, 412): tensor([0.3426], requires_grad=True), (330, 413): tensor([0.1268], requires_grad=True), (331, 412): tensor([0.0222], requires_grad=True), (331, 413): tensor([0.0853], requires_grad=True), (332, 412): tensor([0.5187], requires_grad=True), (332, 413): tensor([0.8119], requires_grad=True), (333, 412): tensor([0.6425], requires_grad=True), (333, 413): tensor([0.7626], requires_grad=True), (334, 412): tensor([0.5614], requires_grad=True), (334, 413): tensor([0.6945], requires_grad=True), (335, 412): tensor([0.9287], requires_grad=True), (335, 413): tensor([0.2735], requires_grad=True), (336, 412): tensor([0.7891], requires_grad=True), (336, 413): tensor([0.6449], requires_grad=True), (337, 412): tensor([0.0371], requires_grad=True), (337, 413): tensor([0.9808], requires_grad=True), (338, 412): tensor([0.9474], requires_grad=True), (338, 413): tensor([0.6277], requires_grad=True), (339, 412): tensor([0.7368], requires_grad=True), (339, 413): tensor([0.5596], requires_grad=True), (340, 412): tensor([0.7224], requires_grad=True), (340, 413): tensor([0.6987], requires_grad=True), (341, 412): tensor([0.5415], requires_grad=True), (341, 413): tensor([0.3516], requires_grad=True), (342, 412): tensor([0.9979], requires_grad=True), (342, 413): tensor([0.3596], requires_grad=True), (343, 412): tensor([0.7367], requires_grad=True), (343, 413): tensor([0.1488], requires_grad=True), (344, 412): tensor([0.2504], requires_grad=True), (344, 413): tensor([0.1452], requires_grad=True), (345, 412): tensor([0.7095], requires_grad=True), (345, 413): tensor([0.4249], requires_grad=True), (346, 412): tensor([0.8386], requires_grad=True), (346, 413): tensor([0.7305], requires_grad=True), (347, 412): tensor([0.0476], requires_grad=True), (347, 413): tensor([0.4812], requires_grad=True), (348, 412): tensor([0.6212], requires_grad=True), (348, 413): tensor([0.2512], requires_grad=True), (349, 412): tensor([0.0594], requires_grad=True), (349, 413): tensor([0.6268], requires_grad=True), (350, 412): tensor([0.6023], requires_grad=True), (350, 413): tensor([0.4074], requires_grad=True), (351, 412): tensor([0.6163], requires_grad=True), (351, 413): tensor([0.3269], requires_grad=True), (352, 412): tensor([0.6392], requires_grad=True), (352, 413): tensor([0.9691], requires_grad=True), (353, 412): tensor([0.8719], requires_grad=True), (353, 413): tensor([0.8207], requires_grad=True), (354, 412): tensor([0.1099], requires_grad=True), (354, 413): tensor([0.0618], requires_grad=True), (355, 412): tensor([0.3526], requires_grad=True), (355, 413): tensor([0.0564], requires_grad=True), (356, 412): tensor([0.3615], requires_grad=True), (356, 413): tensor([0.0268], requires_grad=True), (357, 412): tensor([0.0133], requires_grad=True), (357, 413): tensor([0.3943], requires_grad=True), (358, 412): tensor([0.9423], requires_grad=True), (358, 413): tensor([0.1754], requires_grad=True), (359, 412): tensor([0.7345], requires_grad=True), (359, 413): tensor([0.0199], requires_grad=True), (360, 412): tensor([0.9370], requires_grad=True), (360, 413): tensor([0.7209], requires_grad=True), (361, 412): tensor([0.5945], requires_grad=True), (361, 413): tensor([0.5718], requires_grad=True), (362, 412): tensor([0.2647], requires_grad=True), (362, 413): tensor([0.8847], requires_grad=True), (363, 412): tensor([0.9214], requires_grad=True), (363, 413): tensor([0.1411], requires_grad=True), (364, 412): tensor([0.2189], requires_grad=True), (364, 413): tensor([0.3049], requires_grad=True), (365, 412): tensor([0.9759], requires_grad=True), (365, 413): tensor([0.4363], requires_grad=True), (366, 412): tensor([0.3356], requires_grad=True), (366, 413): tensor([0.2084], requires_grad=True), (367, 412): tensor([0.3735], requires_grad=True), (367, 413): tensor([0.3305], requires_grad=True), (368, 412): tensor([0.9069], requires_grad=True), (368, 413): tensor([0.0206], requires_grad=True), (369, 412): tensor([0.4996], requires_grad=True), (369, 413): tensor([0.8821], requires_grad=True), (370, 412): tensor([0.0612], requires_grad=True), (370, 413): tensor([0.8210], requires_grad=True), (371, 412): tensor([0.7608], requires_grad=True), (371, 413): tensor([0.0445], requires_grad=True), (372, 412): tensor([0.4980], requires_grad=True), (372, 413): tensor([0.8847], requires_grad=True), (373, 412): tensor([0.7635], requires_grad=True), (373, 413): tensor([0.6597], requires_grad=True), (374, 412): tensor([0.3901], requires_grad=True), (374, 413): tensor([0.5941], requires_grad=True), (375, 412): tensor([0.4412], requires_grad=True), (375, 413): tensor([0.0719], requires_grad=True), (376, 412): tensor([0.7359], requires_grad=True), (376, 413): tensor([0.7931], requires_grad=True), (377, 412): tensor([0.1543], requires_grad=True), (377, 413): tensor([0.5684], requires_grad=True), (378, 412): tensor([0.9430], requires_grad=True), (378, 413): tensor([0.3696], requires_grad=True), (379, 412): tensor([0.5734], requires_grad=True), (379, 413): tensor([0.4299], requires_grad=True), (380, 412): tensor([0.7905], requires_grad=True), (380, 413): tensor([0.2510], requires_grad=True), (381, 412): tensor([0.0066], requires_grad=True), (381, 413): tensor([0.2291], requires_grad=True), (382, 412): tensor([0.0166], requires_grad=True), (382, 413): tensor([0.0201], requires_grad=True), (383, 412): tensor([0.0765], requires_grad=True), (383, 413): tensor([0.1808], requires_grad=True), (384, 412): tensor([0.9601], requires_grad=True), (384, 413): tensor([0.7535], requires_grad=True), (385, 412): tensor([0.7233], requires_grad=True), (385, 413): tensor([0.9714], requires_grad=True), (386, 412): tensor([0.0478], requires_grad=True), (386, 413): tensor([0.2372], requires_grad=True), (387, 412): tensor([0.3232], requires_grad=True), (387, 413): tensor([0.3033], requires_grad=True), (388, 412): tensor([0.0883], requires_grad=True), (388, 413): tensor([0.6943], requires_grad=True), (389, 412): tensor([0.0090], requires_grad=True), (389, 413): tensor([0.8475], requires_grad=True), (390, 412): tensor([0.8611], requires_grad=True), (390, 413): tensor([0.2102], requires_grad=True), (391, 412): tensor([0.9875], requires_grad=True), (391, 413): tensor([0.8941], requires_grad=True), (392, 412): tensor([0.0026], requires_grad=True), (392, 413): tensor([0.3939], requires_grad=True), (393, 412): tensor([0.3914], requires_grad=True), (393, 413): tensor([0.6854], requires_grad=True), (394, 412): tensor([0.4735], requires_grad=True), (394, 413): tensor([0.0608], requires_grad=True), (395, 412): tensor([0.4144], requires_grad=True), (395, 413): tensor([0.0094], requires_grad=True), (396, 412): tensor([0.2966], requires_grad=True), (396, 413): tensor([0.1936], requires_grad=True), (397, 412): tensor([0.6737], requires_grad=True), (397, 413): tensor([0.7425], requires_grad=True), (398, 412): tensor([0.2593], requires_grad=True), (398, 413): tensor([0.8758], requires_grad=True), (399, 412): tensor([0.5654], requires_grad=True), (399, 413): tensor([0.8345], requires_grad=True), (400, 412): tensor([0.2319], requires_grad=True), (400, 413): tensor([0.8238], requires_grad=True), (401, 412): tensor([0.2037], requires_grad=True), (401, 413): tensor([0.3124], requires_grad=True), (402, 412): tensor([0.1424], requires_grad=True), (402, 413): tensor([0.9718], requires_grad=True), (403, 412): tensor([0.6035], requires_grad=True), (403, 413): tensor([0.3583], requires_grad=True), (404, 412): tensor([0.4214], requires_grad=True), (404, 413): tensor([0.5862], requires_grad=True), (405, 412): tensor([0.9200], requires_grad=True), (405, 413): tensor([0.6450], requires_grad=True), (406, 412): tensor([0.7550], requires_grad=True), (406, 413): tensor([0.2098], requires_grad=True), (407, 412): tensor([0.9074], requires_grad=True), (407, 413): tensor([0.7644], requires_grad=True), (408, 412): tensor([0.2194], requires_grad=True), (408, 413): tensor([0.9691], requires_grad=True), (409, 412): tensor([0.7198], requires_grad=True), (409, 413): tensor([0.0816], requires_grad=True), (410, 412): tensor([0.1542], requires_grad=True), (410, 413): tensor([0.2394], requires_grad=True), (411, 412): tensor([0.8171], requires_grad=True), (411, 413): tensor([0.3563], requires_grad=True)}
Iter 0: 	accuracy is 0.8
{(0, 372): tensor([0.8997], requires_grad=True), (0, 204): tensor([0.6023], requires_grad=True), (0, 184): tensor([0.9941], requires_grad=True), (0, 158): tensor([0.1170], requires_grad=True), (0, 131): tensor([0.7624], requires_grad=True), (0, 116): tensor([0.0101], requires_grad=True), (0, 101): tensor([0.0094], requires_grad=True), (0, 98): tensor([0.4071], requires_grad=True), (0, 86): tensor([0.1246], requires_grad=True), (0, 82): tensor([0.5424], requires_grad=True), (0, 81): tensor([0.5653], requires_grad=True), (0, 78): tensor([0.8374], requires_grad=True), (0, 76): tensor([0.8708], requires_grad=True), (0, 35): tensor([0.1508], requires_grad=True), (0, 24): tensor([0.4885], requires_grad=True), (1, 287): tensor([0.9935], requires_grad=True), (1, 266): tensor([0.5894], requires_grad=True), (1, 176): tensor([0.8829], requires_grad=True), (1, 156): tensor([0.3364], requires_grad=True), (1, 137): tensor([0.5970], requires_grad=True), (1, 128): tensor([0.4210], requires_grad=True), (1, 120): tensor([0.2121], requires_grad=True), (1, 99): tensor([0.5115], requires_grad=True), (1, 77): tensor([0.1439], requires_grad=True), (1, 51): tensor([0.3531], requires_grad=True), (1, 48): tensor([0.9194], requires_grad=True), (1, 33): tensor([0.6020], requires_grad=True), (1, 32): tensor([0.9141], requires_grad=True), (1, 25): tensor([0.1324], requires_grad=True), (2, 267): tensor([0.1909], requires_grad=True), (2, 157): tensor([0.6685], requires_grad=True), (2, 154): tensor([0.3622], requires_grad=True), (2, 148): tensor([0.6290], requires_grad=True), (2, 144): tensor([0.1155], requires_grad=True), (2, 141): tensor([0.4744], requires_grad=True), (2, 66): tensor([0.8342], requires_grad=True), (2, 64): tensor([0.2126], requires_grad=True), (2, 51): tensor([0.8804], requires_grad=True), (2, 47): tensor([0.9982], requires_grad=True), (2, 31): tensor([0.6823], requires_grad=True), (3, 321): tensor([0.2166], requires_grad=True), (3, 187): tensor([0.0051], requires_grad=True), (3, 150): tensor([0.3278], requires_grad=True), (3, 124): tensor([0.4631], requires_grad=True), (3, 119): tensor([0.4897], requires_grad=True), (3, 108): tensor([0.6457], requires_grad=True), (3, 89): tensor([0.7485], requires_grad=True), (3, 71): tensor([0.6478], requires_grad=True), (3, 62): tensor([0.4904], requires_grad=True), (3, 35): tensor([0.3655], requires_grad=True), (3, 26): tensor([0.9173], requires_grad=True), (4, 391): tensor([0.0832], requires_grad=True), (4, 302): tensor([0.3916], requires_grad=True), (4, 301): tensor([0.8162], requires_grad=True), (4, 153): tensor([0.0004], requires_grad=True), (4, 134): tensor([0.7821], requires_grad=True), (4, 100): tensor([0.8150], requires_grad=True), (4, 99): tensor([0.4032], requires_grad=True), (4, 75): tensor([0.1687], requires_grad=True), (4, 55): tensor([0.6431], requires_grad=True), (4, 50): tensor([0.9682], requires_grad=True), (4, 42): tensor([0.5371], requires_grad=True), (4, 31): tensor([0.6342], requires_grad=True), (5, 288): tensor([0.1191], requires_grad=True), (5, 269): tensor([0.7044], requires_grad=True), (5, 192): tensor([0.3078], requires_grad=True), (5, 147): tensor([0.7012], requires_grad=True), (5, 130): tensor([0.0932], requires_grad=True), (5, 117): tensor([0.9377], requires_grad=True), (5, 93): tensor([0.4372], requires_grad=True), (5, 91): tensor([0.3928], requires_grad=True), (5, 87): tensor([0.2998], requires_grad=True), (5, 82): tensor([0.6590], requires_grad=True), (5, 73): tensor([0.9573], requires_grad=True), (5, 68): tensor([0.9650], requires_grad=True), (5, 47): tensor([0.0364], requires_grad=True), (5, 29): tensor([0.0865], requires_grad=True), (5, 26): tensor([0.7631], requires_grad=True), (6, 329): tensor([0.3595], requires_grad=True), (6, 264): tensor([0.9606], requires_grad=True), (6, 133): tensor([0.6576], requires_grad=True), (6, 103): tensor([0.8886], requires_grad=True), (6, 97): tensor([0.9660], requires_grad=True), (6, 88): tensor([0.6988], requires_grad=True), (6, 85): tensor([0.0195], requires_grad=True), (6, 61): tensor([0.7377], requires_grad=True), (6, 44): tensor([0.4970], requires_grad=True), (6, 43): tensor([0.0560], requires_grad=True), (7, 396): tensor([0.8098], requires_grad=True), (7, 383): tensor([0.9531], requires_grad=True), (7, 362): tensor([0.7903], requires_grad=True), (7, 278): tensor([0.2273], requires_grad=True), (7, 150): tensor([0.9738], requires_grad=True), (7, 142): tensor([0.1637], requires_grad=True), (7, 139): tensor([0.8378], requires_grad=True), (7, 125): tensor([0.8481], requires_grad=True), (7, 118): tensor([0.2233], requires_grad=True), (7, 114): tensor([0.9262], requires_grad=True), (7, 104): tensor([0.1459], requires_grad=True), (7, 88): tensor([0.9828], requires_grad=True), (7, 79): tensor([0.8640], requires_grad=True), (7, 70): tensor([0.8594], requires_grad=True), (7, 65): tensor([0.2412], requires_grad=True), (7, 63): tensor([0.7720], requires_grad=True), (8, 151): tensor([0.1128], requires_grad=True), (8, 143): tensor([0.9673], requires_grad=True), (8, 129): tensor([0.7172], requires_grad=True), (8, 123): tensor([0.9512], requires_grad=True), (8, 117): tensor([0.3282], requires_grad=True), (8, 79): tensor([0.5162], requires_grad=True), (8, 64): tensor([0.0122], requires_grad=True), (8, 55): tensor([0.6046], requires_grad=True), (8, 45): tensor([0.3080], requires_grad=True), (8, 41): tensor([0.6885], requires_grad=True), (8, 40): tensor([0.7493], requires_grad=True), (8, 37): tensor([0.8059], requires_grad=True), (9, 289): tensor([0.4132], requires_grad=True), (9, 228): tensor([0.9626], requires_grad=True), (9, 155): tensor([0.5291], requires_grad=True), (9, 138): tensor([0.1601], requires_grad=True), (9, 120): tensor([0.6430], requires_grad=True), (9, 107): tensor([0.3682], requires_grad=True), (9, 106): tensor([0.0382], requires_grad=True), (9, 90): tensor([0.8450], requires_grad=True), (9, 86): tensor([0.0659], requires_grad=True), (9, 84): tensor([0.4715], requires_grad=True), (9, 72): tensor([0.7147], requires_grad=True), (9, 71): tensor([0.3582], requires_grad=True), (9, 61): tensor([0.5806], requires_grad=True), (9, 56): tensor([0.8107], requires_grad=True), (9, 52): tensor([0.2574], requires_grad=True), (10, 341): tensor([0.4656], requires_grad=True), (10, 160): tensor([0.3985], requires_grad=True), (10, 146): tensor([0.1812], requires_grad=True), (10, 143): tensor([0.6615], requires_grad=True), (10, 102): tensor([0.1501], requires_grad=True), (10, 80): tensor([0.9274], requires_grad=True), (10, 76): tensor([0.7979], requires_grad=True), (10, 73): tensor([0.7402], requires_grad=True), (10, 60): tensor([0.6439], requires_grad=True), (10, 59): tensor([0.3026], requires_grad=True), (10, 54): tensor([0.5344], requires_grad=True), (10, 27): tensor([0.3430], requires_grad=True), (11, 410): tensor([0.4456], requires_grad=True), (11, 403): tensor([0.8081], requires_grad=True), (11, 382): tensor([0.4344], requires_grad=True), (11, 367): tensor([0.4913], requires_grad=True), (11, 149): tensor([0.8836], requires_grad=True), (11, 139): tensor([0.6077], requires_grad=True), (11, 129): tensor([0.7506], requires_grad=True), (11, 121): tensor([0.0657], requires_grad=True), (11, 113): tensor([0.0524], requires_grad=True), (11, 74): tensor([0.7212], requires_grad=True), (11, 68): tensor([0.0006], requires_grad=True), (11, 60): tensor([0.6371], requires_grad=True), (11, 58): tensor([0.8451], requires_grad=True), (11, 46): tensor([0.1534], requires_grad=True), (11, 34): tensor([0.3940], requires_grad=True), (11, 32): tensor([0.7624], requires_grad=True), (12, 371): tensor([0.1195], requires_grad=True), (12, 167): tensor([0.6612], requires_grad=True), (12, 149): tensor([0.6779], requires_grad=True), (12, 136): tensor([0.6143], requires_grad=True), (12, 128): tensor([0.2440], requires_grad=True), (12, 125): tensor([0.5615], requires_grad=True), (12, 109): tensor([0.8812], requires_grad=True), (12, 91): tensor([0.0362], requires_grad=True), (12, 90): tensor([0.9020], requires_grad=True), (12, 85): tensor([0.8242], requires_grad=True), (12, 78): tensor([0.4868], requires_grad=True), (12, 75): tensor([0.5745], requires_grad=True), (12, 57): tensor([0.3912], requires_grad=True), (12, 40): tensor([0.4667], requires_grad=True), (12, 39): tensor([0.4111], requires_grad=True), (13, 156): tensor([0.6507], requires_grad=True), (13, 104): tensor([0.6353], requires_grad=True), (13, 80): tensor([0.7306], requires_grad=True), (13, 72): tensor([0.8469], requires_grad=True), (13, 58): tensor([0.2426], requires_grad=True), (13, 49): tensor([0.4384], requires_grad=True), (13, 36): tensor([0.0766], requires_grad=True), (14, 315): tensor([0.5068], requires_grad=True), (14, 151): tensor([0.9793], requires_grad=True), (14, 132): tensor([0.5670], requires_grad=True), (14, 130): tensor([0.9032], requires_grad=True), (14, 116): tensor([0.1591], requires_grad=True), (14, 113): tensor([0.2546], requires_grad=True), (14, 96): tensor([0.1289], requires_grad=True), (14, 67): tensor([0.8087], requires_grad=True), (14, 66): tensor([0.3879], requires_grad=True), (14, 42): tensor([0.4302], requires_grad=True), (14, 38): tensor([0.6718], requires_grad=True), (14, 28): tensor([0.4504], requires_grad=True), (14, 25): tensor([0.9777], requires_grad=True), (15, 385): tensor([0.6396], requires_grad=True), (15, 348): tensor([0.3306], requires_grad=True), (15, 169): tensor([0.1485], requires_grad=True), (15, 159): tensor([0.5910], requires_grad=True), (15, 158): tensor([0.6591], requires_grad=True), (15, 140): tensor([0.2656], requires_grad=True), (15, 127): tensor([0.0478], requires_grad=True), (15, 103): tensor([0.0148], requires_grad=True), (15, 77): tensor([0.8541], requires_grad=True), (15, 46): tensor([0.2191], requires_grad=True), (15, 41): tensor([0.4018], requires_grad=True), (15, 38): tensor([0.0775], requires_grad=True), (15, 27): tensor([0.9104], requires_grad=True), (16, 199): tensor([0.2546], requires_grad=True), (16, 195): tensor([0.9879], requires_grad=True), (16, 172): tensor([0.2929], requires_grad=True), (16, 159): tensor([0.6340], requires_grad=True), (16, 152): tensor([0.4616], requires_grad=True), (16, 142): tensor([0.5167], requires_grad=True), (16, 122): tensor([0.6912], requires_grad=True), (16, 112): tensor([0.8250], requires_grad=True), (16, 110): tensor([0.7297], requires_grad=True), (16, 94): tensor([0.9753], requires_grad=True), (16, 84): tensor([0.7265], requires_grad=True), (16, 81): tensor([0.6957], requires_grad=True), (16, 54): tensor([0.9923], requires_grad=True), (16, 39): tensor([0.3099], requires_grad=True), (17, 404): tensor([0.5875], requires_grad=True), (17, 327): tensor([0.3522], requires_grad=True), (17, 239): tensor([0.0117], requires_grad=True), (17, 157): tensor([0.4058], requires_grad=True), (17, 146): tensor([0.0279], requires_grad=True), (17, 136): tensor([0.4849], requires_grad=True), (17, 133): tensor([0.6998], requires_grad=True), (17, 112): tensor([0.9812], requires_grad=True), (17, 106): tensor([0.1707], requires_grad=True), (17, 105): tensor([0.6996], requires_grad=True), (17, 101): tensor([0.6625], requires_grad=True), (17, 95): tensor([0.5390], requires_grad=True), (17, 83): tensor([0.5636], requires_grad=True), (17, 74): tensor([0.7348], requires_grad=True), (17, 53): tensor([0.6909], requires_grad=True), (17, 33): tensor([0.1444], requires_grad=True), (17, 30): tensor([0.2528], requires_grad=True), (18, 397): tensor([0.3709], requires_grad=True), (18, 147): tensor([0.8592], requires_grad=True), (18, 144): tensor([0.7643], requires_grad=True), (18, 135): tensor([0.0524], requires_grad=True), (18, 134): tensor([0.6556], requires_grad=True), (18, 131): tensor([0.1582], requires_grad=True), (18, 115): tensor([0.6304], requires_grad=True), (18, 102): tensor([0.0589], requires_grad=True), (18, 92): tensor([0.1529], requires_grad=True), (18, 89): tensor([0.1979], requires_grad=True), (18, 70): tensor([0.9732], requires_grad=True), (18, 56): tensor([0.9917], requires_grad=True), (18, 53): tensor([0.2525], requires_grad=True), (18, 45): tensor([0.8947], requires_grad=True), (18, 44): tensor([0.2576], requires_grad=True), (18, 28): tensor([0.6131], requires_grad=True), (19, 393): tensor([0.4465], requires_grad=True), (19, 283): tensor([0.2100], requires_grad=True), (19, 232): tensor([0.0710], requires_grad=True), (19, 152): tensor([0.8382], requires_grad=True), (19, 140): tensor([0.2620], requires_grad=True), (19, 126): tensor([0.8533], requires_grad=True), (19, 119): tensor([0.4857], requires_grad=True), (19, 111): tensor([0.5383], requires_grad=True), (19, 105): tensor([0.8757], requires_grad=True), (19, 100): tensor([0.3205], requires_grad=True), (19, 93): tensor([0.3581], requires_grad=True), (19, 69): tensor([0.9040], requires_grad=True), (19, 48): tensor([0.1190], requires_grad=True), (19, 37): tensor([0.2264], requires_grad=True), (19, 36): tensor([0.3295], requires_grad=True), (20, 387): tensor([0.4673], requires_grad=True), (20, 155): tensor([0.8565], requires_grad=True), (20, 145): tensor([0.3760], requires_grad=True), (20, 127): tensor([0.3850], requires_grad=True), (20, 124): tensor([0.4594], requires_grad=True), (20, 122): tensor([0.4403], requires_grad=True), (20, 115): tensor([0.8349], requires_grad=True), (20, 111): tensor([0.4702], requires_grad=True), (20, 98): tensor([0.3939], requires_grad=True), (20, 97): tensor([0.5356], requires_grad=True), (20, 96): tensor([0.6443], requires_grad=True), (20, 63): tensor([0.1946], requires_grad=True), (21, 197): tensor([0.1917], requires_grad=True), (21, 153): tensor([0.4363], requires_grad=True), (21, 148): tensor([0.4826], requires_grad=True), (21, 137): tensor([0.1847], requires_grad=True), (21, 121): tensor([0.4564], requires_grad=True), (21, 118): tensor([0.6795], requires_grad=True), (21, 92): tensor([0.7146], requires_grad=True), (21, 83): tensor([0.3296], requires_grad=True), (21, 67): tensor([0.7728], requires_grad=True), (21, 62): tensor([0.6797], requires_grad=True), (21, 59): tensor([0.2879], requires_grad=True), (21, 57): tensor([0.3305], requires_grad=True), (21, 52): tensor([0.9550], requires_grad=True), (21, 43): tensor([0.3040], requires_grad=True), (21, 29): tensor([0.0526], requires_grad=True), (21, 24): tensor([0.6130], requires_grad=True), (22, 373): tensor([0.3111], requires_grad=True), (22, 154): tensor([0.3823], requires_grad=True), (22, 145): tensor([0.8813], requires_grad=True), (22, 135): tensor([0.9820], requires_grad=True), (22, 132): tensor([0.0422], requires_grad=True), (22, 110): tensor([0.2598], requires_grad=True), (22, 109): tensor([0.3478], requires_grad=True), (22, 107): tensor([0.4417], requires_grad=True), (22, 95): tensor([0.1658], requires_grad=True), (22, 69): tensor([0.6916], requires_grad=True), (22, 65): tensor([0.9839], requires_grad=True), (22, 50): tensor([0.9379], requires_grad=True), (22, 49): tensor([0.5801], requires_grad=True), (22, 34): tensor([0.6938], requires_grad=True), (23, 324): tensor([0.5562], requires_grad=True), (23, 292): tensor([0.1404], requires_grad=True), (23, 231): tensor([0.4718], requires_grad=True), (23, 160): tensor([0.6382], requires_grad=True), (23, 141): tensor([0.3948], requires_grad=True), (23, 138): tensor([0.8517], requires_grad=True), (23, 126): tensor([0.0610], requires_grad=True), (23, 123): tensor([0.6777], requires_grad=True), (23, 114): tensor([0.7119], requires_grad=True), (23, 108): tensor([0.8678], requires_grad=True), (23, 94): tensor([0.0522], requires_grad=True), (23, 87): tensor([0.5799], requires_grad=True), (23, 30): tensor([0.1874], requires_grad=True), (24, 328): tensor([0.1603], requires_grad=True), (24, 322): tensor([0.6375], requires_grad=True), (24, 275): tensor([0.8740], requires_grad=True), (24, 230): tensor([0.8455], requires_grad=True), (24, 200): tensor([0.8033], requires_grad=True), (24, 162): tensor([0.8866], requires_grad=True), (25, 346): tensor([0.6777], requires_grad=True), (25, 318): tensor([0.3284], requires_grad=True), (25, 211): tensor([0.2962], requires_grad=True), (25, 201): tensor([0.1799], requires_grad=True), (26, 380): tensor([0.2310], requires_grad=True), (27, 365): tensor([0.7274], requires_grad=True), (27, 243): tensor([0.3426], requires_grad=True), (27, 219): tensor([0.7141], requires_grad=True), (27, 215): tensor([0.0975], requires_grad=True), (28, 220): tensor([0.7945], requires_grad=True), (28, 163): tensor([0.9529], requires_grad=True), (29, 412): tensor([0.2462], requires_grad=True), (29, 413): tensor([0.9687], requires_grad=True), (30, 206): tensor([0.0371], requires_grad=True), (31, 412): tensor([0.1069], requires_grad=True), (31, 413): tensor([0.8840], requires_grad=True), (32, 363): tensor([0.8861], requires_grad=True), (33, 412): tensor([0.2556], requires_grad=True), (33, 413): tensor([0.1265], requires_grad=True), (34, 355): tensor([0.2391], requires_grad=True), (34, 347): tensor([0.6598], requires_grad=True), (35, 412): tensor([0.2641], requires_grad=True), (35, 413): tensor([0.7634], requires_grad=True), (36, 354): tensor([0.8574], requires_grad=True), (36, 309): tensor([0.5067], requires_grad=True), (37, 277): tensor([0.8692], requires_grad=True), (38, 412): tensor([0.5448], requires_grad=True), (38, 413): tensor([0.1022], requires_grad=True), (39, 335): tensor([0.3058], requires_grad=True), (40, 395): tensor([0.1332], requires_grad=True), (40, 332): tensor([0.4663], requires_grad=True), (40, 255): tensor([0.0816], requires_grad=True), (41, 240): tensor([0.8870], requires_grad=True), (42, 234): tensor([0.3806], requires_grad=True), (42, 181): tensor([0.9619], requires_grad=True), (43, 333): tensor([0.8295], requires_grad=True), (43, 170): tensor([0.7324], requires_grad=True), (44, 210): tensor([0.8402], requires_grad=True), (45, 295): tensor([0.1379], requires_grad=True), (46, 400): tensor([0.9335], requires_grad=True), (47, 412): tensor([0.9306], requires_grad=True), (47, 413): tensor([0.9351], requires_grad=True), (48, 280): tensor([0.8100], requires_grad=True), (48, 180): tensor([0.9214], requires_grad=True), (49, 314): tensor([0.6190], requires_grad=True), (50, 316): tensor([0.4862], requires_grad=True), (50, 293): tensor([0.9930], requires_grad=True), (50, 196): tensor([0.1863], requires_grad=True), (51, 274): tensor([0.8874], requires_grad=True), (51, 235): tensor([0.4923], requires_grad=True), (52, 350): tensor([0.9294], requires_grad=True), (52, 307): tensor([0.2087], requires_grad=True), (52, 242): tensor([0.3570], requires_grad=True), (52, 179): tensor([0.1869], requires_grad=True), (53, 412): tensor([0.1007], requires_grad=True), (53, 413): tensor([0.5845], requires_grad=True), (54, 249): tensor([0.8135], requires_grad=True), (55, 247): tensor([0.9457], requires_grad=True), (56, 369): tensor([0.9283], requires_grad=True), (57, 412): tensor([0.2732], requires_grad=True), (57, 413): tensor([0.6746], requires_grad=True), (58, 412): tensor([0.3414], requires_grad=True), (58, 413): tensor([0.6129], requires_grad=True), (59, 254): tensor([0.2762], requires_grad=True), (60, 412): tensor([0.7361], requires_grad=True), (60, 413): tensor([0.1377], requires_grad=True), (61, 412): tensor([0.2592], requires_grad=True), (61, 413): tensor([0.5945], requires_grad=True), (62, 313): tensor([0.5538], requires_grad=True), (62, 214): tensor([0.3317], requires_grad=True), (63, 177): tensor([0.2974], requires_grad=True), (64, 325): tensor([0.8451], requires_grad=True), (65, 412): tensor([0.1338], requires_grad=True), (65, 413): tensor([0.9388], requires_grad=True), (66, 366): tensor([0.7473], requires_grad=True), (66, 342): tensor([0.8227], requires_grad=True), (66, 319): tensor([0.3359], requires_grad=True), (66, 299): tensor([0.6270], requires_grad=True), (66, 166): tensor([0.4205], requires_grad=True), (67, 282): tensor([0.7869], requires_grad=True), (67, 272): tensor([0.6990], requires_grad=True), (67, 246): tensor([0.0136], requires_grad=True), (67, 233): tensor([0.1684], requires_grad=True), (67, 212): tensor([0.9549], requires_grad=True), (68, 305): tensor([0.9149], requires_grad=True), (68, 291): tensor([0.1427], requires_grad=True), (68, 268): tensor([0.4589], requires_grad=True), (68, 259): tensor([0.6272], requires_grad=True), (68, 224): tensor([0.8725], requires_grad=True), (69, 381): tensor([0.7094], requires_grad=True), (69, 376): tensor([0.0559], requires_grad=True), (69, 364): tensor([0.5757], requires_grad=True), (70, 412): tensor([0.8118], requires_grad=True), (70, 413): tensor([0.7402], requires_grad=True), (71, 238): tensor([0.6297], requires_grad=True), (72, 303): tensor([0.9035], requires_grad=True), (72, 286): tensor([0.0688], requires_grad=True), (72, 227): tensor([0.5594], requires_grad=True), (72, 225): tensor([0.4182], requires_grad=True), (73, 358): tensor([0.8404], requires_grad=True), (73, 330): tensor([0.4936], requires_grad=True), (74, 357): tensor([0.8119], requires_grad=True), (74, 276): tensor([0.5288], requires_grad=True), (74, 273): tensor([0.9130], requires_grad=True), (74, 258): tensor([0.3945], requires_grad=True), (74, 229): tensor([0.8395], requires_grad=True), (75, 412): tensor([0.8231], requires_grad=True), (75, 413): tensor([0.1187], requires_grad=True), (76, 360): tensor([0.5943], requires_grad=True), (76, 168): tensor([0.5217], requires_grad=True), (77, 412): tensor([0.2592], requires_grad=True), (77, 413): tensor([0.2519], requires_grad=True), (78, 412): tensor([0.0459], requires_grad=True), (78, 413): tensor([0.9529], requires_grad=True), (79, 412): tensor([0.9218], requires_grad=True), (79, 413): tensor([0.5263], requires_grad=True), (80, 352): tensor([0.0686], requires_grad=True), (80, 339): tensor([0.1524], requires_grad=True), (80, 244): tensor([0.8219], requires_grad=True), (81, 384): tensor([0.9372], requires_grad=True), (81, 221): tensor([0.4275], requires_grad=True), (81, 182): tensor([0.0752], requires_grad=True), (82, 250): tensor([0.6488], requires_grad=True), (82, 165): tensor([0.0406], requires_grad=True), (83, 304): tensor([0.2220], requires_grad=True), (83, 290): tensor([0.9514], requires_grad=True), (83, 218): tensor([0.1345], requires_grad=True), (84, 390): tensor([0.0608], requires_grad=True), (84, 375): tensor([0.8473], requires_grad=True), (84, 217): tensor([0.8937], requires_grad=True), (84, 178): tensor([0.6749], requires_grad=True), (85, 412): tensor([0.1495], requires_grad=True), (85, 413): tensor([0.2047], requires_grad=True), (86, 359): tensor([0.7494], requires_grad=True), (86, 297): tensor([0.4886], requires_grad=True), (87, 402): tensor([0.7870], requires_grad=True), (88, 408): tensor([0.4411], requires_grad=True), (88, 284): tensor([0.8223], requires_grad=True), (88, 256): tensor([0.9642], requires_grad=True), (89, 174): tensor([0.0590], requires_grad=True), (90, 356): tensor([0.1807], requires_grad=True), (91, 262): tensor([0.3433], requires_grad=True), (91, 213): tensor([0.8968], requires_grad=True), (91, 188): tensor([0.9977], requires_grad=True), (92, 370): tensor([0.9970], requires_grad=True), (92, 271): tensor([0.0910], requires_grad=True), (93, 361): tensor([0.2741], requires_grad=True), (94, 389): tensor([0.1736], requires_grad=True), (95, 260): tensor([0.0004], requires_grad=True), (95, 226): tensor([0.5117], requires_grad=True), (95, 223): tensor([0.7398], requires_grad=True), (96, 331): tensor([0.0711], requires_grad=True), (96, 312): tensor([0.8255], requires_grad=True), (97, 412): tensor([0.3966], requires_grad=True), (97, 413): tensor([0.4386], requires_grad=True), (98, 222): tensor([0.8326], requires_grad=True), (99, 405): tensor([0.2069], requires_grad=True), (99, 388): tensor([0.1723], requires_grad=True), (99, 337): tensor([0.0192], requires_grad=True), (99, 261): tensor([0.8256], requires_grad=True), (100, 409): tensor([0.4034], requires_grad=True), (100, 398): tensor([0.4242], requires_grad=True), (101, 338): tensor([0.9634], requires_grad=True), (101, 175): tensor([0.6894], requires_grad=True), (102, 411): tensor([0.0255], requires_grad=True), (102, 257): tensor([0.5569], requires_grad=True), (102, 252): tensor([0.9705], requires_grad=True), (103, 340): tensor([0.5823], requires_grad=True), (103, 326): tensor([0.5503], requires_grad=True), (103, 281): tensor([0.0704], requires_grad=True), (104, 236): tensor([0.7037], requires_grad=True), (104, 173): tensor([0.0618], requires_grad=True), (104, 161): tensor([0.9542], requires_grad=True), (105, 412): tensor([0.5126], requires_grad=True), (105, 413): tensor([0.8019], requires_grad=True), (106, 412): tensor([0.6647], requires_grad=True), (106, 413): tensor([0.1012], requires_grad=True), (107, 386): tensor([0.7492], requires_grad=True), (107, 308): tensor([0.6675], requires_grad=True), (107, 189): tensor([0.8672], requires_grad=True), (108, 368): tensor([0.0586], requires_grad=True), (108, 186): tensor([0.9447], requires_grad=True), (109, 344): tensor([0.1193], requires_grad=True), (109, 336): tensor([0.8429], requires_grad=True), (109, 191): tensor([0.6164], requires_grad=True), (110, 251): tensor([0.4866], requires_grad=True), (111, 216): tensor([0.7424], requires_grad=True), (112, 412): tensor([0.4713], requires_grad=True), (112, 413): tensor([0.5634], requires_grad=True), (113, 164): tensor([0.2512], requires_grad=True), (114, 317): tensor([0.7244], requires_grad=True), (114, 263): tensor([0.9883], requires_grad=True), (115, 279): tensor([0.6471], requires_grad=True), (116, 377): tensor([0.3599], requires_grad=True), (116, 270): tensor([0.8923], requires_grad=True), (116, 253): tensor([0.7670], requires_grad=True), (116, 241): tensor([0.7871], requires_grad=True), (116, 205): tensor([0.0924], requires_grad=True), (116, 198): tensor([0.5699], requires_grad=True), (117, 345): tensor([0.2545], requires_grad=True), (117, 306): tensor([0.5450], requires_grad=True), (117, 202): tensor([0.6998], requires_grad=True), (118, 412): tensor([0.3315], requires_grad=True), (118, 413): tensor([0.7494], requires_grad=True), (119, 323): tensor([0.0981], requires_grad=True), (119, 298): tensor([0.9001], requires_grad=True), (120, 407): tensor([0.6874], requires_grad=True), (121, 374): tensor([0.6487], requires_grad=True), (121, 185): tensor([0.0516], requires_grad=True), (122, 294): tensor([0.3231], requires_grad=True), (122, 203): tensor([0.7375], requires_grad=True), (123, 412): tensor([0.5716], requires_grad=True), (123, 413): tensor([0.6931], requires_grad=True), (124, 392): tensor([0.6721], requires_grad=True), (124, 379): tensor([0.7049], requires_grad=True), (125, 334): tensor([0.8217], requires_grad=True), (125, 265): tensor([0.2217], requires_grad=True), (126, 399): tensor([0.7467], requires_grad=True), (126, 351): tensor([0.4211], requires_grad=True), (126, 208): tensor([0.8693], requires_grad=True), (127, 285): tensor([0.7388], requires_grad=True), (127, 209): tensor([0.5432], requires_grad=True), (128, 401): tensor([0.5151], requires_grad=True), (129, 394): tensor([0.9801], requires_grad=True), (129, 378): tensor([0.3369], requires_grad=True), (129, 311): tensor([0.5207], requires_grad=True), (129, 171): tensor([0.0688], requires_grad=True), (130, 207): tensor([0.3487], requires_grad=True), (130, 194): tensor([0.2494], requires_grad=True), (130, 183): tensor([0.2912], requires_grad=True), (131, 406): tensor([0.8405], requires_grad=True), (131, 237): tensor([0.1687], requires_grad=True), (131, 190): tensor([0.5491], requires_grad=True), (132, 300): tensor([0.1043], requires_grad=True), (132, 248): tensor([0.3654], requires_grad=True), (133, 349): tensor([0.2705], requires_grad=True), (133, 320): tensor([0.1697], requires_grad=True), (133, 310): tensor([0.2455], requires_grad=True), (134, 343): tensor([0.3654], requires_grad=True), (135, 296): tensor([0.5950], requires_grad=True), (135, 245): tensor([0.3094], requires_grad=True), (135, 193): tensor([0.1618], requires_grad=True), (136, 353): tensor([0.9038], requires_grad=True), (137, 412): tensor([0.7586], requires_grad=True), (137, 413): tensor([0.0811], requires_grad=True), (138, 412): tensor([0.5970], requires_grad=True), (138, 413): tensor([0.8729], requires_grad=True), (139, 412): tensor([0.0198], requires_grad=True), (139, 413): tensor([0.2372], requires_grad=True), (140, 412): tensor([0.2409], requires_grad=True), (140, 413): tensor([0.7934], requires_grad=True), (141, 412): tensor([0.2130], requires_grad=True), (141, 413): tensor([0.8855], requires_grad=True), (142, 412): tensor([0.7337], requires_grad=True), (142, 413): tensor([0.9928], requires_grad=True), (143, 412): tensor([0.5377], requires_grad=True), (143, 413): tensor([0.6174], requires_grad=True), (144, 412): tensor([0.3209], requires_grad=True), (144, 413): tensor([0.9932], requires_grad=True), (145, 412): tensor([0.6473], requires_grad=True), (145, 413): tensor([0.3592], requires_grad=True), (146, 412): tensor([0.9386], requires_grad=True), (146, 413): tensor([0.8578], requires_grad=True), (147, 412): tensor([0.3127], requires_grad=True), (147, 413): tensor([0.5701], requires_grad=True), (148, 412): tensor([0.3955], requires_grad=True), (148, 413): tensor([0.2780], requires_grad=True), (149, 412): tensor([0.5120], requires_grad=True), (149, 413): tensor([0.9520], requires_grad=True), (150, 412): tensor([0.5690], requires_grad=True), (150, 413): tensor([0.1389], requires_grad=True), (151, 412): tensor([0.1537], requires_grad=True), (151, 413): tensor([0.6516], requires_grad=True), (152, 412): tensor([0.7062], requires_grad=True), (152, 413): tensor([0.4976], requires_grad=True), (153, 412): tensor([0.8659], requires_grad=True), (153, 413): tensor([0.4451], requires_grad=True), (154, 412): tensor([0.0760], requires_grad=True), (154, 413): tensor([0.8324], requires_grad=True), (155, 412): tensor([0.1967], requires_grad=True), (155, 413): tensor([0.8475], requires_grad=True), (156, 412): tensor([0.2893], requires_grad=True), (156, 413): tensor([0.5689], requires_grad=True), (157, 412): tensor([0.1242], requires_grad=True), (157, 413): tensor([0.4661], requires_grad=True), (158, 412): tensor([0.5297], requires_grad=True), (158, 413): tensor([0.0829], requires_grad=True), (159, 412): tensor([0.2962], requires_grad=True), (159, 413): tensor([0.9555], requires_grad=True), (160, 412): tensor([0.4511], requires_grad=True), (160, 413): tensor([0.4048], requires_grad=True), (161, 412): tensor([0.2290], requires_grad=True), (161, 413): tensor([0.3193], requires_grad=True), (162, 412): tensor([0.1319], requires_grad=True), (162, 413): tensor([0.2943], requires_grad=True), (163, 412): tensor([0.3875], requires_grad=True), (163, 413): tensor([0.3262], requires_grad=True), (164, 412): tensor([0.1006], requires_grad=True), (164, 413): tensor([0.8982], requires_grad=True), (165, 412): tensor([0.6527], requires_grad=True), (165, 413): tensor([0.3528], requires_grad=True), (166, 412): tensor([0.6747], requires_grad=True), (166, 413): tensor([0.0875], requires_grad=True), (167, 412): tensor([0.1870], requires_grad=True), (167, 413): tensor([0.1354], requires_grad=True), (168, 412): tensor([0.7994], requires_grad=True), (168, 413): tensor([0.7926], requires_grad=True), (169, 412): tensor([0.4886], requires_grad=True), (169, 413): tensor([0.8279], requires_grad=True), (170, 412): tensor([0.0500], requires_grad=True), (170, 413): tensor([0.7035], requires_grad=True), (171, 412): tensor([0.6097], requires_grad=True), (171, 413): tensor([0.4274], requires_grad=True), (172, 412): tensor([0.5641], requires_grad=True), (172, 413): tensor([0.8570], requires_grad=True), (173, 412): tensor([0.9387], requires_grad=True), (173, 413): tensor([0.4489], requires_grad=True), (174, 412): tensor([0.4084], requires_grad=True), (174, 413): tensor([0.1152], requires_grad=True), (175, 412): tensor([0.3021], requires_grad=True), (175, 413): tensor([0.8737], requires_grad=True), (176, 412): tensor([0.9523], requires_grad=True), (176, 413): tensor([0.4003], requires_grad=True), (177, 412): tensor([0.6736], requires_grad=True), (177, 413): tensor([0.2584], requires_grad=True), (178, 412): tensor([0.6327], requires_grad=True), (178, 413): tensor([0.4962], requires_grad=True), (179, 412): tensor([0.5157], requires_grad=True), (179, 413): tensor([0.7273], requires_grad=True), (180, 412): tensor([0.8850], requires_grad=True), (180, 413): tensor([0.9670], requires_grad=True), (181, 412): tensor([0.2562], requires_grad=True), (181, 413): tensor([0.9671], requires_grad=True), (182, 412): tensor([0.1193], requires_grad=True), (182, 413): tensor([0.9405], requires_grad=True), (183, 412): tensor([0.0058], requires_grad=True), (183, 413): tensor([0.5008], requires_grad=True), (184, 412): tensor([0.5201], requires_grad=True), (184, 413): tensor([0.6907], requires_grad=True), (185, 412): tensor([0.6142], requires_grad=True), (185, 413): tensor([0.2695], requires_grad=True), (186, 412): tensor([0.4931], requires_grad=True), (186, 413): tensor([0.5584], requires_grad=True), (187, 412): tensor([0.8464], requires_grad=True), (187, 413): tensor([0.2917], requires_grad=True), (188, 412): tensor([0.1985], requires_grad=True), (188, 413): tensor([0.5846], requires_grad=True), (189, 412): tensor([0.9712], requires_grad=True), (189, 413): tensor([0.6099], requires_grad=True), (190, 412): tensor([0.6178], requires_grad=True), (190, 413): tensor([0.8131], requires_grad=True), (191, 412): tensor([0.4968], requires_grad=True), (191, 413): tensor([0.8869], requires_grad=True), (192, 412): tensor([0.1031], requires_grad=True), (192, 413): tensor([0.6173], requires_grad=True), (193, 412): tensor([0.8713], requires_grad=True), (193, 413): tensor([0.3696], requires_grad=True), (194, 412): tensor([0.1063], requires_grad=True), (194, 413): tensor([0.7472], requires_grad=True), (195, 412): tensor([0.7273], requires_grad=True), (195, 413): tensor([0.5912], requires_grad=True), (196, 412): tensor([0.9158], requires_grad=True), (196, 413): tensor([0.0601], requires_grad=True), (197, 412): tensor([0.8583], requires_grad=True), (197, 413): tensor([0.0489], requires_grad=True), (198, 412): tensor([0.0687], requires_grad=True), (198, 413): tensor([0.7444], requires_grad=True), (199, 412): tensor([0.3229], requires_grad=True), (199, 413): tensor([0.4100], requires_grad=True), (200, 412): tensor([0.1557], requires_grad=True), (200, 413): tensor([0.6272], requires_grad=True), (201, 412): tensor([0.1060], requires_grad=True), (201, 413): tensor([0.9196], requires_grad=True), (202, 412): tensor([0.7303], requires_grad=True), (202, 413): tensor([0.5760], requires_grad=True), (203, 412): tensor([0.4190], requires_grad=True), (203, 413): tensor([0.9515], requires_grad=True), (204, 412): tensor([0.9037], requires_grad=True), (204, 413): tensor([0.6048], requires_grad=True), (205, 412): tensor([0.3010], requires_grad=True), (205, 413): tensor([0.2531], requires_grad=True), (206, 412): tensor([0.0504], requires_grad=True), (206, 413): tensor([0.4846], requires_grad=True), (207, 412): tensor([0.1733], requires_grad=True), (207, 413): tensor([0.3399], requires_grad=True), (208, 412): tensor([0.0253], requires_grad=True), (208, 413): tensor([0.0373], requires_grad=True), (209, 412): tensor([0.6395], requires_grad=True), (209, 413): tensor([0.1842], requires_grad=True), (210, 412): tensor([0.1977], requires_grad=True), (210, 413): tensor([0.0494], requires_grad=True), (211, 412): tensor([0.3572], requires_grad=True), (211, 413): tensor([0.5790], requires_grad=True), (212, 412): tensor([0.3294], requires_grad=True), (212, 413): tensor([0.5235], requires_grad=True), (213, 412): tensor([0.3182], requires_grad=True), (213, 413): tensor([0.3998], requires_grad=True), (214, 412): tensor([0.3406], requires_grad=True), (214, 413): tensor([0.4068], requires_grad=True), (215, 412): tensor([0.8570], requires_grad=True), (215, 413): tensor([0.3151], requires_grad=True), (216, 412): tensor([0.2443], requires_grad=True), (216, 413): tensor([0.5349], requires_grad=True), (217, 412): tensor([0.8936], requires_grad=True), (217, 413): tensor([0.9200], requires_grad=True), (218, 412): tensor([0.6494], requires_grad=True), (218, 413): tensor([0.6243], requires_grad=True), (219, 412): tensor([0.2328], requires_grad=True), (219, 413): tensor([0.6047], requires_grad=True), (220, 412): tensor([0.1928], requires_grad=True), (220, 413): tensor([0.5696], requires_grad=True), (221, 412): tensor([0.6346], requires_grad=True), (221, 413): tensor([0.5115], requires_grad=True), (222, 412): tensor([0.1738], requires_grad=True), (222, 413): tensor([0.0191], requires_grad=True), (223, 412): tensor([0.1152], requires_grad=True), (223, 413): tensor([0.0268], requires_grad=True), (224, 412): tensor([0.3573], requires_grad=True), (224, 413): tensor([0.7711], requires_grad=True), (225, 412): tensor([0.1220], requires_grad=True), (225, 413): tensor([0.7720], requires_grad=True), (226, 412): tensor([0.6465], requires_grad=True), (226, 413): tensor([0.7851], requires_grad=True), (227, 412): tensor([0.4703], requires_grad=True), (227, 413): tensor([0.1039], requires_grad=True), (228, 412): tensor([0.7387], requires_grad=True), (228, 413): tensor([0.2365], requires_grad=True), (229, 412): tensor([0.3594], requires_grad=True), (229, 413): tensor([0.1323], requires_grad=True), (230, 412): tensor([0.1848], requires_grad=True), (230, 413): tensor([0.9564], requires_grad=True), (231, 412): tensor([0.5079], requires_grad=True), (231, 413): tensor([0.1372], requires_grad=True), (232, 412): tensor([0.5661], requires_grad=True), (232, 413): tensor([0.9119], requires_grad=True), (233, 412): tensor([0.1539], requires_grad=True), (233, 413): tensor([0.3817], requires_grad=True), (234, 412): tensor([0.9253], requires_grad=True), (234, 413): tensor([0.3961], requires_grad=True), (235, 412): tensor([0.7435], requires_grad=True), (235, 413): tensor([0.5539], requires_grad=True), (236, 412): tensor([0.9821], requires_grad=True), (236, 413): tensor([0.1207], requires_grad=True), (237, 412): tensor([0.8455], requires_grad=True), (237, 413): tensor([0.6629], requires_grad=True), (238, 412): tensor([0.7167], requires_grad=True), (238, 413): tensor([0.9156], requires_grad=True), (239, 412): tensor([0.6891], requires_grad=True), (239, 413): tensor([0.1493], requires_grad=True), (240, 412): tensor([0.6267], requires_grad=True), (240, 413): tensor([0.5496], requires_grad=True), (241, 412): tensor([0.2654], requires_grad=True), (241, 413): tensor([0.5301], requires_grad=True), (242, 412): tensor([0.9949], requires_grad=True), (242, 413): tensor([0.8893], requires_grad=True), (243, 412): tensor([0.0860], requires_grad=True), (243, 413): tensor([0.8751], requires_grad=True), (244, 412): tensor([0.4202], requires_grad=True), (244, 413): tensor([0.8504], requires_grad=True), (245, 412): tensor([0.1144], requires_grad=True), (245, 413): tensor([0.8638], requires_grad=True), (246, 412): tensor([0.8569], requires_grad=True), (246, 413): tensor([0.1725], requires_grad=True), (247, 412): tensor([0.2318], requires_grad=True), (247, 413): tensor([0.9219], requires_grad=True), (248, 412): tensor([0.8991], requires_grad=True), (248, 413): tensor([0.8308], requires_grad=True), (249, 412): tensor([0.5929], requires_grad=True), (249, 413): tensor([0.4090], requires_grad=True), (250, 412): tensor([0.7837], requires_grad=True), (250, 413): tensor([0.1078], requires_grad=True), (251, 412): tensor([0.8251], requires_grad=True), (251, 413): tensor([0.4436], requires_grad=True), (252, 412): tensor([0.8131], requires_grad=True), (252, 413): tensor([0.7881], requires_grad=True), (253, 412): tensor([0.1575], requires_grad=True), (253, 413): tensor([0.0129], requires_grad=True), (254, 412): tensor([0.2814], requires_grad=True), (254, 413): tensor([0.6162], requires_grad=True), (255, 412): tensor([0.2968], requires_grad=True), (255, 413): tensor([0.4737], requires_grad=True), (256, 412): tensor([0.7075], requires_grad=True), (256, 413): tensor([0.8291], requires_grad=True), (257, 412): tensor([0.8057], requires_grad=True), (257, 413): tensor([0.1870], requires_grad=True), (258, 412): tensor([0.5903], requires_grad=True), (258, 413): tensor([0.5873], requires_grad=True), (259, 412): tensor([0.0835], requires_grad=True), (259, 413): tensor([0.8776], requires_grad=True), (260, 412): tensor([0.1148], requires_grad=True), (260, 413): tensor([0.8958], requires_grad=True), (261, 412): tensor([0.8082], requires_grad=True), (261, 413): tensor([0.3453], requires_grad=True), (262, 412): tensor([0.3763], requires_grad=True), (262, 413): tensor([0.8855], requires_grad=True), (263, 412): tensor([0.1404], requires_grad=True), (263, 413): tensor([0.1470], requires_grad=True), (264, 412): tensor([0.3071], requires_grad=True), (264, 413): tensor([0.8526], requires_grad=True), (265, 412): tensor([0.8620], requires_grad=True), (265, 413): tensor([0.5823], requires_grad=True), (266, 412): tensor([0.3363], requires_grad=True), (266, 413): tensor([0.0146], requires_grad=True), (267, 412): tensor([0.0261], requires_grad=True), (267, 413): tensor([0.5180], requires_grad=True), (268, 412): tensor([0.3974], requires_grad=True), (268, 413): tensor([0.3502], requires_grad=True), (269, 412): tensor([0.4069], requires_grad=True), (269, 413): tensor([0.6371], requires_grad=True), (270, 412): tensor([0.6428], requires_grad=True), (270, 413): tensor([0.3256], requires_grad=True), (271, 412): tensor([0.9416], requires_grad=True), (271, 413): tensor([0.3182], requires_grad=True), (272, 412): tensor([0.2391], requires_grad=True), (272, 413): tensor([0.2657], requires_grad=True), (273, 412): tensor([0.5930], requires_grad=True), (273, 413): tensor([0.1995], requires_grad=True), (274, 412): tensor([0.1279], requires_grad=True), (274, 413): tensor([0.1893], requires_grad=True), (275, 412): tensor([0.2564], requires_grad=True), (275, 413): tensor([0.4157], requires_grad=True), (276, 412): tensor([0.7943], requires_grad=True), (276, 413): tensor([0.5232], requires_grad=True), (277, 412): tensor([0.7414], requires_grad=True), (277, 413): tensor([0.1896], requires_grad=True), (278, 412): tensor([0.8600], requires_grad=True), (278, 413): tensor([0.2988], requires_grad=True), (279, 412): tensor([0.2585], requires_grad=True), (279, 413): tensor([0.7302], requires_grad=True), (280, 412): tensor([0.5506], requires_grad=True), (280, 413): tensor([0.4142], requires_grad=True), (281, 412): tensor([0.2229], requires_grad=True), (281, 413): tensor([0.9807], requires_grad=True), (282, 412): tensor([0.6158], requires_grad=True), (282, 413): tensor([0.4075], requires_grad=True), (283, 412): tensor([0.5600], requires_grad=True), (283, 413): tensor([0.5950], requires_grad=True), (284, 412): tensor([0.7263], requires_grad=True), (284, 413): tensor([0.7141], requires_grad=True), (285, 412): tensor([0.3482], requires_grad=True), (285, 413): tensor([0.6573], requires_grad=True), (286, 412): tensor([0.3385], requires_grad=True), (286, 413): tensor([0.2009], requires_grad=True), (287, 412): tensor([0.8355], requires_grad=True), (287, 413): tensor([0.8739], requires_grad=True), (288, 412): tensor([0.4980], requires_grad=True), (288, 413): tensor([0.4116], requires_grad=True), (289, 412): tensor([0.9446], requires_grad=True), (289, 413): tensor([0.0676], requires_grad=True), (290, 412): tensor([0.3392], requires_grad=True), (290, 413): tensor([0.6992], requires_grad=True), (291, 412): tensor([0.2190], requires_grad=True), (291, 413): tensor([0.3430], requires_grad=True), (292, 412): tensor([0.2968], requires_grad=True), (292, 413): tensor([0.4119], requires_grad=True), (293, 412): tensor([0.8589], requires_grad=True), (293, 413): tensor([0.1151], requires_grad=True), (294, 412): tensor([0.1482], requires_grad=True), (294, 413): tensor([0.3259], requires_grad=True), (295, 412): tensor([0.4845], requires_grad=True), (295, 413): tensor([0.0197], requires_grad=True), (296, 412): tensor([0.3042], requires_grad=True), (296, 413): tensor([0.2320], requires_grad=True), (297, 412): tensor([0.4853], requires_grad=True), (297, 413): tensor([0.2566], requires_grad=True), (298, 412): tensor([0.0571], requires_grad=True), (298, 413): tensor([0.6433], requires_grad=True), (299, 412): tensor([0.6430], requires_grad=True), (299, 413): tensor([0.7776], requires_grad=True), (300, 412): tensor([0.7561], requires_grad=True), (300, 413): tensor([0.0841], requires_grad=True), (301, 412): tensor([0.3788], requires_grad=True), (301, 413): tensor([0.9615], requires_grad=True), (302, 412): tensor([0.2847], requires_grad=True), (302, 413): tensor([0.6893], requires_grad=True), (303, 412): tensor([0.0376], requires_grad=True), (303, 413): tensor([0.2458], requires_grad=True), (304, 412): tensor([0.1744], requires_grad=True), (304, 413): tensor([0.1897], requires_grad=True), (305, 412): tensor([0.4571], requires_grad=True), (305, 413): tensor([0.3268], requires_grad=True), (306, 412): tensor([0.3552], requires_grad=True), (306, 413): tensor([0.7517], requires_grad=True), (307, 412): tensor([0.7079], requires_grad=True), (307, 413): tensor([0.7421], requires_grad=True), (308, 412): tensor([0.1724], requires_grad=True), (308, 413): tensor([0.5906], requires_grad=True), (309, 412): tensor([0.2616], requires_grad=True), (309, 413): tensor([0.9118], requires_grad=True), (310, 412): tensor([0.6845], requires_grad=True), (310, 413): tensor([0.1776], requires_grad=True), (311, 412): tensor([0.8690], requires_grad=True), (311, 413): tensor([0.3935], requires_grad=True), (312, 412): tensor([0.1585], requires_grad=True), (312, 413): tensor([0.1180], requires_grad=True), (313, 412): tensor([0.4621], requires_grad=True), (313, 413): tensor([0.8344], requires_grad=True), (314, 412): tensor([0.5364], requires_grad=True), (314, 413): tensor([0.5102], requires_grad=True), (315, 412): tensor([0.9380], requires_grad=True), (315, 413): tensor([0.9782], requires_grad=True), (316, 412): tensor([0.0116], requires_grad=True), (316, 413): tensor([0.5465], requires_grad=True), (317, 412): tensor([0.8296], requires_grad=True), (317, 413): tensor([0.9249], requires_grad=True), (318, 412): tensor([0.8620], requires_grad=True), (318, 413): tensor([0.9576], requires_grad=True), (319, 412): tensor([0.8108], requires_grad=True), (319, 413): tensor([0.2170], requires_grad=True), (320, 412): tensor([0.1002], requires_grad=True), (320, 413): tensor([0.8900], requires_grad=True), (321, 412): tensor([0.7295], requires_grad=True), (321, 413): tensor([0.1440], requires_grad=True), (322, 412): tensor([0.0631], requires_grad=True), (322, 413): tensor([0.8890], requires_grad=True), (323, 412): tensor([0.9519], requires_grad=True), (323, 413): tensor([0.1470], requires_grad=True), (324, 412): tensor([0.5801], requires_grad=True), (324, 413): tensor([0.7001], requires_grad=True), (325, 412): tensor([0.2868], requires_grad=True), (325, 413): tensor([0.9479], requires_grad=True), (326, 412): tensor([0.4448], requires_grad=True), (326, 413): tensor([0.2063], requires_grad=True), (327, 412): tensor([0.9714], requires_grad=True), (327, 413): tensor([0.8906], requires_grad=True), (328, 412): tensor([0.2565], requires_grad=True), (328, 413): tensor([0.8376], requires_grad=True), (329, 412): tensor([0.2540], requires_grad=True), (329, 413): tensor([0.1464], requires_grad=True), (330, 412): tensor([0.3426], requires_grad=True), (330, 413): tensor([0.1268], requires_grad=True), (331, 412): tensor([0.0222], requires_grad=True), (331, 413): tensor([0.0853], requires_grad=True), (332, 412): tensor([0.5187], requires_grad=True), (332, 413): tensor([0.8119], requires_grad=True), (333, 412): tensor([0.6425], requires_grad=True), (333, 413): tensor([0.7626], requires_grad=True), (334, 412): tensor([0.5614], requires_grad=True), (334, 413): tensor([0.6945], requires_grad=True), (335, 412): tensor([0.9287], requires_grad=True), (335, 413): tensor([0.2735], requires_grad=True), (336, 412): tensor([0.7891], requires_grad=True), (336, 413): tensor([0.6449], requires_grad=True), (337, 412): tensor([0.0371], requires_grad=True), (337, 413): tensor([0.9808], requires_grad=True), (338, 412): tensor([0.9474], requires_grad=True), (338, 413): tensor([0.6277], requires_grad=True), (339, 412): tensor([0.7368], requires_grad=True), (339, 413): tensor([0.5596], requires_grad=True), (340, 412): tensor([0.7224], requires_grad=True), (340, 413): tensor([0.6987], requires_grad=True), (341, 412): tensor([0.5415], requires_grad=True), (341, 413): tensor([0.3516], requires_grad=True), (342, 412): tensor([0.9979], requires_grad=True), (342, 413): tensor([0.3596], requires_grad=True), (343, 412): tensor([0.7367], requires_grad=True), (343, 413): tensor([0.1488], requires_grad=True), (344, 412): tensor([0.2504], requires_grad=True), (344, 413): tensor([0.1452], requires_grad=True), (345, 412): tensor([0.7095], requires_grad=True), (345, 413): tensor([0.4249], requires_grad=True), (346, 412): tensor([0.8386], requires_grad=True), (346, 413): tensor([0.7305], requires_grad=True), (347, 412): tensor([0.0476], requires_grad=True), (347, 413): tensor([0.4812], requires_grad=True), (348, 412): tensor([0.6212], requires_grad=True), (348, 413): tensor([0.2512], requires_grad=True), (349, 412): tensor([0.0594], requires_grad=True), (349, 413): tensor([0.6268], requires_grad=True), (350, 412): tensor([0.6023], requires_grad=True), (350, 413): tensor([0.4074], requires_grad=True), (351, 412): tensor([0.6163], requires_grad=True), (351, 413): tensor([0.3269], requires_grad=True), (352, 412): tensor([0.6391], requires_grad=True), (352, 413): tensor([0.9692], requires_grad=True), (353, 412): tensor([0.8719], requires_grad=True), (353, 413): tensor([0.8207], requires_grad=True), (354, 412): tensor([0.1099], requires_grad=True), (354, 413): tensor([0.0618], requires_grad=True), (355, 412): tensor([0.3526], requires_grad=True), (355, 413): tensor([0.0564], requires_grad=True), (356, 412): tensor([0.3615], requires_grad=True), (356, 413): tensor([0.0268], requires_grad=True), (357, 412): tensor([0.0158], requires_grad=True), (357, 413): tensor([0.3919], requires_grad=True), (358, 412): tensor([0.9423], requires_grad=True), (358, 413): tensor([0.1754], requires_grad=True), (359, 412): tensor([0.7345], requires_grad=True), (359, 413): tensor([0.0199], requires_grad=True), (360, 412): tensor([0.9370], requires_grad=True), (360, 413): tensor([0.7209], requires_grad=True), (361, 412): tensor([0.5945], requires_grad=True), (361, 413): tensor([0.5718], requires_grad=True), (362, 412): tensor([0.2647], requires_grad=True), (362, 413): tensor([0.8847], requires_grad=True), (363, 412): tensor([0.9214], requires_grad=True), (363, 413): tensor([0.1411], requires_grad=True), (364, 412): tensor([0.2189], requires_grad=True), (364, 413): tensor([0.3049], requires_grad=True), (365, 412): tensor([0.9759], requires_grad=True), (365, 413): tensor([0.4363], requires_grad=True), (366, 412): tensor([0.3356], requires_grad=True), (366, 413): tensor([0.2084], requires_grad=True), (367, 412): tensor([0.3735], requires_grad=True), (367, 413): tensor([0.3305], requires_grad=True), (368, 412): tensor([0.9069], requires_grad=True), (368, 413): tensor([0.0206], requires_grad=True), (369, 412): tensor([0.4996], requires_grad=True), (369, 413): tensor([0.8821], requires_grad=True), (370, 412): tensor([0.0612], requires_grad=True), (370, 413): tensor([0.8210], requires_grad=True), (371, 412): tensor([0.7609], requires_grad=True), (371, 413): tensor([0.0443], requires_grad=True), (372, 412): tensor([0.4980], requires_grad=True), (372, 413): tensor([0.8847], requires_grad=True), (373, 412): tensor([0.7635], requires_grad=True), (373, 413): tensor([0.6597], requires_grad=True), (374, 412): tensor([0.3901], requires_grad=True), (374, 413): tensor([0.5941], requires_grad=True), (375, 412): tensor([0.4412], requires_grad=True), (375, 413): tensor([0.0719], requires_grad=True), (376, 412): tensor([0.7358], requires_grad=True), (376, 413): tensor([0.7932], requires_grad=True), (377, 412): tensor([0.1543], requires_grad=True), (377, 413): tensor([0.5684], requires_grad=True), (378, 412): tensor([0.9430], requires_grad=True), (378, 413): tensor([0.3696], requires_grad=True), (379, 412): tensor([0.5734], requires_grad=True), (379, 413): tensor([0.4299], requires_grad=True), (380, 412): tensor([0.7905], requires_grad=True), (380, 413): tensor([0.2510], requires_grad=True), (381, 412): tensor([0.0066], requires_grad=True), (381, 413): tensor([0.2291], requires_grad=True), (382, 412): tensor([0.0166], requires_grad=True), (382, 413): tensor([0.0201], requires_grad=True), (383, 412): tensor([0.0756], requires_grad=True), (383, 413): tensor([0.1817], requires_grad=True), (384, 412): tensor([0.9601], requires_grad=True), (384, 413): tensor([0.7535], requires_grad=True), (385, 412): tensor([0.7221], requires_grad=True), (385, 413): tensor([0.9726], requires_grad=True), (386, 412): tensor([0.0478], requires_grad=True), (386, 413): tensor([0.2372], requires_grad=True), (387, 412): tensor([0.3232], requires_grad=True), (387, 413): tensor([0.3033], requires_grad=True), (388, 412): tensor([0.0883], requires_grad=True), (388, 413): tensor([0.6943], requires_grad=True), (389, 412): tensor([0.0090], requires_grad=True), (389, 413): tensor([0.8475], requires_grad=True), (390, 412): tensor([0.8611], requires_grad=True), (390, 413): tensor([0.2102], requires_grad=True), (391, 412): tensor([0.9875], requires_grad=True), (391, 413): tensor([0.8941], requires_grad=True), (392, 412): tensor([0.0026], requires_grad=True), (392, 413): tensor([0.3939], requires_grad=True), (393, 412): tensor([0.3923], requires_grad=True), (393, 413): tensor([0.6845], requires_grad=True), (394, 412): tensor([0.4735], requires_grad=True), (394, 413): tensor([0.0608], requires_grad=True), (395, 412): tensor([0.4144], requires_grad=True), (395, 413): tensor([0.0094], requires_grad=True), (396, 412): tensor([0.2959], requires_grad=True), (396, 413): tensor([0.1943], requires_grad=True), (397, 412): tensor([0.6737], requires_grad=True), (397, 413): tensor([0.7425], requires_grad=True), (398, 412): tensor([0.2593], requires_grad=True), (398, 413): tensor([0.8758], requires_grad=True), (399, 412): tensor([0.5654], requires_grad=True), (399, 413): tensor([0.8345], requires_grad=True), (400, 412): tensor([0.2319], requires_grad=True), (400, 413): tensor([0.8238], requires_grad=True), (401, 412): tensor([0.2037], requires_grad=True), (401, 413): tensor([0.3124], requires_grad=True), (402, 412): tensor([0.1424], requires_grad=True), (402, 413): tensor([0.9718], requires_grad=True), (403, 412): tensor([0.6044], requires_grad=True), (403, 413): tensor([0.3574], requires_grad=True), (404, 412): tensor([0.4226], requires_grad=True), (404, 413): tensor([0.5849], requires_grad=True), (405, 412): tensor([0.9200], requires_grad=True), (405, 413): tensor([0.6450], requires_grad=True), (406, 412): tensor([0.7550], requires_grad=True), (406, 413): tensor([0.2098], requires_grad=True), (407, 412): tensor([0.9074], requires_grad=True), (407, 413): tensor([0.7644], requires_grad=True), (408, 412): tensor([0.2194], requires_grad=True), (408, 413): tensor([0.9691], requires_grad=True), (409, 412): tensor([0.7198], requires_grad=True), (409, 413): tensor([0.0816], requires_grad=True), (410, 412): tensor([0.1547], requires_grad=True), (410, 413): tensor([0.2389], requires_grad=True), (411, 412): tensor([0.8171], requires_grad=True), (411, 413): tensor([0.3563], requires_grad=True)}
Iter 10: 	accuracy is 0.8
{(0, 372): tensor([0.8997], requires_grad=True), (0, 204): tensor([0.6023], requires_grad=True), (0, 184): tensor([0.9941], requires_grad=True), (0, 158): tensor([0.1170], requires_grad=True), (0, 131): tensor([0.7624], requires_grad=True), (0, 116): tensor([0.0101], requires_grad=True), (0, 101): tensor([0.0094], requires_grad=True), (0, 98): tensor([0.4071], requires_grad=True), (0, 86): tensor([0.1246], requires_grad=True), (0, 82): tensor([0.5424], requires_grad=True), (0, 81): tensor([0.5653], requires_grad=True), (0, 78): tensor([0.8374], requires_grad=True), (0, 76): tensor([0.8708], requires_grad=True), (0, 35): tensor([0.1508], requires_grad=True), (0, 24): tensor([0.4885], requires_grad=True), (1, 287): tensor([0.9935], requires_grad=True), (1, 266): tensor([0.5894], requires_grad=True), (1, 176): tensor([0.8829], requires_grad=True), (1, 156): tensor([0.3364], requires_grad=True), (1, 137): tensor([0.5970], requires_grad=True), (1, 128): tensor([0.4210], requires_grad=True), (1, 120): tensor([0.2121], requires_grad=True), (1, 99): tensor([0.5115], requires_grad=True), (1, 77): tensor([0.1439], requires_grad=True), (1, 51): tensor([0.3531], requires_grad=True), (1, 48): tensor([0.9194], requires_grad=True), (1, 33): tensor([0.6020], requires_grad=True), (1, 32): tensor([0.9141], requires_grad=True), (1, 25): tensor([0.1324], requires_grad=True), (2, 267): tensor([0.1909], requires_grad=True), (2, 157): tensor([0.6685], requires_grad=True), (2, 154): tensor([0.3622], requires_grad=True), (2, 148): tensor([0.6290], requires_grad=True), (2, 144): tensor([0.1155], requires_grad=True), (2, 141): tensor([0.4744], requires_grad=True), (2, 66): tensor([0.8342], requires_grad=True), (2, 64): tensor([0.2126], requires_grad=True), (2, 51): tensor([0.8804], requires_grad=True), (2, 47): tensor([0.9982], requires_grad=True), (2, 31): tensor([0.6823], requires_grad=True), (3, 321): tensor([0.2166], requires_grad=True), (3, 187): tensor([0.0051], requires_grad=True), (3, 150): tensor([0.3278], requires_grad=True), (3, 124): tensor([0.4631], requires_grad=True), (3, 119): tensor([0.4897], requires_grad=True), (3, 108): tensor([0.6457], requires_grad=True), (3, 89): tensor([0.7485], requires_grad=True), (3, 71): tensor([0.6478], requires_grad=True), (3, 62): tensor([0.4904], requires_grad=True), (3, 35): tensor([0.3655], requires_grad=True), (3, 26): tensor([0.9173], requires_grad=True), (4, 391): tensor([0.0832], requires_grad=True), (4, 302): tensor([0.3916], requires_grad=True), (4, 301): tensor([0.8162], requires_grad=True), (4, 153): tensor([0.0004], requires_grad=True), (4, 134): tensor([0.7821], requires_grad=True), (4, 100): tensor([0.8150], requires_grad=True), (4, 99): tensor([0.4032], requires_grad=True), (4, 75): tensor([0.1687], requires_grad=True), (4, 55): tensor([0.6431], requires_grad=True), (4, 50): tensor([0.9682], requires_grad=True), (4, 42): tensor([0.5371], requires_grad=True), (4, 31): tensor([0.6342], requires_grad=True), (5, 288): tensor([0.1191], requires_grad=True), (5, 269): tensor([0.7044], requires_grad=True), (5, 192): tensor([0.3079], requires_grad=True), (5, 147): tensor([0.7012], requires_grad=True), (5, 130): tensor([0.0932], requires_grad=True), (5, 117): tensor([0.9377], requires_grad=True), (5, 93): tensor([0.4372], requires_grad=True), (5, 91): tensor([0.3928], requires_grad=True), (5, 87): tensor([0.2998], requires_grad=True), (5, 82): tensor([0.6590], requires_grad=True), (5, 73): tensor([0.9573], requires_grad=True), (5, 68): tensor([0.9650], requires_grad=True), (5, 47): tensor([0.0364], requires_grad=True), (5, 29): tensor([0.0865], requires_grad=True), (5, 26): tensor([0.7631], requires_grad=True), (6, 329): tensor([0.3595], requires_grad=True), (6, 264): tensor([0.9606], requires_grad=True), (6, 133): tensor([0.6576], requires_grad=True), (6, 103): tensor([0.8886], requires_grad=True), (6, 97): tensor([0.9660], requires_grad=True), (6, 88): tensor([0.6988], requires_grad=True), (6, 85): tensor([0.0195], requires_grad=True), (6, 61): tensor([0.7377], requires_grad=True), (6, 44): tensor([0.4970], requires_grad=True), (6, 43): tensor([0.0560], requires_grad=True), (7, 396): tensor([0.8098], requires_grad=True), (7, 383): tensor([0.9531], requires_grad=True), (7, 362): tensor([0.7903], requires_grad=True), (7, 278): tensor([0.2273], requires_grad=True), (7, 150): tensor([0.9738], requires_grad=True), (7, 142): tensor([0.1638], requires_grad=True), (7, 139): tensor([0.8378], requires_grad=True), (7, 125): tensor([0.8481], requires_grad=True), (7, 118): tensor([0.2233], requires_grad=True), (7, 114): tensor([0.9262], requires_grad=True), (7, 104): tensor([0.1459], requires_grad=True), (7, 88): tensor([0.9829], requires_grad=True), (7, 79): tensor([0.8640], requires_grad=True), (7, 70): tensor([0.8594], requires_grad=True), (7, 65): tensor([0.2412], requires_grad=True), (7, 63): tensor([0.7720], requires_grad=True), (8, 151): tensor([0.1128], requires_grad=True), (8, 143): tensor([0.9673], requires_grad=True), (8, 129): tensor([0.7172], requires_grad=True), (8, 123): tensor([0.9512], requires_grad=True), (8, 117): tensor([0.3282], requires_grad=True), (8, 79): tensor([0.5172], requires_grad=True), (8, 64): tensor([0.0122], requires_grad=True), (8, 55): tensor([0.6046], requires_grad=True), (8, 45): tensor([0.3080], requires_grad=True), (8, 41): tensor([0.6885], requires_grad=True), (8, 40): tensor([0.7493], requires_grad=True), (8, 37): tensor([0.8059], requires_grad=True), (9, 289): tensor([0.4132], requires_grad=True), (9, 228): tensor([0.9626], requires_grad=True), (9, 155): tensor([0.5291], requires_grad=True), (9, 138): tensor([0.1595], requires_grad=True), (9, 120): tensor([0.6430], requires_grad=True), (9, 107): tensor([0.3682], requires_grad=True), (9, 106): tensor([0.0410], requires_grad=True), (9, 90): tensor([0.8450], requires_grad=True), (9, 86): tensor([0.0659], requires_grad=True), (9, 84): tensor([0.4715], requires_grad=True), (9, 72): tensor([0.7142], requires_grad=True), (9, 71): tensor([0.3582], requires_grad=True), (9, 61): tensor([0.5806], requires_grad=True), (9, 56): tensor([0.8107], requires_grad=True), (9, 52): tensor([0.2574], requires_grad=True), (10, 341): tensor([0.4656], requires_grad=True), (10, 160): tensor([0.3986], requires_grad=True), (10, 146): tensor([0.1814], requires_grad=True), (10, 143): tensor([0.6613], requires_grad=True), (10, 102): tensor([0.1501], requires_grad=True), (10, 80): tensor([0.9274], requires_grad=True), (10, 76): tensor([0.7979], requires_grad=True), (10, 73): tensor([0.7402], requires_grad=True), (10, 60): tensor([0.6443], requires_grad=True), (10, 59): tensor([0.3026], requires_grad=True), (10, 54): tensor([0.5344], requires_grad=True), (10, 27): tensor([0.3430], requires_grad=True), (11, 410): tensor([0.4455], requires_grad=True), (11, 403): tensor([0.8082], requires_grad=True), (11, 382): tensor([0.4344], requires_grad=True), (11, 367): tensor([0.4913], requires_grad=True), (11, 149): tensor([0.8833], requires_grad=True), (11, 139): tensor([0.6077], requires_grad=True), (11, 129): tensor([0.7506], requires_grad=True), (11, 121): tensor([0.0657], requires_grad=True), (11, 113): tensor([0.0524], requires_grad=True), (11, 74): tensor([0.7210], requires_grad=True), (11, 68): tensor([0.0006], requires_grad=True), (11, 60): tensor([0.6375], requires_grad=True), (11, 58): tensor([0.8451], requires_grad=True), (11, 46): tensor([0.1534], requires_grad=True), (11, 34): tensor([0.3940], requires_grad=True), (11, 32): tensor([0.7624], requires_grad=True), (12, 371): tensor([0.1218], requires_grad=True), (12, 167): tensor([0.6612], requires_grad=True), (12, 149): tensor([0.6776], requires_grad=True), (12, 136): tensor([0.6143], requires_grad=True), (12, 128): tensor([0.2440], requires_grad=True), (12, 125): tensor([0.5615], requires_grad=True), (12, 109): tensor([0.8812], requires_grad=True), (12, 91): tensor([0.0362], requires_grad=True), (12, 90): tensor([0.9020], requires_grad=True), (12, 85): tensor([0.8242], requires_grad=True), (12, 78): tensor([0.4868], requires_grad=True), (12, 75): tensor([0.5745], requires_grad=True), (12, 57): tensor([0.3912], requires_grad=True), (12, 40): tensor([0.4667], requires_grad=True), (12, 39): tensor([0.4111], requires_grad=True), (13, 156): tensor([0.6507], requires_grad=True), (13, 104): tensor([0.6353], requires_grad=True), (13, 80): tensor([0.7306], requires_grad=True), (13, 72): tensor([0.8465], requires_grad=True), (13, 58): tensor([0.2426], requires_grad=True), (13, 49): tensor([0.4384], requires_grad=True), (13, 36): tensor([0.0766], requires_grad=True), (14, 315): tensor([0.5067], requires_grad=True), (14, 151): tensor([0.9782], requires_grad=True), (14, 132): tensor([0.5670], requires_grad=True), (14, 130): tensor([0.9032], requires_grad=True), (14, 116): tensor([0.1591], requires_grad=True), (14, 113): tensor([0.2546], requires_grad=True), (14, 96): tensor([0.1289], requires_grad=True), (14, 67): tensor([0.8087], requires_grad=True), (14, 66): tensor([0.3879], requires_grad=True), (14, 42): tensor([0.4302], requires_grad=True), (14, 38): tensor([0.6718], requires_grad=True), (14, 28): tensor([0.4504], requires_grad=True), (14, 25): tensor([0.9777], requires_grad=True), (15, 385): tensor([0.6396], requires_grad=True), (15, 348): tensor([0.3306], requires_grad=True), (15, 169): tensor([0.1485], requires_grad=True), (15, 159): tensor([0.5910], requires_grad=True), (15, 158): tensor([0.6591], requires_grad=True), (15, 140): tensor([0.2656], requires_grad=True), (15, 127): tensor([0.0478], requires_grad=True), (15, 103): tensor([0.0148], requires_grad=True), (15, 77): tensor([0.8541], requires_grad=True), (15, 46): tensor([0.2191], requires_grad=True), (15, 41): tensor([0.4018], requires_grad=True), (15, 38): tensor([0.0775], requires_grad=True), (15, 27): tensor([0.9104], requires_grad=True), (16, 199): tensor([0.2546], requires_grad=True), (16, 195): tensor([0.9879], requires_grad=True), (16, 172): tensor([0.2929], requires_grad=True), (16, 159): tensor([0.6340], requires_grad=True), (16, 152): tensor([0.4623], requires_grad=True), (16, 142): tensor([0.5167], requires_grad=True), (16, 122): tensor([0.6912], requires_grad=True), (16, 112): tensor([0.8247], requires_grad=True), (16, 110): tensor([0.7297], requires_grad=True), (16, 94): tensor([0.9753], requires_grad=True), (16, 84): tensor([0.7265], requires_grad=True), (16, 81): tensor([0.6957], requires_grad=True), (16, 54): tensor([0.9923], requires_grad=True), (16, 39): tensor([0.3099], requires_grad=True), (17, 404): tensor([0.5866], requires_grad=True), (17, 327): tensor([0.3527], requires_grad=True), (17, 239): tensor([0.0147], requires_grad=True), (17, 157): tensor([0.4058], requires_grad=True), (17, 146): tensor([0.0282], requires_grad=True), (17, 136): tensor([0.4849], requires_grad=True), (17, 133): tensor([0.6998], requires_grad=True), (17, 112): tensor([0.9810], requires_grad=True), (17, 106): tensor([0.1735], requires_grad=True), (17, 105): tensor([0.6980], requires_grad=True), (17, 101): tensor([0.6625], requires_grad=True), (17, 95): tensor([0.5390], requires_grad=True), (17, 83): tensor([0.5636], requires_grad=True), (17, 74): tensor([0.7346], requires_grad=True), (17, 53): tensor([0.6909], requires_grad=True), (17, 33): tensor([0.1444], requires_grad=True), (17, 30): tensor([0.2528], requires_grad=True), (18, 397): tensor([0.3709], requires_grad=True), (18, 147): tensor([0.8592], requires_grad=True), (18, 144): tensor([0.7643], requires_grad=True), (18, 135): tensor([0.0524], requires_grad=True), (18, 134): tensor([0.6556], requires_grad=True), (18, 131): tensor([0.1582], requires_grad=True), (18, 115): tensor([0.6304], requires_grad=True), (18, 102): tensor([0.0589], requires_grad=True), (18, 92): tensor([0.1529], requires_grad=True), (18, 89): tensor([0.1979], requires_grad=True), (18, 70): tensor([0.9732], requires_grad=True), (18, 56): tensor([0.9917], requires_grad=True), (18, 53): tensor([0.2525], requires_grad=True), (18, 45): tensor([0.8947], requires_grad=True), (18, 44): tensor([0.2576], requires_grad=True), (18, 28): tensor([0.6131], requires_grad=True), (19, 393): tensor([0.4449], requires_grad=True), (19, 283): tensor([0.2098], requires_grad=True), (19, 232): tensor([0.0691], requires_grad=True), (19, 152): tensor([0.8389], requires_grad=True), (19, 140): tensor([0.2620], requires_grad=True), (19, 126): tensor([0.8533], requires_grad=True), (19, 119): tensor([0.4857], requires_grad=True), (19, 111): tensor([0.5383], requires_grad=True), (19, 105): tensor([0.8741], requires_grad=True), (19, 100): tensor([0.3205], requires_grad=True), (19, 93): tensor([0.3581], requires_grad=True), (19, 69): tensor([0.9040], requires_grad=True), (19, 48): tensor([0.1190], requires_grad=True), (19, 37): tensor([0.2264], requires_grad=True), (19, 36): tensor([0.3295], requires_grad=True), (20, 387): tensor([0.4673], requires_grad=True), (20, 155): tensor([0.8565], requires_grad=True), (20, 145): tensor([0.3760], requires_grad=True), (20, 127): tensor([0.3850], requires_grad=True), (20, 124): tensor([0.4594], requires_grad=True), (20, 122): tensor([0.4403], requires_grad=True), (20, 115): tensor([0.8349], requires_grad=True), (20, 111): tensor([0.4702], requires_grad=True), (20, 98): tensor([0.3939], requires_grad=True), (20, 97): tensor([0.5356], requires_grad=True), (20, 96): tensor([0.6443], requires_grad=True), (20, 63): tensor([0.1945], requires_grad=True), (21, 197): tensor([0.1917], requires_grad=True), (21, 153): tensor([0.4363], requires_grad=True), (21, 148): tensor([0.4825], requires_grad=True), (21, 137): tensor([0.1847], requires_grad=True), (21, 121): tensor([0.4564], requires_grad=True), (21, 118): tensor([0.6796], requires_grad=True), (21, 92): tensor([0.7146], requires_grad=True), (21, 83): tensor([0.3296], requires_grad=True), (21, 67): tensor([0.7728], requires_grad=True), (21, 62): tensor([0.6797], requires_grad=True), (21, 59): tensor([0.2879], requires_grad=True), (21, 57): tensor([0.3305], requires_grad=True), (21, 52): tensor([0.9550], requires_grad=True), (21, 43): tensor([0.3040], requires_grad=True), (21, 29): tensor([0.0527], requires_grad=True), (21, 24): tensor([0.6130], requires_grad=True), (22, 373): tensor([0.3111], requires_grad=True), (22, 154): tensor([0.3824], requires_grad=True), (22, 145): tensor([0.8812], requires_grad=True), (22, 135): tensor([0.9820], requires_grad=True), (22, 132): tensor([0.0421], requires_grad=True), (22, 110): tensor([0.2598], requires_grad=True), (22, 109): tensor([0.3478], requires_grad=True), (22, 107): tensor([0.4417], requires_grad=True), (22, 95): tensor([0.1658], requires_grad=True), (22, 69): tensor([0.6916], requires_grad=True), (22, 65): tensor([0.9839], requires_grad=True), (22, 50): tensor([0.9379], requires_grad=True), (22, 49): tensor([0.5801], requires_grad=True), (22, 34): tensor([0.6938], requires_grad=True), (23, 324): tensor([0.5562], requires_grad=True), (23, 292): tensor([0.1404], requires_grad=True), (23, 231): tensor([0.4718], requires_grad=True), (23, 160): tensor([0.6383], requires_grad=True), (23, 141): tensor([0.3949], requires_grad=True), (23, 138): tensor([0.8510], requires_grad=True), (23, 126): tensor([0.0610], requires_grad=True), (23, 123): tensor([0.6775], requires_grad=True), (23, 114): tensor([0.7119], requires_grad=True), (23, 108): tensor([0.8678], requires_grad=True), (23, 94): tensor([0.0522], requires_grad=True), (23, 87): tensor([0.5799], requires_grad=True), (23, 30): tensor([0.1874], requires_grad=True), (24, 328): tensor([0.1603], requires_grad=True), (24, 322): tensor([0.6375], requires_grad=True), (24, 275): tensor([0.8740], requires_grad=True), (24, 230): tensor([0.8455], requires_grad=True), (24, 200): tensor([0.8033], requires_grad=True), (24, 162): tensor([0.8866], requires_grad=True), (25, 346): tensor([0.6777], requires_grad=True), (25, 318): tensor([0.3284], requires_grad=True), (25, 211): tensor([0.2962], requires_grad=True), (25, 201): tensor([0.1799], requires_grad=True), (26, 380): tensor([0.2310], requires_grad=True), (27, 365): tensor([0.7274], requires_grad=True), (27, 243): tensor([0.3426], requires_grad=True), (27, 219): tensor([0.7141], requires_grad=True), (27, 215): tensor([0.0975], requires_grad=True), (28, 220): tensor([0.7945], requires_grad=True), (28, 163): tensor([0.9529], requires_grad=True), (29, 412): tensor([0.2462], requires_grad=True), (29, 413): tensor([0.9687], requires_grad=True), (30, 206): tensor([0.0371], requires_grad=True), (31, 412): tensor([0.1069], requires_grad=True), (31, 413): tensor([0.8840], requires_grad=True), (32, 363): tensor([0.8861], requires_grad=True), (33, 412): tensor([0.2556], requires_grad=True), (33, 413): tensor([0.1265], requires_grad=True), (34, 355): tensor([0.2391], requires_grad=True), (34, 347): tensor([0.6598], requires_grad=True), (35, 412): tensor([0.2641], requires_grad=True), (35, 413): tensor([0.7634], requires_grad=True), (36, 354): tensor([0.8574], requires_grad=True), (36, 309): tensor([0.5067], requires_grad=True), (37, 277): tensor([0.8692], requires_grad=True), (38, 412): tensor([0.5448], requires_grad=True), (38, 413): tensor([0.1022], requires_grad=True), (39, 335): tensor([0.3058], requires_grad=True), (40, 395): tensor([0.1332], requires_grad=True), (40, 332): tensor([0.4663], requires_grad=True), (40, 255): tensor([0.0816], requires_grad=True), (41, 240): tensor([0.8870], requires_grad=True), (42, 234): tensor([0.3806], requires_grad=True), (42, 181): tensor([0.9619], requires_grad=True), (43, 333): tensor([0.8295], requires_grad=True), (43, 170): tensor([0.7324], requires_grad=True), (44, 210): tensor([0.8402], requires_grad=True), (45, 295): tensor([0.1379], requires_grad=True), (46, 400): tensor([0.9335], requires_grad=True), (47, 412): tensor([0.9306], requires_grad=True), (47, 413): tensor([0.9351], requires_grad=True), (48, 280): tensor([0.8100], requires_grad=True), (48, 180): tensor([0.9214], requires_grad=True), (49, 314): tensor([0.6190], requires_grad=True), (50, 316): tensor([0.4862], requires_grad=True), (50, 293): tensor([0.9930], requires_grad=True), (50, 196): tensor([0.1863], requires_grad=True), (51, 274): tensor([0.8874], requires_grad=True), (51, 235): tensor([0.4923], requires_grad=True), (52, 350): tensor([0.9294], requires_grad=True), (52, 307): tensor([0.2087], requires_grad=True), (52, 242): tensor([0.3570], requires_grad=True), (52, 179): tensor([0.1869], requires_grad=True), (53, 412): tensor([0.1007], requires_grad=True), (53, 413): tensor([0.5845], requires_grad=True), (54, 249): tensor([0.8135], requires_grad=True), (55, 247): tensor([0.9457], requires_grad=True), (56, 369): tensor([0.9283], requires_grad=True), (57, 412): tensor([0.2732], requires_grad=True), (57, 413): tensor([0.6746], requires_grad=True), (58, 412): tensor([0.3414], requires_grad=True), (58, 413): tensor([0.6129], requires_grad=True), (59, 254): tensor([0.2762], requires_grad=True), (60, 412): tensor([0.7370], requires_grad=True), (60, 413): tensor([0.1368], requires_grad=True), (61, 412): tensor([0.2592], requires_grad=True), (61, 413): tensor([0.5945], requires_grad=True), (62, 313): tensor([0.5538], requires_grad=True), (62, 214): tensor([0.3317], requires_grad=True), (63, 177): tensor([0.2974], requires_grad=True), (64, 325): tensor([0.8451], requires_grad=True), (65, 412): tensor([0.1337], requires_grad=True), (65, 413): tensor([0.9389], requires_grad=True), (66, 366): tensor([0.7473], requires_grad=True), (66, 342): tensor([0.8227], requires_grad=True), (66, 319): tensor([0.3358], requires_grad=True), (66, 299): tensor([0.6270], requires_grad=True), (66, 166): tensor([0.4205], requires_grad=True), (67, 282): tensor([0.7869], requires_grad=True), (67, 272): tensor([0.6990], requires_grad=True), (67, 246): tensor([0.0136], requires_grad=True), (67, 233): tensor([0.1684], requires_grad=True), (67, 212): tensor([0.9549], requires_grad=True), (68, 305): tensor([0.9149], requires_grad=True), (68, 291): tensor([0.1427], requires_grad=True), (68, 268): tensor([0.4589], requires_grad=True), (68, 259): tensor([0.6272], requires_grad=True), (68, 224): tensor([0.8725], requires_grad=True), (69, 381): tensor([0.7094], requires_grad=True), (69, 376): tensor([0.0559], requires_grad=True), (69, 364): tensor([0.5757], requires_grad=True), (70, 412): tensor([0.8118], requires_grad=True), (70, 413): tensor([0.7402], requires_grad=True), (71, 238): tensor([0.6297], requires_grad=True), (72, 303): tensor([0.9027], requires_grad=True), (72, 286): tensor([0.0688], requires_grad=True), (72, 227): tensor([0.5594], requires_grad=True), (72, 225): tensor([0.4182], requires_grad=True), (73, 358): tensor([0.8404], requires_grad=True), (73, 330): tensor([0.4936], requires_grad=True), (74, 357): tensor([0.8115], requires_grad=True), (74, 276): tensor([0.5288], requires_grad=True), (74, 273): tensor([0.9130], requires_grad=True), (74, 258): tensor([0.3945], requires_grad=True), (74, 229): tensor([0.8395], requires_grad=True), (75, 412): tensor([0.8231], requires_grad=True), (75, 413): tensor([0.1187], requires_grad=True), (76, 360): tensor([0.5943], requires_grad=True), (76, 168): tensor([0.5217], requires_grad=True), (77, 412): tensor([0.2592], requires_grad=True), (77, 413): tensor([0.2519], requires_grad=True), (78, 412): tensor([0.0459], requires_grad=True), (78, 413): tensor([0.9529], requires_grad=True), (79, 412): tensor([0.9231], requires_grad=True), (79, 413): tensor([0.5250], requires_grad=True), (80, 352): tensor([0.0686], requires_grad=True), (80, 339): tensor([0.1524], requires_grad=True), (80, 244): tensor([0.8219], requires_grad=True), (81, 384): tensor([0.9372], requires_grad=True), (81, 221): tensor([0.4275], requires_grad=True), (81, 182): tensor([0.0752], requires_grad=True), (82, 250): tensor([0.6488], requires_grad=True), (82, 165): tensor([0.0406], requires_grad=True), (83, 304): tensor([0.2220], requires_grad=True), (83, 290): tensor([0.9514], requires_grad=True), (83, 218): tensor([0.1345], requires_grad=True), (84, 390): tensor([0.0608], requires_grad=True), (84, 375): tensor([0.8473], requires_grad=True), (84, 217): tensor([0.8937], requires_grad=True), (84, 178): tensor([0.6749], requires_grad=True), (85, 412): tensor([0.1500], requires_grad=True), (85, 413): tensor([0.2041], requires_grad=True), (86, 359): tensor([0.7494], requires_grad=True), (86, 297): tensor([0.4886], requires_grad=True), (87, 402): tensor([0.7870], requires_grad=True), (88, 408): tensor([0.4412], requires_grad=True), (88, 284): tensor([0.8223], requires_grad=True), (88, 256): tensor([0.9642], requires_grad=True), (89, 174): tensor([0.0590], requires_grad=True), (90, 356): tensor([0.1807], requires_grad=True), (91, 262): tensor([0.3433], requires_grad=True), (91, 213): tensor([0.8968], requires_grad=True), (91, 188): tensor([0.9977], requires_grad=True), (92, 370): tensor([0.9970], requires_grad=True), (92, 271): tensor([0.0910], requires_grad=True), (93, 361): tensor([0.2741], requires_grad=True), (94, 389): tensor([0.1736], requires_grad=True), (95, 260): tensor([0.0004], requires_grad=True), (95, 226): tensor([0.5117], requires_grad=True), (95, 223): tensor([0.7398], requires_grad=True), (96, 331): tensor([0.0711], requires_grad=True), (96, 312): tensor([0.8255], requires_grad=True), (97, 412): tensor([0.3965], requires_grad=True), (97, 413): tensor([0.4387], requires_grad=True), (98, 222): tensor([0.8326], requires_grad=True), (99, 405): tensor([0.2069], requires_grad=True), (99, 388): tensor([0.1723], requires_grad=True), (99, 337): tensor([0.0192], requires_grad=True), (99, 261): tensor([0.8256], requires_grad=True), (100, 409): tensor([0.4034], requires_grad=True), (100, 398): tensor([0.4242], requires_grad=True), (101, 338): tensor([0.9634], requires_grad=True), (101, 175): tensor([0.6894], requires_grad=True), (102, 411): tensor([0.0255], requires_grad=True), (102, 257): tensor([0.5569], requires_grad=True), (102, 252): tensor([0.9705], requires_grad=True), (103, 340): tensor([0.5823], requires_grad=True), (103, 326): tensor([0.5503], requires_grad=True), (103, 281): tensor([0.0704], requires_grad=True), (104, 236): tensor([0.7037], requires_grad=True), (104, 173): tensor([0.0618], requires_grad=True), (104, 161): tensor([0.9542], requires_grad=True), (105, 412): tensor([0.5215], requires_grad=True), (105, 413): tensor([0.7931], requires_grad=True), (106, 412): tensor([0.6657], requires_grad=True), (106, 413): tensor([0.1001], requires_grad=True), (107, 386): tensor([0.7492], requires_grad=True), (107, 308): tensor([0.6675], requires_grad=True), (107, 189): tensor([0.8672], requires_grad=True), (108, 368): tensor([0.0586], requires_grad=True), (108, 186): tensor([0.9447], requires_grad=True), (109, 344): tensor([0.1193], requires_grad=True), (109, 336): tensor([0.8429], requires_grad=True), (109, 191): tensor([0.6164], requires_grad=True), (110, 251): tensor([0.4866], requires_grad=True), (111, 216): tensor([0.7424], requires_grad=True), (112, 412): tensor([0.4768], requires_grad=True), (112, 413): tensor([0.5579], requires_grad=True), (113, 164): tensor([0.2512], requires_grad=True), (114, 317): tensor([0.7244], requires_grad=True), (114, 263): tensor([0.9883], requires_grad=True), (115, 279): tensor([0.6471], requires_grad=True), (116, 377): tensor([0.3599], requires_grad=True), (116, 270): tensor([0.8923], requires_grad=True), (116, 253): tensor([0.7670], requires_grad=True), (116, 241): tensor([0.7871], requires_grad=True), (116, 205): tensor([0.0924], requires_grad=True), (116, 198): tensor([0.5699], requires_grad=True), (117, 345): tensor([0.2545], requires_grad=True), (117, 306): tensor([0.5450], requires_grad=True), (117, 202): tensor([0.6998], requires_grad=True), (118, 412): tensor([0.3314], requires_grad=True), (118, 413): tensor([0.7495], requires_grad=True), (119, 323): tensor([0.0981], requires_grad=True), (119, 298): tensor([0.9001], requires_grad=True), (120, 407): tensor([0.6874], requires_grad=True), (121, 374): tensor([0.6487], requires_grad=True), (121, 185): tensor([0.0516], requires_grad=True), (122, 294): tensor([0.3232], requires_grad=True), (122, 203): tensor([0.7375], requires_grad=True), (123, 412): tensor([0.5732], requires_grad=True), (123, 413): tensor([0.6915], requires_grad=True), (124, 392): tensor([0.6721], requires_grad=True), (124, 379): tensor([0.7049], requires_grad=True), (125, 334): tensor([0.8217], requires_grad=True), (125, 265): tensor([0.2217], requires_grad=True), (126, 399): tensor([0.7467], requires_grad=True), (126, 351): tensor([0.4211], requires_grad=True), (126, 208): tensor([0.8693], requires_grad=True), (127, 285): tensor([0.7388], requires_grad=True), (127, 209): tensor([0.5432], requires_grad=True), (128, 401): tensor([0.5151], requires_grad=True), (129, 394): tensor([0.9801], requires_grad=True), (129, 378): tensor([0.3369], requires_grad=True), (129, 311): tensor([0.5207], requires_grad=True), (129, 171): tensor([0.0688], requires_grad=True), (130, 207): tensor([0.3487], requires_grad=True), (130, 194): tensor([0.2495], requires_grad=True), (130, 183): tensor([0.2912], requires_grad=True), (131, 406): tensor([0.8405], requires_grad=True), (131, 237): tensor([0.1687], requires_grad=True), (131, 190): tensor([0.5491], requires_grad=True), (132, 300): tensor([0.1043], requires_grad=True), (132, 248): tensor([0.3654], requires_grad=True), (133, 349): tensor([0.2705], requires_grad=True), (133, 320): tensor([0.1697], requires_grad=True), (133, 310): tensor([0.2455], requires_grad=True), (134, 343): tensor([0.3654], requires_grad=True), (135, 296): tensor([0.5950], requires_grad=True), (135, 245): tensor([0.3094], requires_grad=True), (135, 193): tensor([0.1618], requires_grad=True), (136, 353): tensor([0.9038], requires_grad=True), (137, 412): tensor([0.7586], requires_grad=True), (137, 413): tensor([0.0811], requires_grad=True), (138, 412): tensor([0.5994], requires_grad=True), (138, 413): tensor([0.8705], requires_grad=True), (139, 412): tensor([0.0198], requires_grad=True), (139, 413): tensor([0.2372], requires_grad=True), (140, 412): tensor([0.2409], requires_grad=True), (140, 413): tensor([0.7934], requires_grad=True), (141, 412): tensor([0.2130], requires_grad=True), (141, 413): tensor([0.8855], requires_grad=True), (142, 412): tensor([0.7337], requires_grad=True), (142, 413): tensor([0.9928], requires_grad=True), (143, 412): tensor([0.5393], requires_grad=True), (143, 413): tensor([0.6158], requires_grad=True), (144, 412): tensor([0.3209], requires_grad=True), (144, 413): tensor([0.9932], requires_grad=True), (145, 412): tensor([0.6472], requires_grad=True), (145, 413): tensor([0.3593], requires_grad=True), (146, 412): tensor([0.9392], requires_grad=True), (146, 413): tensor([0.8571], requires_grad=True), (147, 412): tensor([0.3127], requires_grad=True), (147, 413): tensor([0.5701], requires_grad=True), (148, 412): tensor([0.3955], requires_grad=True), (148, 413): tensor([0.2780], requires_grad=True), (149, 412): tensor([0.5130], requires_grad=True), (149, 413): tensor([0.9509], requires_grad=True), (150, 412): tensor([0.5690], requires_grad=True), (150, 413): tensor([0.1389], requires_grad=True), (151, 412): tensor([0.1560], requires_grad=True), (151, 413): tensor([0.6493], requires_grad=True), (152, 412): tensor([0.7101], requires_grad=True), (152, 413): tensor([0.4936], requires_grad=True), (153, 412): tensor([0.8659], requires_grad=True), (153, 413): tensor([0.4451], requires_grad=True), (154, 412): tensor([0.0759], requires_grad=True), (154, 413): tensor([0.8325], requires_grad=True), (155, 412): tensor([0.1967], requires_grad=True), (155, 413): tensor([0.8475], requires_grad=True), (156, 412): tensor([0.2893], requires_grad=True), (156, 413): tensor([0.5689], requires_grad=True), (157, 412): tensor([0.1242], requires_grad=True), (157, 413): tensor([0.4661], requires_grad=True), (158, 412): tensor([0.5297], requires_grad=True), (158, 413): tensor([0.0829], requires_grad=True), (159, 412): tensor([0.2962], requires_grad=True), (159, 413): tensor([0.9555], requires_grad=True), (160, 412): tensor([0.4536], requires_grad=True), (160, 413): tensor([0.4024], requires_grad=True), (161, 412): tensor([0.2290], requires_grad=True), (161, 413): tensor([0.3193], requires_grad=True), (162, 412): tensor([0.1319], requires_grad=True), (162, 413): tensor([0.2943], requires_grad=True), (163, 412): tensor([0.3875], requires_grad=True), (163, 413): tensor([0.3262], requires_grad=True), (164, 412): tensor([0.1006], requires_grad=True), (164, 413): tensor([0.8982], requires_grad=True), (165, 412): tensor([0.6527], requires_grad=True), (165, 413): tensor([0.3528], requires_grad=True), (166, 412): tensor([0.6747], requires_grad=True), (166, 413): tensor([0.0875], requires_grad=True), (167, 412): tensor([0.1870], requires_grad=True), (167, 413): tensor([0.1354], requires_grad=True), (168, 412): tensor([0.7994], requires_grad=True), (168, 413): tensor([0.7926], requires_grad=True), (169, 412): tensor([0.4886], requires_grad=True), (169, 413): tensor([0.8279], requires_grad=True), (170, 412): tensor([0.0500], requires_grad=True), (170, 413): tensor([0.7035], requires_grad=True), (171, 412): tensor([0.6097], requires_grad=True), (171, 413): tensor([0.4274], requires_grad=True), (172, 412): tensor([0.5641], requires_grad=True), (172, 413): tensor([0.8570], requires_grad=True), (173, 412): tensor([0.9387], requires_grad=True), (173, 413): tensor([0.4489], requires_grad=True), (174, 412): tensor([0.4084], requires_grad=True), (174, 413): tensor([0.1152], requires_grad=True), (175, 412): tensor([0.3021], requires_grad=True), (175, 413): tensor([0.8737], requires_grad=True), (176, 412): tensor([0.9523], requires_grad=True), (176, 413): tensor([0.4003], requires_grad=True), (177, 412): tensor([0.6736], requires_grad=True), (177, 413): tensor([0.2584], requires_grad=True), (178, 412): tensor([0.6327], requires_grad=True), (178, 413): tensor([0.4962], requires_grad=True), (179, 412): tensor([0.5157], requires_grad=True), (179, 413): tensor([0.7273], requires_grad=True), (180, 412): tensor([0.8850], requires_grad=True), (180, 413): tensor([0.9670], requires_grad=True), (181, 412): tensor([0.2562], requires_grad=True), (181, 413): tensor([0.9671], requires_grad=True), (182, 412): tensor([0.1193], requires_grad=True), (182, 413): tensor([0.9405], requires_grad=True), (183, 412): tensor([0.0058], requires_grad=True), (183, 413): tensor([0.5008], requires_grad=True), (184, 412): tensor([0.5201], requires_grad=True), (184, 413): tensor([0.6907], requires_grad=True), (185, 412): tensor([0.6142], requires_grad=True), (185, 413): tensor([0.2695], requires_grad=True), (186, 412): tensor([0.4931], requires_grad=True), (186, 413): tensor([0.5584], requires_grad=True), (187, 412): tensor([0.8464], requires_grad=True), (187, 413): tensor([0.2917], requires_grad=True), (188, 412): tensor([0.1985], requires_grad=True), (188, 413): tensor([0.5846], requires_grad=True), (189, 412): tensor([0.9712], requires_grad=True), (189, 413): tensor([0.6099], requires_grad=True), (190, 412): tensor([0.6178], requires_grad=True), (190, 413): tensor([0.8131], requires_grad=True), (191, 412): tensor([0.4968], requires_grad=True), (191, 413): tensor([0.8869], requires_grad=True), (192, 412): tensor([0.1030], requires_grad=True), (192, 413): tensor([0.6174], requires_grad=True), (193, 412): tensor([0.8713], requires_grad=True), (193, 413): tensor([0.3696], requires_grad=True), (194, 412): tensor([0.1063], requires_grad=True), (194, 413): tensor([0.7472], requires_grad=True), (195, 412): tensor([0.7273], requires_grad=True), (195, 413): tensor([0.5913], requires_grad=True), (196, 412): tensor([0.9158], requires_grad=True), (196, 413): tensor([0.0601], requires_grad=True), (197, 412): tensor([0.8583], requires_grad=True), (197, 413): tensor([0.0489], requires_grad=True), (198, 412): tensor([0.0687], requires_grad=True), (198, 413): tensor([0.7444], requires_grad=True), (199, 412): tensor([0.3229], requires_grad=True), (199, 413): tensor([0.4100], requires_grad=True), (200, 412): tensor([0.1557], requires_grad=True), (200, 413): tensor([0.6272], requires_grad=True), (201, 412): tensor([0.1060], requires_grad=True), (201, 413): tensor([0.9196], requires_grad=True), (202, 412): tensor([0.7303], requires_grad=True), (202, 413): tensor([0.5760], requires_grad=True), (203, 412): tensor([0.4190], requires_grad=True), (203, 413): tensor([0.9515], requires_grad=True), (204, 412): tensor([0.9037], requires_grad=True), (204, 413): tensor([0.6048], requires_grad=True), (205, 412): tensor([0.3010], requires_grad=True), (205, 413): tensor([0.2531], requires_grad=True), (206, 412): tensor([0.0504], requires_grad=True), (206, 413): tensor([0.4846], requires_grad=True), (207, 412): tensor([0.1733], requires_grad=True), (207, 413): tensor([0.3400], requires_grad=True), (208, 412): tensor([0.0253], requires_grad=True), (208, 413): tensor([0.0373], requires_grad=True), (209, 412): tensor([0.6395], requires_grad=True), (209, 413): tensor([0.1842], requires_grad=True), (210, 412): tensor([0.1977], requires_grad=True), (210, 413): tensor([0.0494], requires_grad=True), (211, 412): tensor([0.3572], requires_grad=True), (211, 413): tensor([0.5790], requires_grad=True), (212, 412): tensor([0.3294], requires_grad=True), (212, 413): tensor([0.5235], requires_grad=True), (213, 412): tensor([0.3182], requires_grad=True), (213, 413): tensor([0.3998], requires_grad=True), (214, 412): tensor([0.3406], requires_grad=True), (214, 413): tensor([0.4068], requires_grad=True), (215, 412): tensor([0.8570], requires_grad=True), (215, 413): tensor([0.3151], requires_grad=True), (216, 412): tensor([0.2443], requires_grad=True), (216, 413): tensor([0.5349], requires_grad=True), (217, 412): tensor([0.8936], requires_grad=True), (217, 413): tensor([0.9200], requires_grad=True), (218, 412): tensor([0.6494], requires_grad=True), (218, 413): tensor([0.6243], requires_grad=True), (219, 412): tensor([0.2328], requires_grad=True), (219, 413): tensor([0.6047], requires_grad=True), (220, 412): tensor([0.1928], requires_grad=True), (220, 413): tensor([0.5696], requires_grad=True), (221, 412): tensor([0.6346], requires_grad=True), (221, 413): tensor([0.5115], requires_grad=True), (222, 412): tensor([0.1738], requires_grad=True), (222, 413): tensor([0.0191], requires_grad=True), (223, 412): tensor([0.1152], requires_grad=True), (223, 413): tensor([0.0268], requires_grad=True), (224, 412): tensor([0.3573], requires_grad=True), (224, 413): tensor([0.7711], requires_grad=True), (225, 412): tensor([0.1220], requires_grad=True), (225, 413): tensor([0.7720], requires_grad=True), (226, 412): tensor([0.6465], requires_grad=True), (226, 413): tensor([0.7851], requires_grad=True), (227, 412): tensor([0.4703], requires_grad=True), (227, 413): tensor([0.1039], requires_grad=True), (228, 412): tensor([0.7387], requires_grad=True), (228, 413): tensor([0.2365], requires_grad=True), (229, 412): tensor([0.3594], requires_grad=True), (229, 413): tensor([0.1323], requires_grad=True), (230, 412): tensor([0.1848], requires_grad=True), (230, 413): tensor([0.9564], requires_grad=True), (231, 412): tensor([0.5079], requires_grad=True), (231, 413): tensor([0.1372], requires_grad=True), (232, 412): tensor([0.5664], requires_grad=True), (232, 413): tensor([0.9115], requires_grad=True), (233, 412): tensor([0.1539], requires_grad=True), (233, 413): tensor([0.3817], requires_grad=True), (234, 412): tensor([0.9253], requires_grad=True), (234, 413): tensor([0.3961], requires_grad=True), (235, 412): tensor([0.7435], requires_grad=True), (235, 413): tensor([0.5539], requires_grad=True), (236, 412): tensor([0.9821], requires_grad=True), (236, 413): tensor([0.1207], requires_grad=True), (237, 412): tensor([0.8455], requires_grad=True), (237, 413): tensor([0.6629], requires_grad=True), (238, 412): tensor([0.7167], requires_grad=True), (238, 413): tensor([0.9156], requires_grad=True), (239, 412): tensor([0.6892], requires_grad=True), (239, 413): tensor([0.1492], requires_grad=True), (240, 412): tensor([0.6267], requires_grad=True), (240, 413): tensor([0.5496], requires_grad=True), (241, 412): tensor([0.2654], requires_grad=True), (241, 413): tensor([0.5301], requires_grad=True), (242, 412): tensor([0.9949], requires_grad=True), (242, 413): tensor([0.8893], requires_grad=True), (243, 412): tensor([0.0860], requires_grad=True), (243, 413): tensor([0.8751], requires_grad=True), (244, 412): tensor([0.4202], requires_grad=True), (244, 413): tensor([0.8504], requires_grad=True), (245, 412): tensor([0.1144], requires_grad=True), (245, 413): tensor([0.8638], requires_grad=True), (246, 412): tensor([0.8569], requires_grad=True), (246, 413): tensor([0.1725], requires_grad=True), (247, 412): tensor([0.2318], requires_grad=True), (247, 413): tensor([0.9219], requires_grad=True), (248, 412): tensor([0.8991], requires_grad=True), (248, 413): tensor([0.8308], requires_grad=True), (249, 412): tensor([0.5929], requires_grad=True), (249, 413): tensor([0.4090], requires_grad=True), (250, 412): tensor([0.7837], requires_grad=True), (250, 413): tensor([0.1078], requires_grad=True), (251, 412): tensor([0.8251], requires_grad=True), (251, 413): tensor([0.4436], requires_grad=True), (252, 412): tensor([0.8131], requires_grad=True), (252, 413): tensor([0.7881], requires_grad=True), (253, 412): tensor([0.1575], requires_grad=True), (253, 413): tensor([0.0129], requires_grad=True), (254, 412): tensor([0.2814], requires_grad=True), (254, 413): tensor([0.6162], requires_grad=True), (255, 412): tensor([0.2968], requires_grad=True), (255, 413): tensor([0.4737], requires_grad=True), (256, 412): tensor([0.7074], requires_grad=True), (256, 413): tensor([0.8293], requires_grad=True), (257, 412): tensor([0.8057], requires_grad=True), (257, 413): tensor([0.1870], requires_grad=True), (258, 412): tensor([0.5903], requires_grad=True), (258, 413): tensor([0.5873], requires_grad=True), (259, 412): tensor([0.0835], requires_grad=True), (259, 413): tensor([0.8776], requires_grad=True), (260, 412): tensor([0.1148], requires_grad=True), (260, 413): tensor([0.8958], requires_grad=True), (261, 412): tensor([0.8082], requires_grad=True), (261, 413): tensor([0.3453], requires_grad=True), (262, 412): tensor([0.3763], requires_grad=True), (262, 413): tensor([0.8855], requires_grad=True), (263, 412): tensor([0.1403], requires_grad=True), (263, 413): tensor([0.1472], requires_grad=True), (264, 412): tensor([0.3071], requires_grad=True), (264, 413): tensor([0.8526], requires_grad=True), (265, 412): tensor([0.8620], requires_grad=True), (265, 413): tensor([0.5823], requires_grad=True), (266, 412): tensor([0.3363], requires_grad=True), (266, 413): tensor([0.0146], requires_grad=True), (267, 412): tensor([0.0261], requires_grad=True), (267, 413): tensor([0.5180], requires_grad=True), (268, 412): tensor([0.3974], requires_grad=True), (268, 413): tensor([0.3502], requires_grad=True), (269, 412): tensor([0.4069], requires_grad=True), (269, 413): tensor([0.6371], requires_grad=True), (270, 412): tensor([0.6428], requires_grad=True), (270, 413): tensor([0.3256], requires_grad=True), (271, 412): tensor([0.9416], requires_grad=True), (271, 413): tensor([0.3182], requires_grad=True), (272, 412): tensor([0.2390], requires_grad=True), (272, 413): tensor([0.2658], requires_grad=True), (273, 412): tensor([0.5930], requires_grad=True), (273, 413): tensor([0.1995], requires_grad=True), (274, 412): tensor([0.1279], requires_grad=True), (274, 413): tensor([0.1893], requires_grad=True), (275, 412): tensor([0.2564], requires_grad=True), (275, 413): tensor([0.4157], requires_grad=True), (276, 412): tensor([0.7943], requires_grad=True), (276, 413): tensor([0.5232], requires_grad=True), (277, 412): tensor([0.7414], requires_grad=True), (277, 413): tensor([0.1896], requires_grad=True), (278, 412): tensor([0.8600], requires_grad=True), (278, 413): tensor([0.2988], requires_grad=True), (279, 412): tensor([0.2585], requires_grad=True), (279, 413): tensor([0.7302], requires_grad=True), (280, 412): tensor([0.5506], requires_grad=True), (280, 413): tensor([0.4142], requires_grad=True), (281, 412): tensor([0.2229], requires_grad=True), (281, 413): tensor([0.9807], requires_grad=True), (282, 412): tensor([0.6158], requires_grad=True), (282, 413): tensor([0.4075], requires_grad=True), (283, 412): tensor([0.5612], requires_grad=True), (283, 413): tensor([0.5939], requires_grad=True), (284, 412): tensor([0.7263], requires_grad=True), (284, 413): tensor([0.7141], requires_grad=True), (285, 412): tensor([0.3482], requires_grad=True), (285, 413): tensor([0.6573], requires_grad=True), (286, 412): tensor([0.3385], requires_grad=True), (286, 413): tensor([0.2009], requires_grad=True), (287, 412): tensor([0.8355], requires_grad=True), (287, 413): tensor([0.8739], requires_grad=True), (288, 412): tensor([0.4980], requires_grad=True), (288, 413): tensor([0.4117], requires_grad=True), (289, 412): tensor([0.9446], requires_grad=True), (289, 413): tensor([0.0676], requires_grad=True), (290, 412): tensor([0.3392], requires_grad=True), (290, 413): tensor([0.6992], requires_grad=True), (291, 412): tensor([0.2190], requires_grad=True), (291, 413): tensor([0.3430], requires_grad=True), (292, 412): tensor([0.2968], requires_grad=True), (292, 413): tensor([0.4119], requires_grad=True), (293, 412): tensor([0.8589], requires_grad=True), (293, 413): tensor([0.1151], requires_grad=True), (294, 412): tensor([0.1481], requires_grad=True), (294, 413): tensor([0.3259], requires_grad=True), (295, 412): tensor([0.4845], requires_grad=True), (295, 413): tensor([0.0197], requires_grad=True), (296, 412): tensor([0.3042], requires_grad=True), (296, 413): tensor([0.2320], requires_grad=True), (297, 412): tensor([0.4853], requires_grad=True), (297, 413): tensor([0.2566], requires_grad=True), (298, 412): tensor([0.0571], requires_grad=True), (298, 413): tensor([0.6433], requires_grad=True), (299, 412): tensor([0.6430], requires_grad=True), (299, 413): tensor([0.7777], requires_grad=True), (300, 412): tensor([0.7561], requires_grad=True), (300, 413): tensor([0.0841], requires_grad=True), (301, 412): tensor([0.3788], requires_grad=True), (301, 413): tensor([0.9615], requires_grad=True), (302, 412): tensor([0.2847], requires_grad=True), (302, 413): tensor([0.6893], requires_grad=True), (303, 412): tensor([0.0411], requires_grad=True), (303, 413): tensor([0.2422], requires_grad=True), (304, 412): tensor([0.1744], requires_grad=True), (304, 413): tensor([0.1897], requires_grad=True), (305, 412): tensor([0.4571], requires_grad=True), (305, 413): tensor([0.3268], requires_grad=True), (306, 412): tensor([0.3552], requires_grad=True), (306, 413): tensor([0.7517], requires_grad=True), (307, 412): tensor([0.7079], requires_grad=True), (307, 413): tensor([0.7421], requires_grad=True), (308, 412): tensor([0.1724], requires_grad=True), (308, 413): tensor([0.5906], requires_grad=True), (309, 412): tensor([0.2616], requires_grad=True), (309, 413): tensor([0.9118], requires_grad=True), (310, 412): tensor([0.6845], requires_grad=True), (310, 413): tensor([0.1776], requires_grad=True), (311, 412): tensor([0.8690], requires_grad=True), (311, 413): tensor([0.3935], requires_grad=True), (312, 412): tensor([0.1585], requires_grad=True), (312, 413): tensor([0.1180], requires_grad=True), (313, 412): tensor([0.4621], requires_grad=True), (313, 413): tensor([0.8344], requires_grad=True), (314, 412): tensor([0.5364], requires_grad=True), (314, 413): tensor([0.5102], requires_grad=True), (315, 412): tensor([0.9391], requires_grad=True), (315, 413): tensor([0.9771], requires_grad=True), (316, 412): tensor([0.0116], requires_grad=True), (316, 413): tensor([0.5465], requires_grad=True), (317, 412): tensor([0.8296], requires_grad=True), (317, 413): tensor([0.9249], requires_grad=True), (318, 412): tensor([0.8620], requires_grad=True), (318, 413): tensor([0.9576], requires_grad=True), (319, 412): tensor([0.8108], requires_grad=True), (319, 413): tensor([0.2170], requires_grad=True), (320, 412): tensor([0.1002], requires_grad=True), (320, 413): tensor([0.8900], requires_grad=True), (321, 412): tensor([0.7295], requires_grad=True), (321, 413): tensor([0.1440], requires_grad=True), (322, 412): tensor([0.0631], requires_grad=True), (322, 413): tensor([0.8890], requires_grad=True), (323, 412): tensor([0.9519], requires_grad=True), (323, 413): tensor([0.1470], requires_grad=True), (324, 412): tensor([0.5801], requires_grad=True), (324, 413): tensor([0.7001], requires_grad=True), (325, 412): tensor([0.2868], requires_grad=True), (325, 413): tensor([0.9479], requires_grad=True), (326, 412): tensor([0.4448], requires_grad=True), (326, 413): tensor([0.2063], requires_grad=True), (327, 412): tensor([0.9734], requires_grad=True), (327, 413): tensor([0.8886], requires_grad=True), (328, 412): tensor([0.2565], requires_grad=True), (328, 413): tensor([0.8376], requires_grad=True), (329, 412): tensor([0.2540], requires_grad=True), (329, 413): tensor([0.1464], requires_grad=True), (330, 412): tensor([0.3426], requires_grad=True), (330, 413): tensor([0.1268], requires_grad=True), (331, 412): tensor([0.0222], requires_grad=True), (331, 413): tensor([0.0853], requires_grad=True), (332, 412): tensor([0.5187], requires_grad=True), (332, 413): tensor([0.8119], requires_grad=True), (333, 412): tensor([0.6424], requires_grad=True), (333, 413): tensor([0.7626], requires_grad=True), (334, 412): tensor([0.5614], requires_grad=True), (334, 413): tensor([0.6945], requires_grad=True), (335, 412): tensor([0.9287], requires_grad=True), (335, 413): tensor([0.2735], requires_grad=True), (336, 412): tensor([0.7891], requires_grad=True), (336, 413): tensor([0.6449], requires_grad=True), (337, 412): tensor([0.0371], requires_grad=True), (337, 413): tensor([0.9808], requires_grad=True), (338, 412): tensor([0.9474], requires_grad=True), (338, 413): tensor([0.6277], requires_grad=True), (339, 412): tensor([0.7368], requires_grad=True), (339, 413): tensor([0.5596], requires_grad=True), (340, 412): tensor([0.7224], requires_grad=True), (340, 413): tensor([0.6987], requires_grad=True), (341, 412): tensor([0.5415], requires_grad=True), (341, 413): tensor([0.3516], requires_grad=True), (342, 412): tensor([0.9979], requires_grad=True), (342, 413): tensor([0.3596], requires_grad=True), (343, 412): tensor([0.7367], requires_grad=True), (343, 413): tensor([0.1488], requires_grad=True), (344, 412): tensor([0.2504], requires_grad=True), (344, 413): tensor([0.1452], requires_grad=True), (345, 412): tensor([0.7095], requires_grad=True), (345, 413): tensor([0.4249], requires_grad=True), (346, 412): tensor([0.8386], requires_grad=True), (346, 413): tensor([0.7305], requires_grad=True), (347, 412): tensor([0.0476], requires_grad=True), (347, 413): tensor([0.4812], requires_grad=True), (348, 412): tensor([0.6212], requires_grad=True), (348, 413): tensor([0.2512], requires_grad=True), (349, 412): tensor([0.0594], requires_grad=True), (349, 413): tensor([0.6268], requires_grad=True), (350, 412): tensor([0.6023], requires_grad=True), (350, 413): tensor([0.4074], requires_grad=True), (351, 412): tensor([0.6163], requires_grad=True), (351, 413): tensor([0.3269], requires_grad=True), (352, 412): tensor([0.6391], requires_grad=True), (352, 413): tensor([0.9692], requires_grad=True), (353, 412): tensor([0.8719], requires_grad=True), (353, 413): tensor([0.8207], requires_grad=True), (354, 412): tensor([0.1099], requires_grad=True), (354, 413): tensor([0.0618], requires_grad=True), (355, 412): tensor([0.3526], requires_grad=True), (355, 413): tensor([0.0564], requires_grad=True), (356, 412): tensor([0.3615], requires_grad=True), (356, 413): tensor([0.0268], requires_grad=True), (357, 412): tensor([0.0166], requires_grad=True), (357, 413): tensor([0.3911], requires_grad=True), (358, 412): tensor([0.9423], requires_grad=True), (358, 413): tensor([0.1754], requires_grad=True), (359, 412): tensor([0.7345], requires_grad=True), (359, 413): tensor([0.0199], requires_grad=True), (360, 412): tensor([0.9370], requires_grad=True), (360, 413): tensor([0.7209], requires_grad=True), (361, 412): tensor([0.5945], requires_grad=True), (361, 413): tensor([0.5718], requires_grad=True), (362, 412): tensor([0.2647], requires_grad=True), (362, 413): tensor([0.8848], requires_grad=True), (363, 412): tensor([0.9214], requires_grad=True), (363, 413): tensor([0.1411], requires_grad=True), (364, 412): tensor([0.2189], requires_grad=True), (364, 413): tensor([0.3049], requires_grad=True), (365, 412): tensor([0.9759], requires_grad=True), (365, 413): tensor([0.4363], requires_grad=True), (366, 412): tensor([0.3356], requires_grad=True), (366, 413): tensor([0.2085], requires_grad=True), (367, 412): tensor([0.3735], requires_grad=True), (367, 413): tensor([0.3305], requires_grad=True), (368, 412): tensor([0.9069], requires_grad=True), (368, 413): tensor([0.0206], requires_grad=True), (369, 412): tensor([0.4996], requires_grad=True), (369, 413): tensor([0.8821], requires_grad=True), (370, 412): tensor([0.0612], requires_grad=True), (370, 413): tensor([0.8210], requires_grad=True), (371, 412): tensor([0.7613], requires_grad=True), (371, 413): tensor([0.0439], requires_grad=True), (372, 412): tensor([0.4980], requires_grad=True), (372, 413): tensor([0.8847], requires_grad=True), (373, 412): tensor([0.7635], requires_grad=True), (373, 413): tensor([0.6597], requires_grad=True), (374, 412): tensor([0.3901], requires_grad=True), (374, 413): tensor([0.5941], requires_grad=True), (375, 412): tensor([0.4412], requires_grad=True), (375, 413): tensor([0.0719], requires_grad=True), (376, 412): tensor([0.7358], requires_grad=True), (376, 413): tensor([0.7932], requires_grad=True), (377, 412): tensor([0.1543], requires_grad=True), (377, 413): tensor([0.5684], requires_grad=True), (378, 412): tensor([0.9430], requires_grad=True), (378, 413): tensor([0.3696], requires_grad=True), (379, 412): tensor([0.5734], requires_grad=True), (379, 413): tensor([0.4299], requires_grad=True), (380, 412): tensor([0.7905], requires_grad=True), (380, 413): tensor([0.2510], requires_grad=True), (381, 412): tensor([0.0066], requires_grad=True), (381, 413): tensor([0.2291], requires_grad=True), (382, 412): tensor([0.0166], requires_grad=True), (382, 413): tensor([0.0201], requires_grad=True), (383, 412): tensor([0.0756], requires_grad=True), (383, 413): tensor([0.1817], requires_grad=True), (384, 412): tensor([0.9601], requires_grad=True), (384, 413): tensor([0.7535], requires_grad=True), (385, 412): tensor([0.7221], requires_grad=True), (385, 413): tensor([0.9726], requires_grad=True), (386, 412): tensor([0.0478], requires_grad=True), (386, 413): tensor([0.2372], requires_grad=True), (387, 412): tensor([0.3232], requires_grad=True), (387, 413): tensor([0.3033], requires_grad=True), (388, 412): tensor([0.0883], requires_grad=True), (388, 413): tensor([0.6943], requires_grad=True), (389, 412): tensor([0.0090], requires_grad=True), (389, 413): tensor([0.8475], requires_grad=True), (390, 412): tensor([0.8611], requires_grad=True), (390, 413): tensor([0.2102], requires_grad=True), (391, 412): tensor([0.9875], requires_grad=True), (391, 413): tensor([0.8941], requires_grad=True), (392, 412): tensor([0.0026], requires_grad=True), (392, 413): tensor([0.3939], requires_grad=True), (393, 412): tensor([0.3948], requires_grad=True), (393, 413): tensor([0.6820], requires_grad=True), (394, 412): tensor([0.4735], requires_grad=True), (394, 413): tensor([0.0608], requires_grad=True), (395, 412): tensor([0.4144], requires_grad=True), (395, 413): tensor([0.0094], requires_grad=True), (396, 412): tensor([0.2959], requires_grad=True), (396, 413): tensor([0.1943], requires_grad=True), (397, 412): tensor([0.6737], requires_grad=True), (397, 413): tensor([0.7425], requires_grad=True), (398, 412): tensor([0.2593], requires_grad=True), (398, 413): tensor([0.8758], requires_grad=True), (399, 412): tensor([0.5654], requires_grad=True), (399, 413): tensor([0.8345], requires_grad=True), (400, 412): tensor([0.2319], requires_grad=True), (400, 413): tensor([0.8238], requires_grad=True), (401, 412): tensor([0.2037], requires_grad=True), (401, 413): tensor([0.3124], requires_grad=True), (402, 412): tensor([0.1424], requires_grad=True), (402, 413): tensor([0.9718], requires_grad=True), (403, 412): tensor([0.6050], requires_grad=True), (403, 413): tensor([0.3569], requires_grad=True), (404, 412): tensor([0.4259], requires_grad=True), (404, 413): tensor([0.5817], requires_grad=True), (405, 412): tensor([0.9200], requires_grad=True), (405, 413): tensor([0.6450], requires_grad=True), (406, 412): tensor([0.7550], requires_grad=True), (406, 413): tensor([0.2098], requires_grad=True), (407, 412): tensor([0.9074], requires_grad=True), (407, 413): tensor([0.7644], requires_grad=True), (408, 412): tensor([0.2193], requires_grad=True), (408, 413): tensor([0.9692], requires_grad=True), (409, 412): tensor([0.7198], requires_grad=True), (409, 413): tensor([0.0816], requires_grad=True), (410, 412): tensor([0.1550], requires_grad=True), (410, 413): tensor([0.2386], requires_grad=True), (411, 412): tensor([0.8171], requires_grad=True), (411, 413): tensor([0.3563], requires_grad=True)}Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Running Asynchronous Parameter Server Training.
Iter 0: 	accuracy is 0.8
Iter 10: 	accuracy is 0.8
Iter 20: 	accuracy is 0.8
Iter 30: 	accuracy is 0.8
Iter 40: 	accuracy is 0.8
Iter 50: 	accuracy is 0.8
Iter 60: 	accuracy is 0.8
Iter 70: 	accuracy is 0.8
Iter 80: 	accuracy is 0.8
Iter 90: 	accuracy is 0.8
Iter 100: 	accuracy is 0.8
Iter 110: 	accuracy is 0.8
Iter 120: 	accuracy is 0.8
Iter 130: 	accuracy is 0.8
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
[]
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
[(102, 411), (11, 410), (100, 409), (88, 408), (120, 407), (131, 406), (99, 405), (17, 404), (11, 403), (87, 402), (128, 401), (46, 400), (126, 399), (100, 398), (18, 397), (7, 396), (40, 395), (129, 394), (19, 393), (124, 392), (4, 391), (84, 390), (94, 389), (99, 388), (20, 387), (107, 386), (15, 385), (81, 384), (7, 383), (11, 382), (69, 381), (26, 380), (124, 379), (129, 378), (116, 377), (69, 376), (84, 375), (121, 374), (22, 373), (0, 372), (12, 371), (92, 370), (56, 369), (108, 368), (11, 367), (66, 366), (27, 365), (69, 364), (32, 363), (7, 362), (93, 361), (76, 360), (86, 359), (73, 358), (74, 357), (90, 356), (34, 355), (36, 354), (136, 353), (80, 352), (126, 351), (52, 350), (133, 349), (15, 348), (34, 347), (25, 346), (117, 345), (109, 344), (134, 343), (66, 342), (10, 341), (103, 340), (80, 339), (101, 338), (99, 337), (109, 336), (39, 335), (125, 334), (43, 333), (40, 332), (96, 331), (73, 330), (6, 329), (24, 328), (17, 327), (103, 326), (64, 325), (23, 324), (119, 323), (24, 322), (3, 321), (133, 320), (66, 319), (25, 318), (114, 317), (50, 316), (14, 315), (49, 314), (62, 313), (96, 312), (129, 311), (133, 310), (36, 309), (107, 308), (52, 307), (117, 306), (68, 305), (83, 304), (72, 303), (4, 302), (4, 301), (132, 300), (66, 299), (119, 298), (86, 297), (135, 296), (45, 295), (122, 294), (50, 293), (23, 292), (68, 291), (83, 290), (9, 289), (5, 288), (1, 287), (72, 286), (127, 285), (88, 284), (19, 283), (67, 282), (103, 281), (48, 280), (115, 279), (7, 278), (37, 277), (74, 276), (24, 275), (51, 274), (74, 273), (67, 272), (92, 271), (116, 270), (5, 269), (68, 268), (2, 267), (1, 266), (125, 265), (6, 264), (114, 263), (91, 262), (99, 261), (95, 260), (68, 259), (74, 258), (102, 257), (88, 256), (40, 255), (59, 254), (116, 253), (102, 252), (110, 251), (82, 250), (54, 249), (132, 248), (55, 247), (67, 246), (135, 245), (80, 244), (27, 243), (52, 242), (116, 241), (41, 240), (17, 239), (71, 238), (131, 237), (104, 236), (51, 235), (42, 234), (67, 233), (19, 232), (23, 231), (24, 230), (74, 229), (9, 228), (72, 227), (95, 226), (72, 225), (68, 224), (95, 223), (98, 222), (81, 221), (28, 220), (27, 219), (83, 218), (84, 217), (111, 216), (27, 215), (62, 214), (91, 213), (67, 212), (25, 211), (44, 210), (127, 209), (126, 208), (130, 207), (30, 206), (116, 205), (0, 204), (122, 203), (117, 202), (25, 201), (24, 200), (16, 199), (116, 198), (21, 197), (50, 196), (16, 195), (130, 194), (135, 193), (5, 192), (109, 191), (131, 190), (107, 189), (91, 188), (3, 187), (108, 186), (121, 185), (0, 184), (130, 183), (81, 182), (42, 181), (48, 180), (52, 179), (84, 178), (63, 177), (1, 176), (101, 175), (89, 174), (104, 173), (16, 172), (129, 171), (43, 170), (15, 169), (76, 168), (12, 167), (66, 166), (82, 165), (113, 164), (28, 163), (24, 162), (104, 161), (10, 160), (23, 160), (15, 159), (16, 159), (0, 158), (15, 158), (2, 157), (17, 157), (1, 156), (13, 156), (9, 155), (20, 155), (2, 154), (22, 154), (4, 153), (21, 153), (16, 152), (19, 152), (8, 151), (14, 151), (3, 150), (7, 150), (11, 149), (12, 149), (2, 148), (21, 148), (5, 147), (18, 147), (10, 146), (17, 146), (20, 145), (22, 145), (2, 144), (18, 144), (8, 143), (10, 143), (7, 142), (16, 142), (2, 141), (23, 141), (15, 140), (19, 140), (7, 139), (11, 139), (9, 138), (23, 138), (1, 137), (21, 137), (12, 136), (17, 136), (18, 135), (22, 135), (4, 134), (18, 134), (6, 133), (17, 133), (14, 132), (22, 132), (0, 131), (18, 131), (5, 130), (14, 130), (8, 129), (11, 129), (1, 128), (12, 128), (15, 127), (20, 127), (19, 126), (23, 126), (7, 125), (12, 125), (3, 124), (20, 124), (8, 123), (23, 123), (16, 122), (20, 122), (11, 121), (21, 121), (1, 120), (9, 120), (3, 119), (19, 119), (7, 118), (21, 118), (5, 117), (8, 117), (0, 116), (14, 116), (18, 115), (20, 115), (7, 114), (23, 114), (11, 113), (14, 113), (16, 112), (17, 112), (19, 111), (20, 111), (16, 110), (22, 110), (12, 109), (22, 109), (3, 108), (23, 108), (9, 107), (22, 107), (9, 106), (17, 106), (17, 105), (19, 105), (7, 104), (13, 104), (6, 103), (15, 103), (10, 102), (18, 102), (0, 101), (17, 101), (4, 100), (19, 100), (1, 99), (4, 99), (0, 98), (20, 98), (6, 97), (20, 97), (14, 96), (20, 96), (17, 95), (22, 95), (16, 94), (23, 94), (5, 93), (19, 93), (18, 92), (21, 92), (5, 91), (12, 91), (9, 90), (12, 90), (3, 89), (18, 89), (6, 88), (7, 88), (5, 87), (23, 87), (0, 86), (9, 86), (6, 85), (12, 85), (9, 84), (16, 84), (17, 83), (21, 83), (0, 82), (5, 82), (0, 81), (16, 81), (10, 80), (13, 80), (7, 79), (8, 79), (0, 78), (12, 78), (1, 77), (15, 77), (0, 76), (10, 76), (4, 75), (12, 75), (11, 74), (17, 74), (5, 73), (10, 73), (9, 72), (13, 72), (3, 71), (9, 71), (7, 70), (18, 70), (19, 69), (22, 69), (5, 68), (11, 68), (14, 67), (21, 67), (2, 66), (14, 66), (7, 65), (22, 65), (2, 64), (8, 64), (7, 63), (20, 63), (3, 62), (21, 62), (6, 61), (9, 61), (10, 60), (11, 60), (10, 59), (21, 59), (11, 58), (13, 58), (12, 57), (21, 57), (9, 56), (18, 56), (4, 55), (8, 55), (10, 54), (16, 54), (17, 53), (18, 53), (9, 52), (21, 52), (1, 51), (2, 51), (4, 50), (22, 50), (13, 49), (22, 49), (1, 48), (19, 48), (2, 47), (5, 47), (11, 46), (15, 46), (8, 45), (18, 45), (6, 44), (18, 44), (6, 43), (21, 43), (4, 42), (14, 42), (8, 41), (15, 41), (8, 40), (12, 40), (12, 39), (16, 39), (14, 38), (15, 38), (8, 37), (19, 37), (13, 36), (19, 36), (0, 35), (3, 35), (11, 34), (22, 34), (1, 33), (17, 33), (1, 32), (11, 32), (2, 31), (4, 31), (17, 30), (23, 30), (5, 29), (21, 29), (14, 28), (18, 28), (10, 27), (15, 27), (3, 26), (5, 26), (1, 25), (14, 25), (0, 24), (21, 24)]
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['connected(a(412),[a(103)],[1]).\n', 'connected(a(411),[a(12)],[1]).\n', 'connected(a(410),[a(101)],[1]).\n', 'connected(a(409),[a(89)],[1]).\n', 'connected(a(408),[a(121)],[1]).\n', 'connected(a(407),[a(132)],[1]).\n', 'connected(a(406),[a(100)],[1]).\n', 'connected(a(405),[a(18)],[1]).\n', 'connected(a(404),[a(12)],[1]).\n', 'connected(a(403),[a(88)],[1]).\n', 'connected(a(402),[a(129)],[1]).\n', 'connected(a(401),[a(47)],[1]).\n', 'connected(a(400),[a(127)],[1]).\n', 'connected(a(399),[a(101)],[1]).\n', 'connected(a(398),[a(19)],[1]).\n', 'connected(a(397),[a(8)],[1]).\n', 'connected(a(396),[a(41)],[1]).\n', 'connected(a(395),[a(130)],[1]).\n', 'connected(a(394),[a(20)],[1]).\n', 'connected(a(393),[a(125)],[1]).\n', 'connected(a(392),[a(5)],[1]).\n', 'connected(a(391),[a(85)],[1]).\n', 'connected(a(390),[a(95)],[1]).\n', 'connected(a(389),[a(100)],[1]).\n', 'connected(a(388),[a(21)],[1]).\n', 'connected(a(387),[a(108)],[1]).\n', 'connected(a(386),[a(16)],[1]).\n', 'connected(a(385),[a(82)],[1]).\n', 'connected(a(384),[a(8)],[1]).\n', 'connected(a(383),[a(12)],[1]).\n', 'connected(a(382),[a(70)],[1]).\n', 'connected(a(381),[a(27)],[1]).\n', 'connected(a(380),[a(125)],[1]).\n', 'connected(a(379),[a(130)],[1]).\n', 'connected(a(378),[a(117)],[1]).\n', 'connected(a(377),[a(70)],[1]).\n', 'connected(a(376),[a(85)],[1]).\n', 'connected(a(375),[a(122)],[1]).\n', 'connected(a(374),[a(23)],[1]).\n', 'connected(a(373),[a(1)],[1]).\n', 'connected(a(372),[a(13)],[1]).\n', 'connected(a(371),[a(93)],[1]).\n', 'connected(a(370),[a(57)],[1]).\n', 'connected(a(369),[a(109)],[1]).\n', 'connected(a(368),[a(12)],[1]).\n', 'connected(a(367),[a(67)],[1]).\n', 'connected(a(366),[a(28)],[1]).\n', 'connected(a(365),[a(70)],[1]).\n', 'connected(a(364),[a(33)],[1]).\n', 'connected(a(363),[a(8)],[1]).\n', 'connected(a(362),[a(94)],[1]).\n', 'connected(a(361),[a(77)],[1]).\n', 'connected(a(360),[a(87)],[1]).\n', 'connected(a(359),[a(74)],[1]).\n', 'connected(a(358),[a(75)],[1]).\n', 'connected(a(357),[a(91)],[1]).\n', 'connected(a(356),[a(35)],[1]).\n', 'connected(a(355),[a(37)],[1]).\n', 'connected(a(354),[a(137)],[1]).\n', 'connected(a(353),[a(81)],[1]).\n', 'connected(a(352),[a(127)],[1]).\n', 'connected(a(351),[a(53)],[1]).\n', 'connected(a(350),[a(134)],[1]).\n', 'connected(a(349),[a(16)],[1]).\n', 'connected(a(348),[a(35)],[1]).\n', 'connected(a(347),[a(26)],[1]).\n', 'connected(a(346),[a(118)],[1]).\n', 'connected(a(345),[a(110)],[1]).\n', 'connected(a(344),[a(135)],[1]).\n', 'connected(a(343),[a(67)],[1]).\n', 'connected(a(342),[a(11)],[1]).\n', 'connected(a(341),[a(104)],[1]).\n', 'connected(a(340),[a(81)],[1]).\n', 'connected(a(339),[a(102)],[1]).\n', 'connected(a(338),[a(100)],[1]).\n', 'connected(a(337),[a(110)],[1]).\n', 'connected(a(336),[a(40)],[1]).\n', 'connected(a(335),[a(126)],[1]).\n', 'connected(a(334),[a(44)],[1]).\n', 'connected(a(333),[a(41)],[1]).\n', 'connected(a(332),[a(97)],[1]).\n', 'connected(a(331),[a(74)],[1]).\n', 'connected(a(330),[a(7)],[1]).\n', 'connected(a(329),[a(25)],[1]).\n', 'connected(a(328),[a(18)],[1]).\n', 'connected(a(327),[a(104)],[1]).\n', 'connected(a(326),[a(65)],[1]).\n', 'connected(a(325),[a(24)],[1]).\n', 'connected(a(324),[a(120)],[1]).\n', 'connected(a(323),[a(25)],[1]).\n', 'connected(a(322),[a(4)],[1]).\n', 'connected(a(321),[a(134)],[1]).\n', 'connected(a(320),[a(67)],[1]).\n', 'connected(a(319),[a(26)],[1]).\n', 'connected(a(318),[a(115)],[1]).\n', 'connected(a(317),[a(51)],[1]).\n', 'connected(a(316),[a(15)],[1]).\n', 'connected(a(315),[a(50)],[1]).\n', 'connected(a(314),[a(63)],[1]).\n', 'connected(a(313),[a(97)],[1]).\n', 'connected(a(312),[a(130)],[1]).\n', 'connected(a(311),[a(134)],[1]).\n', 'connected(a(310),[a(37)],[1]).\n', 'connected(a(309),[a(108)],[1]).\n', 'connected(a(308),[a(53)],[1]).\n', 'connected(a(307),[a(118)],[1]).\n', 'connected(a(306),[a(69)],[1]).\n', 'connected(a(305),[a(84)],[1]).\n', 'connected(a(304),[a(73)],[1]).\n', 'connected(a(303),[a(5)],[1]).\n', 'connected(a(302),[a(5)],[1]).\n', 'connected(a(301),[a(133)],[1]).\n', 'connected(a(300),[a(67)],[1]).\n', 'connected(a(299),[a(120)],[1]).\n', 'connected(a(298),[a(87)],[1]).\n', 'connected(a(297),[a(136)],[1]).\n', 'connected(a(296),[a(46)],[1]).\n', 'connected(a(295),[a(123)],[1]).\n', 'connected(a(294),[a(51)],[1]).\n', 'connected(a(293),[a(24)],[1]).\n', 'connected(a(292),[a(69)],[1]).\n', 'connected(a(291),[a(84)],[1]).\n', 'connected(a(290),[a(10)],[1]).\n', 'connected(a(289),[a(6)],[1]).\n', 'connected(a(288),[a(2)],[1]).\n', 'connected(a(287),[a(73)],[1]).\n', 'connected(a(286),[a(128)],[1]).\n', 'connected(a(285),[a(89)],[1]).\n', 'connected(a(284),[a(20)],[1]).\n', 'connected(a(283),[a(68)],[1]).\n', 'connected(a(282),[a(104)],[1]).\n', 'connected(a(281),[a(49)],[1]).\n', 'connected(a(280),[a(116)],[1]).\n', 'connected(a(279),[a(8)],[1]).\n', 'connected(a(278),[a(38)],[1]).\n', 'connected(a(277),[a(75)],[1]).\n', 'connected(a(276),[a(25)],[1]).\n', 'connected(a(275),[a(52)],[1]).\n', 'connected(a(274),[a(75)],[1]).\n', 'connected(a(273),[a(68)],[1]).\n', 'connected(a(272),[a(93)],[1]).\n', 'connected(a(271),[a(117)],[1]).\n', 'connected(a(270),[a(6)],[1]).\n', 'connected(a(269),[a(69)],[1]).\n', 'connected(a(268),[a(3)],[1]).\n', 'connected(a(267),[a(2)],[1]).\n', 'connected(a(266),[a(126)],[1]).\n', 'connected(a(265),[a(7)],[1]).\n', 'connected(a(264),[a(115)],[1]).\n', 'connected(a(263),[a(92)],[1]).\n', 'connected(a(262),[a(100)],[1]).\n', 'connected(a(261),[a(96)],[1]).\n', 'connected(a(260),[a(69)],[1]).\n', 'connected(a(259),[a(75)],[1]).\n', 'connected(a(258),[a(103)],[1]).\n', 'connected(a(257),[a(89)],[1]).\n', 'connected(a(256),[a(41)],[1]).\n', 'connected(a(255),[a(60)],[1]).\n', 'connected(a(254),[a(117)],[1]).\n', 'connected(a(253),[a(103)],[1]).\n', 'connected(a(252),[a(111)],[1]).\n', 'connected(a(251),[a(83)],[1]).\n', 'connected(a(250),[a(55)],[1]).\n', 'connected(a(249),[a(133)],[1]).\n', 'connected(a(248),[a(56)],[1]).\n', 'connected(a(247),[a(68)],[1]).\n', 'connected(a(246),[a(136)],[1]).\n', 'connected(a(245),[a(81)],[1]).\n', 'connected(a(244),[a(28)],[1]).\n', 'connected(a(243),[a(53)],[1]).\n', 'connected(a(242),[a(117)],[1]).\n', 'connected(a(241),[a(42)],[1]).\n', 'connected(a(240),[a(18)],[1]).\n', 'connected(a(239),[a(72)],[1]).\n', 'connected(a(238),[a(132)],[1]).\n', 'connected(a(237),[a(105)],[1]).\n', 'connected(a(236),[a(52)],[1]).\n', 'connected(a(235),[a(43)],[1]).\n', 'connected(a(234),[a(68)],[1]).\n', 'connected(a(233),[a(20)],[1]).\n', 'connected(a(232),[a(24)],[1]).\n', 'connected(a(231),[a(25)],[1]).\n', 'connected(a(230),[a(75)],[1]).\n', 'connected(a(229),[a(10)],[1]).\n', 'connected(a(228),[a(73)],[1]).\n', 'connected(a(227),[a(96)],[1]).\n', 'connected(a(226),[a(73)],[1]).\n', 'connected(a(225),[a(69)],[1]).\n', 'connected(a(224),[a(96)],[1]).\n', 'connected(a(223),[a(99)],[1]).\n', 'connected(a(222),[a(82)],[1]).\n', 'connected(a(221),[a(29)],[1]).\n', 'connected(a(220),[a(28)],[1]).\n', 'connected(a(219),[a(84)],[1]).\n', 'connected(a(218),[a(85)],[1]).\n', 'connected(a(217),[a(112)],[1]).\n', 'connected(a(216),[a(28)],[1]).\n', 'connected(a(215),[a(63)],[1]).\n', 'connected(a(214),[a(92)],[1]).\n', 'connected(a(213),[a(68)],[1]).\n', 'connected(a(212),[a(26)],[1]).\n', 'connected(a(211),[a(45)],[1]).\n', 'connected(a(210),[a(128)],[1]).\n', 'connected(a(209),[a(127)],[1]).\n', 'connected(a(208),[a(131)],[1]).\n', 'connected(a(207),[a(31)],[1]).\n', 'connected(a(206),[a(117)],[1]).\n', 'connected(a(205),[a(1)],[1]).\n', 'connected(a(204),[a(123)],[1]).\n', 'connected(a(203),[a(118)],[1]).\n', 'connected(a(202),[a(26)],[1]).\n', 'connected(a(201),[a(25)],[1]).\n', 'connected(a(200),[a(17)],[1]).\n', 'connected(a(199),[a(117)],[1]).\n', 'connected(a(198),[a(22)],[1]).\n', 'connected(a(197),[a(51)],[1]).\n', 'connected(a(196),[a(17)],[1]).\n', 'connected(a(195),[a(131)],[1]).\n', 'connected(a(194),[a(136)],[1]).\n', 'connected(a(193),[a(6)],[1]).\n', 'connected(a(192),[a(110)],[1]).\n', 'connected(a(191),[a(132)],[1]).\n', 'connected(a(190),[a(108)],[1]).\n', 'connected(a(189),[a(92)],[1]).\n', 'connected(a(188),[a(4)],[1]).\n', 'connected(a(187),[a(109)],[1]).\n', 'connected(a(186),[a(122)],[1]).\n', 'connected(a(185),[a(1)],[1]).\n', 'connected(a(184),[a(131)],[1]).\n', 'connected(a(183),[a(82)],[1]).\n', 'connected(a(182),[a(43)],[1]).\n', 'connected(a(181),[a(49)],[1]).\n', 'connected(a(180),[a(53)],[1]).\n', 'connected(a(179),[a(85)],[1]).\n', 'connected(a(178),[a(64)],[1]).\n', 'connected(a(177),[a(2)],[1]).\n', 'connected(a(176),[a(102)],[1]).\n', 'connected(a(175),[a(90)],[1]).\n', 'connected(a(174),[a(105)],[1]).\n', 'connected(a(173),[a(17)],[1]).\n', 'connected(a(172),[a(130)],[1]).\n', 'connected(a(171),[a(44)],[1]).\n', 'connected(a(170),[a(16)],[1]).\n', 'connected(a(169),[a(77)],[1]).\n', 'connected(a(168),[a(13)],[1]).\n', 'connected(a(167),[a(67)],[1]).\n', 'connected(a(166),[a(83)],[1]).\n', 'connected(a(165),[a(114)],[1]).\n', 'connected(a(164),[a(29)],[1]).\n', 'connected(a(163),[a(25)],[1]).\n', 'connected(a(162),[a(105)],[1]).\n', 'connected(a(161),[a(11),a(24)],[1,1]).\n', 'connected(a(160),[a(16),a(17)],[1,1]).\n', 'connected(a(159),[a(1),a(16)],[1,1]).\n', 'connected(a(158),[a(3),a(18)],[1,1]).\n', 'connected(a(157),[a(2),a(14)],[1,1]).\n', 'connected(a(156),[a(10),a(21)],[1,1]).\n', 'connected(a(155),[a(3),a(23)],[1,1]).\n', 'connected(a(154),[a(5),a(22)],[1,1]).\n', 'connected(a(153),[a(17),a(20)],[1,1]).\n', 'connected(a(152),[a(9),a(15)],[1,1]).\n', 'connected(a(151),[a(4),a(8)],[1,1]).\n', 'connected(a(150),[a(12),a(13)],[1,1]).\n', 'connected(a(149),[a(3),a(22)],[1,1]).\n', 'connected(a(148),[a(6),a(19)],[1,1]).\n', 'connected(a(147),[a(11),a(18)],[1,1]).\n', 'connected(a(146),[a(21),a(23)],[1,1]).\n', 'connected(a(145),[a(3),a(19)],[1,1]).\n', 'connected(a(144),[a(9),a(11)],[1,1]).\n', 'connected(a(143),[a(8),a(17)],[1,1]).\n', 'connected(a(142),[a(3),a(24)],[1,1]).\n', 'connected(a(141),[a(16),a(20)],[1,1]).\n', 'connected(a(140),[a(8),a(12)],[1,1]).\n', 'connected(a(139),[a(10),a(24)],[1,1]).\n', 'connected(a(138),[a(2),a(22)],[1,1]).\n', 'connected(a(137),[a(13),a(18)],[1,1]).\n', 'connected(a(136),[a(19),a(23)],[1,1]).\n', 'connected(a(135),[a(5),a(19)],[1,1]).\n', 'connected(a(134),[a(7),a(18)],[1,1]).\n', 'connected(a(133),[a(15),a(23)],[1,1]).\n', 'connected(a(132),[a(1),a(19)],[1,1]).\n', 'connected(a(131),[a(6),a(15)],[1,1]).\n', 'connected(a(130),[a(9),a(12)],[1,1]).\n', 'connected(a(129),[a(2),a(13)],[1,1]).\n', 'connected(a(128),[a(16),a(21)],[1,1]).\n', 'connected(a(127),[a(20),a(24)],[1,1]).\n', 'connected(a(126),[a(8),a(13)],[1,1]).\n', 'connected(a(125),[a(4),a(21)],[1,1]).\n', 'connected(a(124),[a(9),a(24)],[1,1]).\n', 'connected(a(123),[a(17),a(21)],[1,1]).\n', 'connected(a(122),[a(12),a(22)],[1,1]).\n', 'connected(a(121),[a(2),a(10)],[1,1]).\n', 'connected(a(120),[a(4),a(20)],[1,1]).\n', 'connected(a(119),[a(8),a(22)],[1,1]).\n', 'connected(a(118),[a(6),a(9)],[1,1]).\n', 'connected(a(117),[a(1),a(15)],[1,1]).\n', 'connected(a(116),[a(19),a(21)],[1,1]).\n', 'connected(a(115),[a(8),a(24)],[1,1]).\n', 'connected(a(114),[a(12),a(15)],[1,1]).\n', 'connected(a(113),[a(17),a(18)],[1,1]).\n', 'connected(a(112),[a(20),a(21)],[1,1]).\n', 'connected(a(111),[a(17),a(23)],[1,1]).\n', 'connected(a(110),[a(13),a(23)],[1,1]).\n', 'connected(a(109),[a(4),a(24)],[1,1]).\n', 'connected(a(108),[a(10),a(23)],[1,1]).\n', 'connected(a(107),[a(10),a(18)],[1,1]).\n', 'connected(a(106),[a(18),a(20)],[1,1]).\n', 'connected(a(105),[a(8),a(14)],[1,1]).\n', 'connected(a(104),[a(7),a(16)],[1,1]).\n', 'connected(a(103),[a(11),a(19)],[1,1]).\n', 'connected(a(102),[a(1),a(18)],[1,1]).\n', 'connected(a(101),[a(5),a(20)],[1,1]).\n', 'connected(a(100),[a(2),a(5)],[1,1]).\n', 'connected(a(99),[a(1),a(21)],[1,1]).\n', 'connected(a(98),[a(7),a(21)],[1,1]).\n', 'connected(a(97),[a(15),a(21)],[1,1]).\n', 'connected(a(96),[a(18),a(23)],[1,1]).\n', 'connected(a(95),[a(17),a(24)],[1,1]).\n', 'connected(a(94),[a(6),a(20)],[1,1]).\n', 'connected(a(93),[a(19),a(22)],[1,1]).\n', 'connected(a(92),[a(6),a(13)],[1,1]).\n', 'connected(a(91),[a(10),a(13)],[1,1]).\n', 'connected(a(90),[a(4),a(19)],[1,1]).\n', 'connected(a(89),[a(7),a(8)],[1,1]).\n', 'connected(a(88),[a(6),a(24)],[1,1]).\n', 'connected(a(87),[a(1),a(10)],[1,1]).\n', 'connected(a(86),[a(7),a(13)],[1,1]).\n', 'connected(a(85),[a(10),a(17)],[1,1]).\n', 'connected(a(84),[a(18),a(22)],[1,1]).\n', 'connected(a(83),[a(1),a(6)],[1,1]).\n', 'connected(a(82),[a(1),a(17)],[1,1]).\n', 'connected(a(81),[a(11),a(14)],[1,1]).\n', 'connected(a(80),[a(8),a(9)],[1,1]).\n', 'connected(a(79),[a(1),a(13)],[1,1]).\n', 'connected(a(78),[a(2),a(16)],[1,1]).\n', 'connected(a(77),[a(1),a(11)],[1,1]).\n', 'connected(a(76),[a(5),a(13)],[1,1]).\n', 'connected(a(75),[a(12),a(18)],[1,1]).\n', 'connected(a(74),[a(6),a(11)],[1,1]).\n', 'connected(a(73),[a(10),a(14)],[1,1]).\n', 'connected(a(72),[a(4),a(10)],[1,1]).\n', 'connected(a(71),[a(8),a(19)],[1,1]).\n', 'connected(a(70),[a(20),a(23)],[1,1]).\n', 'connected(a(69),[a(6),a(12)],[1,1]).\n', 'connected(a(68),[a(15),a(22)],[1,1]).\n', 'connected(a(67),[a(3),a(15)],[1,1]).\n', 'connected(a(66),[a(8),a(23)],[1,1]).\n', 'connected(a(65),[a(3),a(9)],[1,1]).\n', 'connected(a(64),[a(8),a(21)],[1,1]).\n', 'connected(a(63),[a(4),a(22)],[1,1]).\n', 'connected(a(62),[a(7),a(10)],[1,1]).\n', 'connected(a(61),[a(11),a(12)],[1,1]).\n', 'connected(a(60),[a(11),a(22)],[1,1]).\n', 'connected(a(59),[a(12),a(14)],[1,1]).\n', 'connected(a(58),[a(13),a(22)],[1,1]).\n', 'connected(a(57),[a(10),a(19)],[1,1]).\n', 'connected(a(56),[a(5),a(9)],[1,1]).\n', 'connected(a(55),[a(11),a(17)],[1,1]).\n', 'connected(a(54),[a(18),a(19)],[1,1]).\n', 'connected(a(53),[a(10),a(22)],[1,1]).\n', 'connected(a(52),[a(2),a(3)],[1,1]).\n', 'connected(a(51),[a(5),a(23)],[1,1]).\n', 'connected(a(50),[a(14),a(23)],[1,1]).\n', 'connected(a(49),[a(2),a(20)],[1,1]).\n', 'connected(a(48),[a(3),a(6)],[1,1]).\n', 'connected(a(47),[a(12),a(16)],[1,1]).\n', 'connected(a(46),[a(9),a(19)],[1,1]).\n', 'connected(a(45),[a(7),a(19)],[1,1]).\n', 'connected(a(44),[a(7),a(22)],[1,1]).\n', 'connected(a(43),[a(5),a(15)],[1,1]).\n', 'connected(a(42),[a(9),a(16)],[1,1]).\n', 'connected(a(41),[a(9),a(13)],[1,1]).\n', 'connected(a(40),[a(13),a(17)],[1,1]).\n', 'connected(a(39),[a(15),a(16)],[1,1]).\n', 'connected(a(38),[a(9),a(20)],[1,1]).\n', 'connected(a(37),[a(14),a(20)],[1,1]).\n', 'connected(a(36),[a(1),a(4)],[1,1]).\n', 'connected(a(35),[a(12),a(23)],[1,1]).\n', 'connected(a(34),[a(2),a(18)],[1,1]).\n', 'connected(a(33),[a(2),a(12)],[1,1]).\n', 'connected(a(32),[a(3),a(5)],[1,1]).\n', 'connected(a(31),[a(18),a(24)],[1,1]).\n', 'connected(a(30),[a(6),a(22)],[1,1]).\n', 'connected(a(29),[a(15),a(19)],[1,1]).\n', 'connected(a(28),[a(11),a(16)],[1,1]).\n', 'connected(a(27),[a(4),a(6)],[1,1]).\n', 'connected(a(26),[a(2),a(15)],[1,1]).\n', 'connected(a(25),[a(1),a(22)],[1,1]).\n', 'connected(a(24),[a(0),a(0)],[1,0]).\n', 'connected(a(23),[a(0),a(0)],[1,0]).\n', 'connected(a(22),[a(0),a(0)],[1,0]).\n', 'connected(a(21),[a(0),a(0)],[1,0]).\n', 'connected(a(20),[a(0),a(0)],[1,0]).\n', 'connected(a(19),[a(0),a(0)],[1,0]).\n', 'connected(a(18),[a(0),a(0)],[1,0]).\n', 'connected(a(17),[a(0),a(0)],[1,0]).\n', 'connected(a(16),[a(0),a(0)],[1,0]).\n', 'connected(a(15),[a(0),a(0)],[1,0]).\n', 'connected(a(14),[a(0),a(0)],[1,0]).\n', 'connected(a(13),[a(0),a(0)],[1,0]).\n', 'connected(a(12),[a(0),a(0)],[1,0]).\n', 'connected(a(11),[a(0),a(0)],[1,0]).\n', 'connected(a(10),[a(0),a(0)],[1,0]).\n', 'connected(a(9),[a(0),a(0)],[1,0]).\n', 'connected(a(8),[a(0),a(0)],[1,0]).\n', 'connected(a(7),[a(0),a(0)],[1,0]).\n', 'connected(a(6),[a(0),a(0)],[1,0]).\n', 'connected(a(5),[a(0),a(0)],[1,0]).\n', 'connected(a(4),[a(0),a(0)],[1,0]).\n', 'connected(a(3),[a(0),a(0)],[1,0]).\n', 'connected(a(2),[a(0),a(0)],[1,0]).\n', 'connected(a(1),[a(0),a(0)],[1,0]).\n']
[(102, 411), (11, 410), (100, 409), (88, 408), (120, 407), (131, 406), (99, 405), (17, 404), (11, 403), (87, 402), (128, 401), (46, 400), (126, 399), (100, 398), (18, 397), (7, 396), (40, 395), (129, 394), (19, 393), (124, 392), (4, 391), (84, 390), (94, 389), (99, 388), (20, 387), (107, 386), (15, 385), (81, 384), (7, 383), (11, 382), (69, 381), (26, 380), (124, 379), (129, 378), (116, 377), (69, 376), (84, 375), (121, 374), (22, 373), (0, 372), (12, 371), (92, 370), (56, 369), (108, 368), (11, 367), (66, 366), (27, 365), (69, 364), (32, 363), (7, 362), (93, 361), (76, 360), (86, 359), (73, 358), (74, 357), (90, 356), (34, 355), (36, 354), (136, 353), (80, 352), (126, 351), (52, 350), (133, 349), (15, 348), (34, 347), (25, 346), (117, 345), (109, 344), (134, 343), (66, 342), (10, 341), (103, 340), (80, 339), (101, 338), (99, 337), (109, 336), (39, 335), (125, 334), (43, 333), (40, 332), (96, 331), (73, 330), (6, 329), (24, 328), (17, 327), (103, 326), (64, 325), (23, 324), (119, 323), (24, 322), (3, 321), (133, 320), (66, 319), (25, 318), (114, 317), (50, 316), (14, 315), (49, 314), (62, 313), (96, 312), (129, 311), (133, 310), (36, 309), (107, 308), (52, 307), (117, 306), (68, 305), (83, 304), (72, 303), (4, 302), (4, 301), (132, 300), (66, 299), (119, 298), (86, 297), (135, 296), (45, 295), (122, 294), (50, 293), (23, 292), (68, 291), (83, 290), (9, 289), (5, 288), (1, 287), (72, 286), (127, 285), (88, 284), (19, 283), (67, 282), (103, 281), (48, 280), (115, 279), (7, 278), (37, 277), (74, 276), (24, 275), (51, 274), (74, 273), (67, 272), (92, 271), (116, 270), (5, 269), (68, 268), (2, 267), (1, 266), (125, 265), (6, 264), (114, 263), (91, 262), (99, 261), (95, 260), (68, 259), (74, 258), (102, 257), (88, 256), (40, 255), (59, 254), (116, 253), (102, 252), (110, 251), (82, 250), (54, 249), (132, 248), (55, 247), (67, 246), (135, 245), (80, 244), (27, 243), (52, 242), (116, 241), (41, 240), (17, 239), (71, 238), (131, 237), (104, 236), (51, 235), (42, 234), (67, 233), (19, 232), (23, 231), (24, 230), (74, 229), (9, 228), (72, 227), (95, 226), (72, 225), (68, 224), (95, 223), (98, 222), (81, 221), (28, 220), (27, 219), (83, 218), (84, 217), (111, 216), (27, 215), (62, 214), (91, 213), (67, 212), (25, 211), (44, 210), (127, 209), (126, 208), (130, 207), (30, 206), (116, 205), (0, 204), (122, 203), (117, 202), (25, 201), (24, 200), (16, 199), (116, 198), (21, 197), (50, 196), (16, 195), (130, 194), (135, 193), (5, 192), (109, 191), (131, 190), (107, 189), (91, 188), (3, 187), (108, 186), (121, 185), (0, 184), (130, 183), (81, 182), (42, 181), (48, 180), (52, 179), (84, 178), (63, 177), (1, 176), (101, 175), (89, 174), (104, 173), (16, 172), (129, 171), (43, 170), (15, 169), (76, 168), (12, 167), (66, 166), (82, 165), (113, 164), (28, 163), (24, 162), (104, 161), (10, 160), (23, 160), (15, 159), (16, 159), (0, 158), (15, 158), (2, 157), (17, 157), (1, 156), (13, 156), (9, 155), (20, 155), (2, 154), (22, 154), (4, 153), (21, 153), (16, 152), (19, 152), (8, 151), (14, 151), (3, 150), (7, 150), (11, 149), (12, 149), (2, 148), (21, 148), (5, 147), (18, 147), (10, 146), (17, 146), (20, 145), (22, 145), (2, 144), (18, 144), (8, 143), (10, 143), (7, 142), (16, 142), (2, 141), (23, 141), (15, 140), (19, 140), (7, 139), (11, 139), (9, 138), (23, 138), (1, 137), (21, 137), (12, 136), (17, 136), (18, 135), (22, 135), (4, 134), (18, 134), (6, 133), (17, 133), (14, 132), (22, 132), (0, 131), (18, 131), (5, 130), (14, 130), (8, 129), (11, 129), (1, 128), (12, 128), (15, 127), (20, 127), (19, 126), (23, 126), (7, 125), (12, 125), (3, 124), (20, 124), (8, 123), (23, 123), (16, 122), (20, 122), (11, 121), (21, 121), (1, 120), (9, 120), (3, 119), (19, 119), (7, 118), (21, 118), (5, 117), (8, 117), (0, 116), (14, 116), (18, 115), (20, 115), (7, 114), (23, 114), (11, 113), (14, 113), (16, 112), (17, 112), (19, 111), (20, 111), (16, 110), (22, 110), (12, 109), (22, 109), (3, 108), (23, 108), (9, 107), (22, 107), (9, 106), (17, 106), (17, 105), (19, 105), (7, 104), (13, 104), (6, 103), (15, 103), (10, 102), (18, 102), (0, 101), (17, 101), (4, 100), (19, 100), (1, 99), (4, 99), (0, 98), (20, 98), (6, 97), (20, 97), (14, 96), (20, 96), (17, 95), (22, 95), (16, 94), (23, 94), (5, 93), (19, 93), (18, 92), (21, 92), (5, 91), (12, 91), (9, 90), (12, 90), (3, 89), (18, 89), (6, 88), (7, 88), (5, 87), (23, 87), (0, 86), (9, 86), (6, 85), (12, 85), (9, 84), (16, 84), (17, 83), (21, 83), (0, 82), (5, 82), (0, 81), (16, 81), (10, 80), (13, 80), (7, 79), (8, 79), (0, 78), (12, 78), (1, 77), (15, 77), (0, 76), (10, 76), (4, 75), (12, 75), (11, 74), (17, 74), (5, 73), (10, 73), (9, 72), (13, 72), (3, 71), (9, 71), (7, 70), (18, 70), (19, 69), (22, 69), (5, 68), (11, 68), (14, 67), (21, 67), (2, 66), (14, 66), (7, 65), (22, 65), (2, 64), (8, 64), (7, 63), (20, 63), (3, 62), (21, 62), (6, 61), (9, 61), (10, 60), (11, 60), (10, 59), (21, 59), (11, 58), (13, 58), (12, 57), (21, 57), (9, 56), (18, 56), (4, 55), (8, 55), (10, 54), (16, 54), (17, 53), (18, 53), (9, 52), (21, 52), (1, 51), (2, 51), (4, 50), (22, 50), (13, 49), (22, 49), (1, 48), (19, 48), (2, 47), (5, 47), (11, 46), (15, 46), (8, 45), (18, 45), (6, 44), (18, 44), (6, 43), (21, 43), (4, 42), (14, 42), (8, 41), (15, 41), (8, 40), (12, 40), (12, 39), (16, 39), (14, 38), (15, 38), (8, 37), (19, 37), (13, 36), (19, 36), (0, 35), (3, 35), (11, 34), (22, 34), (1, 33), (17, 33), (1, 32), (11, 32), (2, 31), (4, 31), (17, 30), (23, 30), (5, 29), (21, 29), (14, 28), (18, 28), (10, 27), (15, 27), (3, 26), (5, 26), (1, 25), (14, 25), (0, 24), (21, 24)]
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['connected(a(412),[a(103)],[1]).\n',
 'connected(a(411),[a(12)],[1]).\n',
 'connected(a(410),[a(101)],[1]).\n',
 'connected(a(409),[a(89)],[1]).\n',
 'connected(a(408),[a(121)],[1]).\n',
 'connected(a(407),[a(132)],[1]).\n',
 'connected(a(406),[a(100)],[1]).\n',
 'connected(a(405),[a(18)],[1]).\n',
 'connected(a(404),[a(12)],[1]).\n',
 'connected(a(403),[a(88)],[1]).\n',
 'connected(a(402),[a(129)],[1]).\n',
 'connected(a(401),[a(47)],[1]).\n',
 'connected(a(400),[a(127)],[1]).\n',
 'connected(a(399),[a(101)],[1]).\n',
 'connected(a(398),[a(19)],[1]).\n',
 'connected(a(397),[a(8)],[1]).\n',
 'connected(a(396),[a(41)],[1]).\n',
 'connected(a(395),[a(130)],[1]).\n',
 'connected(a(394),[a(20)],[1]).\n',
 'connected(a(393),[a(125)],[1]).\n',
 'connected(a(392),[a(5)],[1]).\n',
 'connected(a(391),[a(85)],[1]).\n',
 'connected(a(390),[a(95)],[1]).\n',
 'connected(a(389),[a(100)],[1]).\n',
 'connected(a(388),[a(21)],[1]).\n',
 'connected(a(387),[a(108)],[1]).\n',
 'connected(a(386),[a(16)],[1]).\n',
 'connected(a(385),[a(82)],[1]).\n',
 'connected(a(384),[a(8)],[1]).\n',
 'connected(a(383),[a(12)],[1]).\n',
 'connected(a(382),[a(70)],[1]).\n',
 'connected(a(381),[a(27)],[1]).\n',
 'connected(a(380),[a(125)],[1]).\n',
 'connected(a(379),[a(130)],[1]).\n',
 'connected(a(378),[a(117)],[1]).\n',
 'connected(a(377),[a(70)],[1]).\n',
 'connected(a(376),[a(85)],[1]).\n',
 'connected(a(375),[a(122)],[1]).\n',
 'connected(a(374),[a(23)],[1]).\n',
 'connected(a(373),[a(1)],[1]).\n',
 'connected(a(372),[a(13)],[1]).\n',
 'connected(a(371),[a(93)],[1]).\n',
 'connected(a(370),[a(57)],[1]).\n',
 'connected(a(369),[a(109)],[1]).\n',
 'connected(a(368),[a(12)],[1]).\n',
 'connected(a(367),[a(67)],[1]).\n',
 'connected(a(366),[a(28)],[1]).\n',
 'connected(a(365),[a(70)],[1]).\n',
 'connected(a(364),[a(33)],[1]).\n',
 'connected(a(363),[a(8)],[1]).\n',
 'connected(a(362),[a(94)],[1]).\n',
 'connected(a(361),[a(77)],[1]).\n',
 'connected(a(360),[a(87)],[1]).\n',
 'connected(a(359),[a(74)],[1]).\n',
 'connected(a(358),[a(75)],[1]).\n',
 'connected(a(357),[a(91)],[1]).\n',
 'connected(a(356),[a(35)],[1]).\n',
 'connected(a(355),[a(37)],[1]).\n',
 'connected(a(354),[a(137)],[1]).\n',
 'connected(a(353),[a(81)],[1]).\n',
 'connected(a(352),[a(127)],[1]).\n',
 'connected(a(351),[a(53)],[1]).\n',
 'connected(a(350),[a(134)],[1]).\n',
 'connected(a(349),[a(16)],[1]).\n',
 'connected(a(348),[a(35)],[1]).\n',
 'connected(a(347),[a(26)],[1]).\n',
 'connected(a(346),[a(118)],[1]).\n',
 'connected(a(345),[a(110)],[1]).\n',
 'connected(a(344),[a(135)],[1]).\n',
 'connected(a(343),[a(67)],[1]).\n',
 'connected(a(342),[a(11)],[1]).\n',
 'connected(a(341),[a(104)],[1]).\n',
 'connected(a(340),[a(81)],[1]).\n',
 'connected(a(339),[a(102)],[1]).\n',
 'connected(a(338),[a(100)],[1]).\n',
 'connected(a(337),[a(110)],[1]).\n',
 'connected(a(336),[a(40)],[1]).\n',
 'connected(a(335),[a(126)],[1]).\n',
 'connected(a(334),[a(44)],[1]).\n',
 'connected(a(333),[a(41)],[1]).\n',
 'connected(a(332),[a(97)],[1]).\n',
 'connected(a(331),[a(74)],[1]).\n',
 'connected(a(330),[a(7)],[1]).\n',
 'connected(a(329),[a(25)],[1]).\n',
 'connected(a(328),[a(18)],[1]).\n',
 'connected(a(327),[a(104)],[1]).\n',
 'connected(a(326),[a(65)],[1]).\n',
 'connected(a(325),[a(24)],[1]).\n',
 'connected(a(324),[a(120)],[1]).\n',
 'connected(a(323),[a(25)],[1]).\n',
 'connected(a(322),[a(4)],[1]).\n',
 'connected(a(321),[a(134)],[1]).\n',
 'connected(a(320),[a(67)],[1]).\n',
 'connected(a(319),[a(26)],[1]).\n',
 'connected(a(318),[a(115)],[1]).\n',
 'connected(a(317),[a(51)],[1]).\n',
 'connected(a(316),[a(15)],[1]).\n',
 'connected(a(315),[a(50)],[1]).\n',
 'connected(a(314),[a(63)],[1]).\n',
 'connected(a(313),[a(97)],[1]).\n',
 'connected(a(312),[a(130)],[1]).\n',
 'connected(a(311),[a(134)],[1]).\n',
 'connected(a(310),[a(37)],[1]).\n',
 'connected(a(309),[a(108)],[1]).\n',
 'connected(a(308),[a(53)],[1]).\n',
 'connected(a(307),[a(118)],[1]).\n',
 'connected(a(306),[a(69)],[1]).\n',
 'connected(a(305),[a(84)],[1]).\n',
 'connected(a(304),[a(73)],[1]).\n',
 'connected(a(303),[a(5)],[1]).\n',
 'connected(a(302),[a(5)],[1]).\n',
 'connected(a(301),[a(133)],[1]).\n',
 'connected(a(300),[a(67)],[1]).\n',
 'connected(a(299),[a(120)],[1]).\n',
 'connected(a(298),[a(87)],[1]).\n',
 'connected(a(297),[a(136)],[1]).\n',
 'connected(a(296),[a(46)],[1]).\n',
 'connected(a(295),[a(123)],[1]).\n',
 'connected(a(294),[a(51)],[1]).\n',
 'connected(a(293),[a(24)],[1]).\n',
 'connected(a(292),[a(69)],[1]).\n',
 'connected(a(291),[a(84)],[1]).\n',
 'connected(a(290),[a(10)],[1]).\n',
 'connected(a(289),[a(6)],[1]).\n',
 'connected(a(288),[a(2)],[1]).\n',
 'connected(a(287),[a(73)],[1]).\n',
 'connected(a(286),[a(128)],[1]).\n',
 'connected(a(285),[a(89)],[1]).\n',
 'connected(a(284),[a(20)],[1]).\n',
 'connected(a(283),[a(68)],[1]).\n',
 'connected(a(282),[a(104)],[1]).\n',
 'connected(a(281),[a(49)],[1]).\n',
 'connected(a(280),[a(116)],[1]).\n',
 'connected(a(279),[a(8)],[1]).\n',
 'connected(a(278),[a(38)],[1]).\n',
 'connected(a(277),[a(75)],[1]).\n',
 'connected(a(276),[a(25)],[1]).\n',
 'connected(a(275),[a(52)],[1]).\n',
 'connected(a(274),[a(75)],[1]).\n',
 'connected(a(273),[a(68)],[1]).\n',
 'connected(a(272),[a(93)],[1]).\n',
 'connected(a(271),[a(117)],[1]).\n',
 'connected(a(270),[a(6)],[1]).\n',
 'connected(a(269),[a(69)],[1]).\n',
 'connected(a(268),[a(3)],[1]).\n',
 'connected(a(267),[a(2)],[1]).\n',
 'connected(a(266),[a(126)],[1]).\n',
 'connected(a(265),[a(7)],[1]).\n',
 'connected(a(264),[a(115)],[1]).\n',
 'connected(a(263),[a(92)],[1]).\n',
 'connected(a(262),[a(100)],[1]).\n',
 'connected(a(261),[a(96)],[1]).\n',
 'connected(a(260),[a(69)],[1]).\n',
 'connected(a(259),[a(75)],[1]).\n',
 'connected(a(258),[a(103)],[1]).\n',
 'connected(a(257),[a(89)],[1]).\n',
 'connected(a(256),[a(41)],[1]).\n',
 'connected(a(255),[a(60)],[1]).\n',
 'connected(a(254),[a(117)],[1]).\n',
 'connected(a(253),[a(103)],[1]).\n',
 'connected(a(252),[a(111)],[1]).\n',
 'connected(a(251),[a(83)],[1]).\n',
 'connected(a(250),[a(55)],[1]).\n',
 'connected(a(249),[a(133)],[1]).\n',
 'connected(a(248),[a(56)],[1]).\n',
 'connected(a(247),[a(68)],[1]).\n',
 'connected(a(246),[a(136)],[1]).\n',
 'connected(a(245),[a(81)],[1]).\n',
 'connected(a(244),[a(28)],[1]).\n',
 'connected(a(243),[a(53)],[1]).\n',
 'connected(a(242),[a(117)],[1]).\n',
 'connected(a(241),[a(42)],[1]).\n',
 'connected(a(240),[a(18)],[1]).\n',
 'connected(a(239),[a(72)],[1]).\n',
 'connected(a(238),[a(132)],[1]).\n',
 'connected(a(237),[a(105)],[1]).\n',
 'connected(a(236),[a(52)],[1]).\n',
 'connected(a(235),[a(43)],[1]).\n',
 'connected(a(234),[a(68)],[1]).\n',
 'connected(a(233),[a(20)],[1]).\n',
 'connected(a(232),[a(24)],[1]).\n',
 'connected(a(231),[a(25)],[1]).\n',
 'connected(a(230),[a(75)],[1]).\n',
 'connected(a(229),[a(10)],[1]).\n',
 'connected(a(228),[a(73)],[1]).\n',
 'connected(a(227),[a(96)],[1]).\n',
 'connected(a(226),[a(73)],[1]).\n',
 'connected(a(225),[a(69)],[1]).\n',
 'connected(a(224),[a(96)],[1]).\n',
 'connected(a(223),[a(99)],[1]).\n',
 'connected(a(222),[a(82)],[1]).\n',
 'connected(a(221),[a(29)],[1]).\n',
 'connected(a(220),[a(28)],[1]).\n',
 'connected(a(219),[a(84)],[1]).\n',
 'connected(a(218),[a(85)],[1]).\n',
 'connected(a(217),[a(112)],[1]).\n',
 'connected(a(216),[a(28)],[1]).\n',
 'connected(a(215),[a(63)],[1]).\n',
 'connected(a(214),[a(92)],[1]).\n',
 'connected(a(213),[a(68)],[1]).\n',
 'connected(a(212),[a(26)],[1]).\n',
 'connected(a(211),[a(45)],[1]).\n',
 'connected(a(210),[a(128)],[1]).\n',
 'connected(a(209),[a(127)],[1]).\n',
 'connected(a(208),[a(131)],[1]).\n',
 'connected(a(207),[a(31)],[1]).\n',
 'connected(a(206),[a(117)],[1]).\n',
 'connected(a(205),[a(1)],[1]).\n',
 'connected(a(204),[a(123)],[1]).\n',
 'connected(a(203),[a(118)],[1]).\n',
 'connected(a(202),[a(26)],[1]).\n',
 'connected(a(201),[a(25)],[1]).\n',
 'connected(a(200),[a(17)],[1]).\n',
 'connected(a(199),[a(117)],[1]).\n',
 'connected(a(198),[a(22)],[1]).\n',
 'connected(a(197),[a(51)],[1]).\n',
 'connected(a(196),[a(17)],[1]).\n',
 'connected(a(195),[a(131)],[1]).\n',
 'connected(a(194),[a(136)],[1]).\n',
 'connected(a(193),[a(6)],[1]).\n',
 'connected(a(192),[a(110)],[1]).\n',
 'connected(a(191),[a(132)],[1]).\n',
 'connected(a(190),[a(108)],[1]).\n',
 'connected(a(189),[a(92)],[1]).\n',
 'connected(a(188),[a(4)],[1]).\n',
 'connected(a(187),[a(109)],[1]).\n',
 'connected(a(186),[a(122)],[1]).\n',
 'connected(a(185),[a(1)],[1]).\n',
 'connected(a(184),[a(131)],[1]).\n',
 'connected(a(183),[a(82)],[1]).\n',
 'connected(a(182),[a(43)],[1]).\n',
 'connected(a(181),[a(49)],[1]).\n',
 'connected(a(180),[a(53)],[1]).\n',
 'connected(a(179),[a(85)],[1]).\n',
 'connected(a(178),[a(64)],[1]).\n',
 'connected(a(177),[a(2)],[1]).\n',
 'connected(a(176),[a(102)],[1]).\n',
 'connected(a(175),[a(90)],[1]).\n',
 'connected(a(174),[a(105)],[1]).\n',
 'connected(a(173),[a(17)],[1]).\n',
 'connected(a(172),[a(130)],[1]).\n',
 'connected(a(171),[a(44)],[1]).\n',
 'connected(a(170),[a(16)],[1]).\n',
 'connected(a(169),[a(77)],[1]).\n',
 'connected(a(168),[a(13)],[1]).\n',
 'connected(a(167),[a(67)],[1]).\n',
 'connected(a(166),[a(83)],[1]).\n',
 'connected(a(165),[a(114)],[1]).\n',
 'connected(a(164),[a(29)],[1]).\n',
 'connected(a(163),[a(25)],[1]).\n',
 'connected(a(162),[a(105)],[1]).\n',
 'connected(a(161),[a(11),a(24)],[1,1]).\n',
 'connected(a(160),[a(16),a(17)],[1,1]).\n',
 'connected(a(159),[a(1),a(16)],[1,1]).\n',
 'connected(a(158),[a(3),a(18)],[1,1]).\n',
 'connected(a(157),[a(2),a(14)],[1,1]).\n',
 'connected(a(156),[a(10),a(21)],[1,1]).\n',
 'connected(a(155),[a(3),a(23)],[1,1]).\n',
 'connected(a(154),[a(5),a(22)],[1,1]).\n',
 'connected(a(153),[a(17),a(20)],[1,1]).\n',
 'connected(a(152),[a(9),a(15)],[1,1]).\n',
 'connected(a(151),[a(4),a(8)],[1,1]).\n',
 'connected(a(150),[a(12),a(13)],[1,1]).\n',
 'connected(a(149),[a(3),a(22)],[1,1]).\n',
 'connected(a(148),[a(6),a(19)],[1,1]).\n',
 'connected(a(147),[a(11),a(18)],[1,1]).\n',
 'connected(a(146),[a(21),a(23)],[1,1]).\n',
 'connected(a(145),[a(3),a(19)],[1,1]).\n',
 'connected(a(144),[a(9),a(11)],[1,1]).\n',
 'connected(a(143),[a(8),a(17)],[1,1]).\n',
 'connected(a(142),[a(3),a(24)],[1,1]).\n',
 'connected(a(141),[a(16),a(20)],[1,1]).\n',
 'connected(a(140),[a(8),a(12)],[1,1]).\n',
 'connected(a(139),[a(10),a(24)],[1,1]).\n',
 'connected(a(138),[a(2),a(22)],[1,1]).\n',
 'connected(a(137),[a(13),a(18)],[1,1]).\n',
 'connected(a(136),[a(19),a(23)],[1,1]).\n',
 'connected(a(135),[a(5),a(19)],[1,1]).\n',
 'connected(a(134),[a(7),a(18)],[1,1]).\n',
 'connected(a(133),[a(15),a(23)],[1,1]).\n',
 'connected(a(132),[a(1),a(19)],[1,1]).\n',
 'connected(a(131),[a(6),a(15)],[1,1]).\n',
 'connected(a(130),[a(9),a(12)],[1,1]).\n',
 'connected(a(129),[a(2),a(13)],[1,1]).\n',
 'connected(a(128),[a(16),a(21)],[1,1]).\n',
 'connected(a(127),[a(20),a(24)],[1,1]).\n',
 'connected(a(126),[a(8),a(13)],[1,1]).\n',
 'connected(a(125),[a(4),a(21)],[1,1]).\n',
 'connected(a(124),[a(9),a(24)],[1,1]).\n',
 'connected(a(123),[a(17),a(21)],[1,1]).\n',
 'connected(a(122),[a(12),a(22)],[1,1]).\n',
 'connected(a(121),[a(2),a(10)],[1,1]).\n',
 'connected(a(120),[a(4),a(20)],[1,1]).\n',
 'connected(a(119),[a(8),a(22)],[1,1]).\n',
 'connected(a(118),[a(6),a(9)],[1,1]).\n',
 'connected(a(117),[a(1),a(15)],[1,1]).\n',
 'connected(a(116),[a(19),a(21)],[1,1]).\n',
 'connected(a(115),[a(8),a(24)],[1,1]).\n',
 'connected(a(114),[a(12),a(15)],[1,1]).\n',
 'connected(a(113),[a(17),a(18)],[1,1]).\n',
 'connected(a(112),[a(20),a(21)],[1,1]).\n',
 'connected(a(111),[a(17),a(23)],[1,1]).\n',
 'connected(a(110),[a(13),a(23)],[1,1]).\n',
 'connected(a(109),[a(4),a(24)],[1,1]).\n',
 'connected(a(108),[a(10),a(23)],[1,1]).\n',
 'connected(a(107),[a(10),a(18)],[1,1]).\n',
 'connected(a(106),[a(18),a(20)],[1,1]).\n',
 'connected(a(105),[a(8),a(14)],[1,1]).\n',
 'connected(a(104),[a(7),a(16)],[1,1]).\n',
 'connected(a(103),[a(11),a(19)],[1,1]).\n',
 'connected(a(102),[a(1),a(18)],[1,1]).\n',
 'connected(a(101),[a(5),a(20)],[1,1]).\n',
 'connected(a(100),[a(2),a(5)],[1,1]).\n',
 'connected(a(99),[a(1),a(21)],[1,1]).\n',
 'connected(a(98),[a(7),a(21)],[1,1]).\n',
 'connected(a(97),[a(15),a(21)],[1,1]).\n',
 'connected(a(96),[a(18),a(23)],[1,1]).\n',
 'connected(a(95),[a(17),a(24)],[1,1]).\n',
 'connected(a(94),[a(6),a(20)],[1,1]).\n',
 'connected(a(93),[a(19),a(22)],[1,1]).\n',
 'connected(a(92),[a(6),a(13)],[1,1]).\n',
 'connected(a(91),[a(10),a(13)],[1,1]).\n',
 'connected(a(90),[a(4),a(19)],[1,1]).\n',
 'connected(a(89),[a(7),a(8)],[1,1]).\n',
 'connected(a(88),[a(6),a(24)],[1,1]).\n',
 'connected(a(87),[a(1),a(10)],[1,1]).\n',
 'connected(a(86),[a(7),a(13)],[1,1]).\n',
 'connected(a(85),[a(10),a(17)],[1,1]).\n',
 'connected(a(84),[a(18),a(22)],[1,1]).\n',
 'connected(a(83),[a(1),a(6)],[1,1]).\n',
 'connected(a(82),[a(1),a(17)],[1,1]).\n',
 'connected(a(81),[a(11),a(14)],[1,1]).\n',
 'connected(a(80),[a(8),a(9)],[1,1]).\n',
 'connected(a(79),[a(1),a(13)],[1,1]).\n',
 'connected(a(78),[a(2),a(16)],[1,1]).\n',
 'connected(a(77),[a(1),a(11)],[1,1]).\n',
 'connected(a(76),[a(5),a(13)],[1,1]).\n',
 'connected(a(75),[a(12),a(18)],[1,1]).\n',
 'connected(a(74),[a(6),a(11)],[1,1]).\n',
 'connected(a(73),[a(10),a(14)],[1,1]).\n',
 'connected(a(72),[a(4),a(10)],[1,1]).\n',
 'connected(a(71),[a(8),a(19)],[1,1]).\n',
 'connected(a(70),[a(20),a(23)],[1,1]).\n',
 'connected(a(69),[a(6),a(12)],[1,1]).\n',
 'connected(a(68),[a(15),a(22)],[1,1]).\n',
 'connected(a(67),[a(3),a(15)],[1,1]).\n',
 'connected(a(66),[a(8),a(23)],[1,1]).\n',
 'connected(a(65),[a(3),a(9)],[1,1]).\n',
 'connected(a(64),[a(8),a(21)],[1,1]).\n',
 'connected(a(63),[a(4),a(22)],[1,1]).\n',
 'connected(a(62),[a(7),a(10)],[1,1]).\n',
 'connected(a(61),[a(11),a(12)],[1,1]).\n',
 'connected(a(60),[a(11),a(22)],[1,1]).\n',
 'connected(a(59),[a(12),a(14)],[1,1]).\n',
 'connected(a(58),[a(13),a(22)],[1,1]).\n',
 'connected(a(57),[a(10),a(19)],[1,1]).\n',
 'connected(a(56),[a(5),a(9)],[1,1]).\n',
 'connected(a(55),[a(11),a(17)],[1,1]).\n',
 'connected(a(54),[a(18),a(19)],[1,1]).\n',
 'connected(a(53),[a(10),a(22)],[1,1]).\n',
 'connected(a(52),[a(2),a(3)],[1,1]).\n',
 'connected(a(51),[a(5),a(23)],[1,1]).\n',
 'connected(a(50),[a(14),a(23)],[1,1]).\n',
 'connected(a(49),[a(2),a(20)],[1,1]).\n',
 'connected(a(48),[a(3),a(6)],[1,1]).\n',
 'connected(a(47),[a(12),a(16)],[1,1]).\n',
 'connected(a(46),[a(9),a(19)],[1,1]).\n',
 'connected(a(45),[a(7),a(19)],[1,1]).\n',
 'connected(a(44),[a(7),a(22)],[1,1]).\n',
 'connected(a(43),[a(5),a(15)],[1,1]).\n',
 'connected(a(42),[a(9),a(16)],[1,1]).\n',
 'connected(a(41),[a(9),a(13)],[1,1]).\n',
 'connected(a(40),[a(13),a(17)],[1,1]).\n',
 'connected(a(39),[a(15),a(16)],[1,1]).\n',
 'connected(a(38),[a(9),a(20)],[1,1]).\n',
 'connected(a(37),[a(14),a(20)],[1,1]).\n',
 'connected(a(36),[a(1),a(4)],[1,1]).\n',
 'connected(a(35),[a(12),a(23)],[1,1]).\n',
 'connected(a(34),[a(2),a(18)],[1,1]).\n',
 'connected(a(33),[a(2),a(12)],[1,1]).\n',
 'connected(a(32),[a(3),a(5)],[1,1]).\n',
 'connected(a(31),[a(18),a(24)],[1,1]).\n',
 'connected(a(30),[a(6),a(22)],[1,1]).\n',
 'connected(a(29),[a(15),a(19)],[1,1]).\n',
 'connected(a(28),[a(11),a(16)],[1,1]).\n',
 'connected(a(27),[a(4),a(6)],[1,1]).\n',
 'connected(a(26),[a(2),a(15)],[1,1]).\n',
 'connected(a(25),[a(1),a(22)],[1,1]).\n',
 'connected(a(24),[a(0),a(0)],[1,0]).\n',
 'connected(a(23),[a(0),a(0)],[1,0]).\n',
 'connected(a(22),[a(0),a(0)],[1,0]).\n',
 'connected(a(21),[a(0),a(0)],[1,0]).\n',
 'connected(a(20),[a(0),a(0)],[1,0]).\n',
 'connected(a(19),[a(0),a(0)],[1,0]).\n',
 'connected(a(18),[a(0),a(0)],[1,0]).\n',
 'connected(a(17),[a(0),a(0)],[1,0]).\n',
 'connected(a(16),[a(0),a(0)],[1,0]).\n',
 'connected(a(15),[a(0),a(0)],[1,0]).\n',
 'connected(a(14),[a(0),a(0)],[1,0]).\n',
 'connected(a(13),[a(0),a(0)],[1,0]).\n',
 'connected(a(12),[a(0),a(0)],[1,0]).\n',
 'connected(a(11),[a(0),a(0)],[1,0]).\n',
 'connected(a(10),[a(0),a(0)],[1,0]).\n',
 'connected(a(9),[a(0),a(0)],[1,0]).\n',
 'connected(a(8),[a(0),a(0)],[1,0]).\n',
 'connected(a(7),[a(0),a(0)],[1,0]).\n',
 'connected(a(6),[a(0),a(0)],[1,0]).\n',
 'connected(a(5),[a(0),a(0)],[1,0]).\n',
 'connected(a(4),[a(0),a(0)],[1,0]).\n',
 'connected(a(3),[a(0),a(0)],[1,0]).\n',
 'connected(a(2),[a(0),a(0)],[1,0]).\n',
 'connected(a(1),[a(0),a(0)],[1,0]).\n']
[(102, 411), (11, 410), (100, 409), (88, 408), (120, 407), (131, 406), (99, 405), (17, 404), (11, 403), (87, 402), (128, 401), (46, 400), (126, 399), (100, 398), (18, 397), (7, 396), (40, 395), (129, 394), (19, 393), (124, 392), (4, 391), (84, 390), (94, 389), (99, 388), (20, 387), (107, 386), (15, 385), (81, 384), (7, 383), (11, 382), (69, 381), (26, 380), (124, 379), (129, 378), (116, 377), (69, 376), (84, 375), (121, 374), (22, 373), (0, 372), (12, 371), (92, 370), (56, 369), (108, 368), (11, 367), (66, 366), (27, 365), (69, 364), (32, 363), (7, 362), (93, 361), (76, 360), (86, 359), (73, 358), (74, 357), (90, 356), (34, 355), (36, 354), (136, 353), (80, 352), (126, 351), (52, 350), (133, 349), (15, 348), (34, 347), (25, 346), (117, 345), (109, 344), (134, 343), (66, 342), (10, 341), (103, 340), (80, 339), (101, 338), (99, 337), (109, 336), (39, 335), (125, 334), (43, 333), (40, 332), (96, 331), (73, 330), (6, 329), (24, 328), (17, 327), (103, 326), (64, 325), (23, 324), (119, 323), (24, 322), (3, 321), (133, 320), (66, 319), (25, 318), (114, 317), (50, 316), (14, 315), (49, 314), (62, 313), (96, 312), (129, 311), (133, 310), (36, 309), (107, 308), (52, 307), (117, 306), (68, 305), (83, 304), (72, 303), (4, 302), (4, 301), (132, 300), (66, 299), (119, 298), (86, 297), (135, 296), (45, 295), (122, 294), (50, 293), (23, 292), (68, 291), (83, 290), (9, 289), (5, 288), (1, 287), (72, 286), (127, 285), (88, 284), (19, 283), (67, 282), (103, 281), (48, 280), (115, 279), (7, 278), (37, 277), (74, 276), (24, 275), (51, 274), (74, 273), (67, 272), (92, 271), (116, 270), (5, 269), (68, 268), (2, 267), (1, 266), (125, 265), (6, 264), (114, 263), (91, 262), (99, 261), (95, 260), (68, 259), (74, 258), (102, 257), (88, 256), (40, 255), (59, 254), (116, 253), (102, 252), (110, 251), (82, 250), (54, 249), (132, 248), (55, 247), (67, 246), (135, 245), (80, 244), (27, 243), (52, 242), (116, 241), (41, 240), (17, 239), (71, 238), (131, 237), (104, 236), (51, 235), (42, 234), (67, 233), (19, 232), (23, 231), (24, 230), (74, 229), (9, 228), (72, 227), (95, 226), (72, 225), (68, 224), (95, 223), (98, 222), (81, 221), (28, 220), (27, 219), (83, 218), (84, 217), (111, 216), (27, 215), (62, 214), (91, 213), (67, 212), (25, 211), (44, 210), (127, 209), (126, 208), (130, 207), (30, 206), (116, 205), (0, 204), (122, 203), (117, 202), (25, 201), (24, 200), (16, 199), (116, 198), (21, 197), (50, 196), (16, 195), (130, 194), (135, 193), (5, 192), (109, 191), (131, 190), (107, 189), (91, 188), (3, 187), (108, 186), (121, 185), (0, 184), (130, 183), (81, 182), (42, 181), (48, 180), (52, 179), (84, 178), (63, 177), (1, 176), (101, 175), (89, 174), (104, 173), (16, 172), (129, 171), (43, 170), (15, 169), (76, 168), (12, 167), (66, 166), (82, 165), (113, 164), (28, 163), (24, 162), (104, 161), (10, 160), (23, 160), (15, 159), (16, 159), (0, 158), (15, 158), (2, 157), (17, 157), (1, 156), (13, 156), (9, 155), (20, 155), (2, 154), (22, 154), (4, 153), (21, 153), (16, 152), (19, 152), (8, 151), (14, 151), (3, 150), (7, 150), (11, 149), (12, 149), (2, 148), (21, 148), (5, 147), (18, 147), (10, 146), (17, 146), (20, 145), (22, 145), (2, 144), (18, 144), (8, 143), (10, 143), (7, 142), (16, 142), (2, 141), (23, 141), (15, 140), (19, 140), (7, 139), (11, 139), (9, 138), (23, 138), (1, 137), (21, 137), (12, 136), (17, 136), (18, 135), (22, 135), (4, 134), (18, 134), (6, 133), (17, 133), (14, 132), (22, 132), (0, 131), (18, 131), (5, 130), (14, 130), (8, 129), (11, 129), (1, 128), (12, 128), (15, 127), (20, 127), (19, 126), (23, 126), (7, 125), (12, 125), (3, 124), (20, 124), (8, 123), (23, 123), (16, 122), (20, 122), (11, 121), (21, 121), (1, 120), (9, 120), (3, 119), (19, 119), (7, 118), (21, 118), (5, 117), (8, 117), (0, 116), (14, 116), (18, 115), (20, 115), (7, 114), (23, 114), (11, 113), (14, 113), (16, 112), (17, 112), (19, 111), (20, 111), (16, 110), (22, 110), (12, 109), (22, 109), (3, 108), (23, 108), (9, 107), (22, 107), (9, 106), (17, 106), (17, 105), (19, 105), (7, 104), (13, 104), (6, 103), (15, 103), (10, 102), (18, 102), (0, 101), (17, 101), (4, 100), (19, 100), (1, 99), (4, 99), (0, 98), (20, 98), (6, 97), (20, 97), (14, 96), (20, 96), (17, 95), (22, 95), (16, 94), (23, 94), (5, 93), (19, 93), (18, 92), (21, 92), (5, 91), (12, 91), (9, 90), (12, 90), (3, 89), (18, 89), (6, 88), (7, 88), (5, 87), (23, 87), (0, 86), (9, 86), (6, 85), (12, 85), (9, 84), (16, 84), (17, 83), (21, 83), (0, 82), (5, 82), (0, 81), (16, 81), (10, 80), (13, 80), (7, 79), (8, 79), (0, 78), (12, 78), (1, 77), (15, 77), (0, 76), (10, 76), (4, 75), (12, 75), (11, 74), (17, 74), (5, 73), (10, 73), (9, 72), (13, 72), (3, 71), (9, 71), (7, 70), (18, 70), (19, 69), (22, 69), (5, 68), (11, 68), (14, 67), (21, 67), (2, 66), (14, 66), (7, 65), (22, 65), (2, 64), (8, 64), (7, 63), (20, 63), (3, 62), (21, 62), (6, 61), (9, 61), (10, 60), (11, 60), (10, 59), (21, 59), (11, 58), (13, 58), (12, 57), (21, 57), (9, 56), (18, 56), (4, 55), (8, 55), (10, 54), (16, 54), (17, 53), (18, 53), (9, 52), (21, 52), (1, 51), (2, 51), (4, 50), (22, 50), (13, 49), (22, 49), (1, 48), (19, 48), (2, 47), (5, 47), (11, 46), (15, 46), (8, 45), (18, 45), (6, 44), (18, 44), (6, 43), (21, 43), (4, 42), (14, 42), (8, 41), (15, 41), (8, 40), (12, 40), (12, 39), (16, 39), (14, 38), (15, 38), (8, 37), (19, 37), (13, 36), (19, 36), (0, 35), (3, 35), (11, 34), (22, 34), (1, 33), (17, 33), (1, 32), (11, 32), (2, 31), (4, 31), (17, 30), (23, 30), (5, 29), (21, 29), (14, 28), (18, 28), (10, 27), (15, 27), (3, 26), (5, 26), (1, 25), (14, 25), (0, 24), (21, 24)]
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['connected(a(412),[a(103)],[1]).\n',
 'connected(a(411),[a(12)],[1]).\n',
 'connected(a(410),[a(101)],[1]).\n',
 'connected(a(409),[a(89)],[1]).\n',
 'connected(a(408),[a(121)],[1]).\n',
 'connected(a(407),[a(132)],[1]).\n',
 'connected(a(406),[a(100)],[1]).\n',
 'connected(a(405),[a(18)],[1]).\n',
 'connected(a(404),[a(12)],[1]).\n',
 'connected(a(403),[a(88)],[1]).\n',
 'connected(a(402),[a(129)],[1]).\n',
 'connected(a(401),[a(47)],[1]).\n',
 'connected(a(400),[a(127)],[1]).\n',
 'connected(a(399),[a(101)],[1]).\n',
 'connected(a(398),[a(19)],[1]).\n',
 'connected(a(397),[a(8)],[1]).\n',
 'connected(a(396),[a(41)],[1]).\n',
 'connected(a(395),[a(130)],[1]).\n',
 'connected(a(394),[a(20)],[1]).\n',
 'connected(a(393),[a(125)],[1]).\n',
 'connected(a(392),[a(5)],[1]).\n',
 'connected(a(391),[a(85)],[1]).\n',
 'connected(a(390),[a(95)],[1]).\n',
 'connected(a(389),[a(100)],[1]).\n',
 'connected(a(388),[a(21)],[1]).\n',
 'connected(a(387),[a(108)],[1]).\n',
 'connected(a(386),[a(16)],[1]).\n',
 'connected(a(385),[a(82)],[1]).\n',
 'connected(a(384),[a(8)],[1]).\n',
 'connected(a(383),[a(12)],[1]).\n',
 'connected(a(382),[a(70)],[1]).\n',
 'connected(a(381),[a(27)],[1]).\n',
 'connected(a(380),[a(125)],[1]).\n',
 'connected(a(379),[a(130)],[1]).\n',
 'connected(a(378),[a(117)],[1]).\n',
 'connected(a(377),[a(70)],[1]).\n',
 'connected(a(376),[a(85)],[1]).\n',
 'connected(a(375),[a(122)],[1]).\n',
 'connected(a(374),[a(23)],[1]).\n',
 'connected(a(373),[a(1)],[1]).\n',
 'connected(a(372),[a(13)],[1]).\n',
 'connected(a(371),[a(93)],[1]).\n',
 'connected(a(370),[a(57)],[1]).\n',
 'connected(a(369),[a(109)],[1]).\n',
 'connected(a(368),[a(12)],[1]).\n',
 'connected(a(367),[a(67)],[1]).\n',
 'connected(a(366),[a(28)],[1]).\n',
 'connected(a(365),[a(70)],[1]).\n',
 'connected(a(364),[a(33)],[1]).\n',
 'connected(a(363),[a(8)],[1]).\n',
 'connected(a(362),[a(94)],[1]).\n',
 'connected(a(361),[a(77)],[1]).\n',
 'connected(a(360),[a(87)],[1]).\n',
 'connected(a(359),[a(74)],[1]).\n',
 'connected(a(358),[a(75)],[1]).\n',
 'connected(a(357),[a(91)],[1]).\n',
 'connected(a(356),[a(35)],[1]).\n',
 'connected(a(355),[a(37)],[1]).\n',
 'connected(a(354),[a(137)],[1]).\n',
 'connected(a(353),[a(81)],[1]).\n',
 'connected(a(352),[a(127)],[1]).\n',
 'connected(a(351),[a(53)],[1]).\n',
 'connected(a(350),[a(134)],[1]).\n',
 'connected(a(349),[a(16)],[1]).\n',
 'connected(a(348),[a(35)],[1]).\n',
 'connected(a(347),[a(26)],[1]).\n',
 'connected(a(346),[a(118)],[1]).\n',
 'connected(a(345),[a(110)],[1]).\n',
 'connected(a(344),[a(135)],[1]).\n',
 'connected(a(343),[a(67)],[1]).\n',
 'connected(a(342),[a(11)],[1]).\n',
 'connected(a(341),[a(104)],[1]).\n',
 'connected(a(340),[a(81)],[1]).\n',
 'connected(a(339),[a(102)],[1]).\n',
 'connected(a(338),[a(100)],[1]).\n',
 'connected(a(337),[a(110)],[1]).\n',
 'connected(a(336),[a(40)],[1]).\n',
 'connected(a(335),[a(126)],[1]).\n',
 'connected(a(334),[a(44)],[1]).\n',
 'connected(a(333),[a(41)],[1]).\n',
 'connected(a(332),[a(97)],[1]).\n',
 'connected(a(331),[a(74)],[1]).\n',
 'connected(a(330),[a(7)],[1]).\n',
 'connected(a(329),[a(25)],[1]).\n',
 'connected(a(328),[a(18)],[1]).\n',
 'connected(a(327),[a(104)],[1]).\n',
 'connected(a(326),[a(65)],[1]).\n',
 'connected(a(325),[a(24)],[1]).\n',
 'connected(a(324),[a(120)],[1]).\n',
 'connected(a(323),[a(25)],[1]).\n',
 'connected(a(322),[a(4)],[1]).\n',
 'connected(a(321),[a(134)],[1]).\n',
 'connected(a(320),[a(67)],[1]).\n',
 'connected(a(319),[a(26)],[1]).\n',
 'connected(a(318),[a(115)],[1]).\n',
 'connected(a(317),[a(51)],[1]).\n',
 'connected(a(316),[a(15)],[1]).\n',
 'connected(a(315),[a(50)],[1]).\n',
 'connected(a(314),[a(63)],[1]).\n',
 'connected(a(313),[a(97)],[1]).\n',
 'connected(a(312),[a(130)],[1]).\n',
 'connected(a(311),[a(134)],[1]).\n',
 'connected(a(310),[a(37)],[1]).\n',
 'connected(a(309),[a(108)],[1]).\n',
 'connected(a(308),[a(53)],[1]).\n',
 'connected(a(307),[a(118)],[1]).\n',
 'connected(a(306),[a(69)],[1]).\n',
 'connected(a(305),[a(84)],[1]).\n',
 'connected(a(304),[a(73)],[1]).\n',
 'connected(a(303),[a(5)],[1]).\n',
 'connected(a(302),[a(5)],[1]).\n',
 'connected(a(301),[a(133)],[1]).\n',
 'connected(a(300),[a(67)],[1]).\n',
 'connected(a(299),[a(120)],[1]).\n',
 'connected(a(298),[a(87)],[1]).\n',
 'connected(a(297),[a(136)],[1]).\n',
 'connected(a(296),[a(46)],[1]).\n',
 'connected(a(295),[a(123)],[1]).\n',
 'connected(a(294),[a(51)],[1]).\n',
 'connected(a(293),[a(24)],[1]).\n',
 'connected(a(292),[a(69)],[1]).\n',
 'connected(a(291),[a(84)],[1]).\n',
 'connected(a(290),[a(10)],[1]).\n',
 'connected(a(289),[a(6)],[1]).\n',
 'connected(a(288),[a(2)],[1]).\n',
 'connected(a(287),[a(73)],[1]).\n',
 'connected(a(286),[a(128)],[1]).\n',
 'connected(a(285),[a(89)],[1]).\n',
 'connected(a(284),[a(20)],[1]).\n',
 'connected(a(283),[a(68)],[1]).\n',
 'connected(a(282),[a(104)],[1]).\n',
 'connected(a(281),[a(49)],[1]).\n',
 'connected(a(280),[a(116)],[1]).\n',
 'connected(a(279),[a(8)],[1]).\n',
 'connected(a(278),[a(38)],[1]).\n',
 'connected(a(277),[a(75)],[1]).\n',
 'connected(a(276),[a(25)],[1]).\n',
 'connected(a(275),[a(52)],[1]).\n',
 'connected(a(274),[a(75)],[1]).\n',
 'connected(a(273),[a(68)],[1]).\n',
 'connected(a(272),[a(93)],[1]).\n',
 'connected(a(271),[a(117)],[1]).\n',
 'connected(a(270),[a(6)],[1]).\n',
 'connected(a(269),[a(69)],[1]).\n',
 'connected(a(268),[a(3)],[1]).\n',
 'connected(a(267),[a(2)],[1]).\n',
 'connected(a(266),[a(126)],[1]).\n',
 'connected(a(265),[a(7)],[1]).\n',
 'connected(a(264),[a(115)],[1]).\n',
 'connected(a(263),[a(92)],[1]).\n',
 'connected(a(262),[a(100)],[1]).\n',
 'connected(a(261),[a(96)],[1]).\n',
 'connected(a(260),[a(69)],[1]).\n',
 'connected(a(259),[a(75)],[1]).\n',
 'connected(a(258),[a(103)],[1]).\n',
 'connected(a(257),[a(89)],[1]).\n',
 'connected(a(256),[a(41)],[1]).\n',
 'connected(a(255),[a(60)],[1]).\n',
 'connected(a(254),[a(117)],[1]).\n',
 'connected(a(253),[a(103)],[1]).\n',
 'connected(a(252),[a(111)],[1]).\n',
 'connected(a(251),[a(83)],[1]).\n',
 'connected(a(250),[a(55)],[1]).\n',
 'connected(a(249),[a(133)],[1]).\n',
 'connected(a(248),[a(56)],[1]).\n',
 'connected(a(247),[a(68)],[1]).\n',
 'connected(a(246),[a(136)],[1]).\n',
 'connected(a(245),[a(81)],[1]).\n',
 'connected(a(244),[a(28)],[1]).\n',
 'connected(a(243),[a(53)],[1]).\n',
 'connected(a(242),[a(117)],[1]).\n',
 'connected(a(241),[a(42)],[1]).\n',
 'connected(a(240),[a(18)],[1]).\n',
 'connected(a(239),[a(72)],[1]).\n',
 'connected(a(238),[a(132)],[1]).\n',
 'connected(a(237),[a(105)],[1]).\n',
 'connected(a(236),[a(52)],[1]).\n',
 'connected(a(235),[a(43)],[1]).\n',
 'connected(a(234),[a(68)],[1]).\n',
 'connected(a(233),[a(20)],[1]).\n',
 'connected(a(232),[a(24)],[1]).\n',
 'connected(a(231),[a(25)],[1]).\n',
 'connected(a(230),[a(75)],[1]).\n',
 'connected(a(229),[a(10)],[1]).\n',
 'connected(a(228),[a(73)],[1]).\n',
 'connected(a(227),[a(96)],[1]).\n',
 'connected(a(226),[a(73)],[1]).\n',
 'connected(a(225),[a(69)],[1]).\n',
 'connected(a(224),[a(96)],[1]).\n',
 'connected(a(223),[a(99)],[1]).\n',
 'connected(a(222),[a(82)],[1]).\n',
 'connected(a(221),[a(29)],[1]).\n',
 'connected(a(220),[a(28)],[1]).\n',
 'connected(a(219),[a(84)],[1]).\n',
 'connected(a(218),[a(85)],[1]).\n',
 'connected(a(217),[a(112)],[1]).\n',
 'connected(a(216),[a(28)],[1]).\n',
 'connected(a(215),[a(63)],[1]).\n',
 'connected(a(214),[a(92)],[1]).\n',
 'connected(a(213),[a(68)],[1]).\n',
 'connected(a(212),[a(26)],[1]).\n',
 'connected(a(211),[a(45)],[1]).\n',
 'connected(a(210),[a(128)],[1]).\n',
 'connected(a(209),[a(127)],[1]).\n',
 'connected(a(208),[a(131)],[1]).\n',
 'connected(a(207),[a(31)],[1]).\n',
 'connected(a(206),[a(117)],[1]).\n',
 'connected(a(205),[a(1)],[1]).\n',
 'connected(a(204),[a(123)],[1]).\n',
 'connected(a(203),[a(118)],[1]).\n',
 'connected(a(202),[a(26)],[1]).\n',
 'connected(a(201),[a(25)],[1]).\n',
 'connected(a(200),[a(17)],[1]).\n',
 'connected(a(199),[a(117)],[1]).\n',
 'connected(a(198),[a(22)],[1]).\n',
 'connected(a(197),[a(51)],[1]).\n',
 'connected(a(196),[a(17)],[1]).\n',
 'connected(a(195),[a(131)],[1]).\n',
 'connected(a(194),[a(136)],[1]).\n',
 'connected(a(193),[a(6)],[1]).\n',
 'connected(a(192),[a(110)],[1]).\n',
 'connected(a(191),[a(132)],[1]).\n',
 'connected(a(190),[a(108)],[1]).\n',
 'connected(a(189),[a(92)],[1]).\n',
 'connected(a(188),[a(4)],[1]).\n',
 'connected(a(187),[a(109)],[1]).\n',
 'connected(a(186),[a(122)],[1]).\n',
 'connected(a(185),[a(1)],[1]).\n',
 'connected(a(184),[a(131)],[1]).\n',
 'connected(a(183),[a(82)],[1]).\n',
 'connected(a(182),[a(43)],[1]).\n',
 'connected(a(181),[a(49)],[1]).\n',
 'connected(a(180),[a(53)],[1]).\n',
 'connected(a(179),[a(85)],[1]).\n',
 'connected(a(178),[a(64)],[1]).\n',
 'connected(a(177),[a(2)],[1]).\n',
 'connected(a(176),[a(102)],[1]).\n',
 'connected(a(175),[a(90)],[1]).\n',
 'connected(a(174),[a(105)],[1]).\n',
 'connected(a(173),[a(17)],[1]).\n',
 'connected(a(172),[a(130)],[1]).\n',
 'connected(a(171),[a(44)],[1]).\n',
 'connected(a(170),[a(16)],[1]).\n',
 'connected(a(169),[a(77)],[1]).\n',
 'connected(a(168),[a(13)],[1]).\n',
 'connected(a(167),[a(67)],[1]).\n',
 'connected(a(166),[a(83)],[1]).\n',
 'connected(a(165),[a(114)],[1]).\n',
 'connected(a(164),[a(29)],[1]).\n',
 'connected(a(163),[a(25)],[1]).\n',
 'connected(a(162),[a(105)],[1]).\n',
 'connected(a(161),[a(11),a(24)],[1,1]).\n',
 'connected(a(160),[a(16),a(17)],[1,1]).\n',
 'connected(a(159),[a(1),a(16)],[1,1]).\n',
 'connected(a(158),[a(3),a(18)],[1,1]).\n',
 'connected(a(157),[a(2),a(14)],[1,1]).\n',
 'connected(a(156),[a(10),a(21)],[1,1]).\n',
 'connected(a(155),[a(3),a(23)],[1,1]).\n',
 'connected(a(154),[a(5),a(22)],[1,1]).\n',
 'connected(a(153),[a(17),a(20)],[1,1]).\n',
 'connected(a(152),[a(9),a(15)],[1,1]).\n',
 'connected(a(151),[a(4),a(8)],[1,1]).\n',
 'connected(a(150),[a(12),a(13)],[1,1]).\n',
 'connected(a(149),[a(3),a(22)],[1,1]).\n',
 'connected(a(148),[a(6),a(19)],[1,1]).\n',
 'connected(a(147),[a(11),a(18)],[1,1]).\n',
 'connected(a(146),[a(21),a(23)],[1,1]).\n',
 'connected(a(145),[a(3),a(19)],[1,1]).\n',
 'connected(a(144),[a(9),a(11)],[1,1]).\n',
 'connected(a(143),[a(8),a(17)],[1,1]).\n',
 'connected(a(142),[a(3),a(24)],[1,1]).\n',
 'connected(a(141),[a(16),a(20)],[1,1]).\n',
 'connected(a(140),[a(8),a(12)],[1,1]).\n',
 'connected(a(139),[a(10),a(24)],[1,1]).\n',
 'connected(a(138),[a(2),a(22)],[1,1]).\n',
 'connected(a(137),[a(13),a(18)],[1,1]).\n',
 'connected(a(136),[a(19),a(23)],[1,1]).\n',
 'connected(a(135),[a(5),a(19)],[1,1]).\n',
 'connected(a(134),[a(7),a(18)],[1,1]).\n',
 'connected(a(133),[a(15),a(23)],[1,1]).\n',
 'connected(a(132),[a(1),a(19)],[1,1]).\n',
 'connected(a(131),[a(6),a(15)],[1,1]).\n',
 'connected(a(130),[a(9),a(12)],[1,1]).\n',
 'connected(a(129),[a(2),a(13)],[1,1]).\n',
 'connected(a(128),[a(16),a(21)],[1,1]).\n',
 'connected(a(127),[a(20),a(24)],[1,1]).\n',
 'connected(a(126),[a(8),a(13)],[1,1]).\n',
 'connected(a(125),[a(4),a(21)],[1,1]).\n',
 'connected(a(124),[a(9),a(24)],[1,1]).\n',
 'connected(a(123),[a(17),a(21)],[1,1]).\n',
 'connected(a(122),[a(12),a(22)],[1,1]).\n',
 'connected(a(121),[a(2),a(10)],[1,1]).\n',
 'connected(a(120),[a(4),a(20)],[1,1]).\n',
 'connected(a(119),[a(8),a(22)],[1,1]).\n',
 'connected(a(118),[a(6),a(9)],[1,1]).\n',
 'connected(a(117),[a(1),a(15)],[1,1]).\n',
 'connected(a(116),[a(19),a(21)],[1,1]).\n',
 'connected(a(115),[a(8),a(24)],[1,1]).\n',
 'connected(a(114),[a(12),a(15)],[1,1]).\n',
 'connected(a(113),[a(17),a(18)],[1,1]).\n',
 'connected(a(112),[a(20),a(21)],[1,1]).\n',
 'connected(a(111),[a(17),a(23)],[1,1]).\n',
 'connected(a(110),[a(13),a(23)],[1,1]).\n',
 'connected(a(109),[a(4),a(24)],[1,1]).\n',
 'connected(a(108),[a(10),a(23)],[1,1]).\n',
 'connected(a(107),[a(10),a(18)],[1,1]).\n',
 'connected(a(106),[a(18),a(20)],[1,1]).\n',
 'connected(a(105),[a(8),a(14)],[1,1]).\n',
 'connected(a(104),[a(7),a(16)],[1,1]).\n',
 'connected(a(103),[a(11),a(19)],[1,1]).\n',
 'connected(a(102),[a(1),a(18)],[1,1]).\n',
 'connected(a(101),[a(5),a(20)],[1,1]).\n',
 'connected(a(100),[a(2),a(5)],[1,1]).\n',
 'connected(a(99),[a(1),a(21)],[1,1]).\n',
 'connected(a(98),[a(7),a(21)],[1,1]).\n',
 'connected(a(97),[a(15),a(21)],[1,1]).\n',
 'connected(a(96),[a(18),a(23)],[1,1]).\n',
 'connected(a(95),[a(17),a(24)],[1,1]).\n',
 'connected(a(94),[a(6),a(20)],[1,1]).\n',
 'connected(a(93),[a(19),a(22)],[1,1]).\n',
 'connected(a(92),[a(6),a(13)],[1,1]).\n',
 'connected(a(91),[a(10),a(13)],[1,1]).\n',
 'connected(a(90),[a(4),a(19)],[1,1]).\n',
 'connected(a(89),[a(7),a(8)],[1,1]).\n',
 'connected(a(88),[a(6),a(24)],[1,1]).\n',
 'connected(a(87),[a(1),a(10)],[1,1]).\n',
 'connected(a(86),[a(7),a(13)],[1,1]).\n',
 'connected(a(85),[a(10),a(17)],[1,1]).\n',
 'connected(a(84),[a(18),a(22)],[1,1]).\n',
 'connected(a(83),[a(1),a(6)],[1,1]).\n',
 'connected(a(82),[a(1),a(17)],[1,1]).\n',
 'connected(a(81),[a(11),a(14)],[1,1]).\n',
 'connected(a(80),[a(8),a(9)],[1,1]).\n',
 'connected(a(79),[a(1),a(13)],[1,1]).\n',
 'connected(a(78),[a(2),a(16)],[1,1]).\n',
 'connected(a(77),[a(1),a(11)],[1,1]).\n',
 'connected(a(76),[a(5),a(13)],[1,1]).\n',
 'connected(a(75),[a(12),a(18)],[1,1]).\n',
 'connected(a(74),[a(6),a(11)],[1,1]).\n',
 'connected(a(73),[a(10),a(14)],[1,1]).\n',
 'connected(a(72),[a(4),a(10)],[1,1]).\n',
 'connected(a(71),[a(8),a(19)],[1,1]).\n',
 'connected(a(70),[a(20),a(23)],[1,1]).\n',
 'connected(a(69),[a(6),a(12)],[1,1]).\n',
 'connected(a(68),[a(15),a(22)],[1,1]).\n',
 'connected(a(67),[a(3),a(15)],[1,1]).\n',
 'connected(a(66),[a(8),a(23)],[1,1]).\n',
 'connected(a(65),[a(3),a(9)],[1,1]).\n',
 'connected(a(64),[a(8),a(21)],[1,1]).\n',
 'connected(a(63),[a(4),a(22)],[1,1]).\n',
 'connected(a(62),[a(7),a(10)],[1,1]).\n',
 'connected(a(61),[a(11),a(12)],[1,1]).\n',
 'connected(a(60),[a(11),a(22)],[1,1]).\n',
 'connected(a(59),[a(12),a(14)],[1,1]).\n',
 'connected(a(58),[a(13),a(22)],[1,1]).\n',
 'connected(a(57),[a(10),a(19)],[1,1]).\n',
 'connected(a(56),[a(5),a(9)],[1,1]).\n',
 'connected(a(55),[a(11),a(17)],[1,1]).\n',
 'connected(a(54),[a(18),a(19)],[1,1]).\n',
 'connected(a(53),[a(10),a(22)],[1,1]).\n',
 'connected(a(52),[a(2),a(3)],[1,1]).\n',
 'connected(a(51),[a(5),a(23)],[1,1]).\n',
 'connected(a(50),[a(14),a(23)],[1,1]).\n',
 'connected(a(49),[a(2),a(20)],[1,1]).\n',
 'connected(a(48),[a(3),a(6)],[1,1]).\n',
 'connected(a(47),[a(12),a(16)],[1,1]).\n',
 'connected(a(46),[a(9),a(19)],[1,1]).\n',
 'connected(a(45),[a(7),a(19)],[1,1]).\n',
 'connected(a(44),[a(7),a(22)],[1,1]).\n',
 'connected(a(43),[a(5),a(15)],[1,1]).\n',
 'connected(a(42),[a(9),a(16)],[1,1]).\n',
 'connected(a(41),[a(9),a(13)],[1,1]).\n',
 'connected(a(40),[a(13),a(17)],[1,1]).\n',
 'connected(a(39),[a(15),a(16)],[1,1]).\n',
 'connected(a(38),[a(9),a(20)],[1,1]).\n',
 'connected(a(37),[a(14),a(20)],[1,1]).\n',
 'connected(a(36),[a(1),a(4)],[1,1]).\n',
 'connected(a(35),[a(12),a(23)],[1,1]).\n',
 'connected(a(34),[a(2),a(18)],[1,1]).\n',
 'connected(a(33),[a(2),a(12)],[1,1]).\n',
 'connected(a(32),[a(3),a(5)],[1,1]).\n',
 'connected(a(31),[a(18),a(24)],[1,1]).\n',
 'connected(a(30),[a(6),a(22)],[1,1]).\n',
 'connected(a(29),[a(15),a(19)],[1,1]).\n',
 'connected(a(28),[a(11),a(16)],[1,1]).\n',
 'connected(a(27),[a(4),a(6)],[1,1]).\n',
 'connected(a(26),[a(2),a(15)],[1,1]).\n',
 'connected(a(25),[a(1),a(22)],[1,1]).\n',
 'connected(a(24),[a(0),a(0)],[1,0]).\n',
 'connected(a(23),[a(0),a(0)],[1,0]).\n',
 'connected(a(22),[a(0),a(0)],[1,0]).\n',
 'connected(a(21),[a(0),a(0)],[1,0]).\n',
 'connected(a(20),[a(0),a(0)],[1,0]).\n',
 'connected(a(19),[a(0),a(0)],[1,0]).\n',
 'connected(a(18),[a(0),a(0)],[1,0]).\n',
 'connected(a(17),[a(0),a(0)],[1,0]).\n',
 'connected(a(16),[a(0),a(0)],[1,0]).\n',
 'connected(a(15),[a(0),a(0)],[1,0]).\n',
 'connected(a(14),[a(0),a(0)],[1,0]).\n',
 'connected(a(13),[a(0),a(0)],[1,0]).\n',
 'connected(a(12),[a(0),a(0)],[1,0]).\n',
 'connected(a(11),[a(0),a(0)],[1,0]).\n',
 'connected(a(10),[a(0),a(0)],[1,0]).\n',
 'connected(a(9),[a(0),a(0)],[1,0]).\n',
 'connected(a(8),[a(0),a(0)],[1,0]).\n',
 'connected(a(7),[a(0),a(0)],[1,0]).\n',
 'connected(a(6),[a(0),a(0)],[1,0]).\n',
 'connected(a(5),[a(0),a(0)],[1,0]).\n',
 'connected(a(4),[a(0),a(0)],[1,0]).\n',
 'connected(a(3),[a(0),a(0)],[1,0]).\n',
 'connected(a(2),[a(0),a(0)],[1,0]).\n',
 'connected(a(1),[a(0),a(0)],[1,0]).\n']
[(102, 411),
 (11, 410),
 (100, 409),
 (88, 408),
 (120, 407),
 (131, 406),
 (99, 405),
 (17, 404),
 (11, 403),
 (87, 402),
 (128, 401),
 (46, 400),
 (126, 399),
 (100, 398),
 (18, 397),
 (7, 396),
 (40, 395),
 (129, 394),
 (19, 393),
 (124, 392),
 (4, 391),
 (84, 390),
 (94, 389),
 (99, 388),
 (20, 387),
 (107, 386),
 (15, 385),
 (81, 384),
 (7, 383),
 (11, 382),
 (69, 381),
 (26, 380),
 (124, 379),
 (129, 378),
 (116, 377),
 (69, 376),
 (84, 375),
 (121, 374),
 (22, 373),
 (0, 372),
 (12, 371),
 (92, 370),
 (56, 369),
 (108, 368),
 (11, 367),
 (66, 366),
 (27, 365),
 (69, 364),
 (32, 363),
 (7, 362),
 (93, 361),
 (76, 360),
 (86, 359),
 (73, 358),
 (74, 357),
 (90, 356),
 (34, 355),
 (36, 354),
 (136, 353),
 (80, 352),
 (126, 351),
 (52, 350),
 (133, 349),
 (15, 348),
 (34, 347),
 (25, 346),
 (117, 345),
 (109, 344),
 (134, 343),
 (66, 342),
 (10, 341),
 (103, 340),
 (80, 339),
 (101, 338),
 (99, 337),
 (109, 336),
 (39, 335),
 (125, 334),
 (43, 333),
 (40, 332),
 (96, 331),
 (73, 330),
 (6, 329),
 (24, 328),
 (17, 327),
 (103, 326),
 (64, 325),
 (23, 324),
 (119, 323),
 (24, 322),
 (3, 321),
 (133, 320),
 (66, 319),
 (25, 318),
 (114, 317),
 (50, 316),
 (14, 315),
 (49, 314),
 (62, 313),
 (96, 312),
 (129, 311),
 (133, 310),
 (36, 309),
 (107, 308),
 (52, 307),
 (117, 306),
 (68, 305),
 (83, 304),
 (72, 303),
 (4, 302),
 (4, 301),
 (132, 300),
 (66, 299),
 (119, 298),
 (86, 297),
 (135, 296),
 (45, 295),
 (122, 294),
 (50, 293),
 (23, 292),
 (68, 291),
 (83, 290),
 (9, 289),
 (5, 288),
 (1, 287),
 (72, 286),
 (127, 285),
 (88, 284),
 (19, 283),
 (67, 282),
 (103, 281),
 (48, 280),
 (115, 279),
 (7, 278),
 (37, 277),
 (74, 276),
 (24, 275),
 (51, 274),
 (74, 273),
 (67, 272),
 (92, 271),
 (116, 270),
 (5, 269),
 (68, 268),
 (2, 267),
 (1, 266),
 (125, 265),
 (6, 264),
 (114, 263),
 (91, 262),
 (99, 261),
 (95, 260),
 (68, 259),
 (74, 258),
 (102, 257),
 (88, 256),
 (40, 255),
 (59, 254),
 (116, 253),
 (102, 252),
 (110, 251),
 (82, 250),
 (54, 249),
 (132, 248),
 (55, 247),
 (67, 246),
 (135, 245),
 (80, 244),
 (27, 243),
 (52, 242),
 (116, 241),
 (41, 240),
 (17, 239),
 (71, 238),
 (131, 237),
 (104, 236),
 (51, 235),
 (42, 234),
 (67, 233),
 (19, 232),
 (23, 231),
 (24, 230),
 (74, 229),
 (9, 228),
 (72, 227),
 (95, 226),
 (72, 225),
 (68, 224),
 (95, 223),
 (98, 222),
 (81, 221),
 (28, 220),
 (27, 219),
 (83, 218),
 (84, 217),
 (111, 216),
 (27, 215),
 (62, 214),
 (91, 213),
 (67, 212),
 (25, 211),
 (44, 210),
 (127, 209),
 (126, 208),
 (130, 207),
 (30, 206),
 (116, 205),
 (0, 204),
 (122, 203),
 (117, 202),
 (25, 201),
 (24, 200),
 (16, 199),
 (116, 198),
 (21, 197),
 (50, 196),
 (16, 195),
 (130, 194),
 (135, 193),
 (5, 192),
 (109, 191),
 (131, 190),
 (107, 189),
 (91, 188),
 (3, 187),
 (108, 186),
 (121, 185),
 (0, 184),
 (130, 183),
 (81, 182),
 (42, 181),
 (48, 180),
 (52, 179),
 (84, 178),
 (63, 177),
 (1, 176),
 (101, 175),
 (89, 174),
 (104, 173),
 (16, 172),
 (129, 171),
 (43, 170),
 (15, 169),
 (76, 168),
 (12, 167),
 (66, 166),
 (82, 165),
 (113, 164),
 (28, 163),
 (24, 162),
 (104, 161),
 (10, 160),
 (23, 160),
 (15, 159),
 (16, 159),
 (0, 158),
 (15, 158),
 (2, 157),
 (17, 157),
 (1, 156),
 (13, 156),
 (9, 155),
 (20, 155),
 (2, 154),
 (22, 154),
 (4, 153),
 (21, 153),
 (16, 152),
 (19, 152),
 (8, 151),
 (14, 151),
 (3, 150),
 (7, 150),
 (11, 149),
 (12, 149),
 (2, 148),
 (21, 148),
 (5, 147),
 (18, 147),
 (10, 146),
 (17, 146),
 (20, 145),
 (22, 145),
 (2, 144),
 (18, 144),
 (8, 143),
 (10, 143),
 (7, 142),
 (16, 142),
 (2, 141),
 (23, 141),
 (15, 140),
 (19, 140),
 (7, 139),
 (11, 139),
 (9, 138),
 (23, 138),
 (1, 137),
 (21, 137),
 (12, 136),
 (17, 136),
 (18, 135),
 (22, 135),
 (4, 134),
 (18, 134),
 (6, 133),
 (17, 133),
 (14, 132),
 (22, 132),
 (0, 131),
 (18, 131),
 (5, 130),
 (14, 130),
 (8, 129),
 (11, 129),
 (1, 128),
 (12, 128),
 (15, 127),
 (20, 127),
 (19, 126),
 (23, 126),
 (7, 125),
 (12, 125),
 (3, 124),
 (20, 124),
 (8, 123),
 (23, 123),
 (16, 122),
 (20, 122),
 (11, 121),
 (21, 121),
 (1, 120),
 (9, 120),
 (3, 119),
 (19, 119),
 (7, 118),
 (21, 118),
 (5, 117),
 (8, 117),
 (0, 116),
 (14, 116),
 (18, 115),
 (20, 115),
 (7, 114),
 (23, 114),
 (11, 113),
 (14, 113),
 (16, 112),
 (17, 112),
 (19, 111),
 (20, 111),
 (16, 110),
 (22, 110),
 (12, 109),
 (22, 109),
 (3, 108),
 (23, 108),
 (9, 107),
 (22, 107),
 (9, 106),
 (17, 106),
 (17, 105),
 (19, 105),
 (7, 104),
 (13, 104),
 (6, 103),
 (15, 103),
 (10, 102),
 (18, 102),
 (0, 101),
 (17, 101),
 (4, 100),
 (19, 100),
 (1, 99),
 (4, 99),
 (0, 98),
 (20, 98),
 (6, 97),
 (20, 97),
 (14, 96),
 (20, 96),
 (17, 95),
 (22, 95),
 (16, 94),
 (23, 94),
 (5, 93),
 (19, 93),
 (18, 92),
 (21, 92),
 (5, 91),
 (12, 91),
 (9, 90),
 (12, 90),
 (3, 89),
 (18, 89),
 (6, 88),
 (7, 88),
 (5, 87),
 (23, 87),
 (0, 86),
 (9, 86),
 (6, 85),
 (12, 85),
 (9, 84),
 (16, 84),
 (17, 83),
 (21, 83),
 (0, 82),
 (5, 82),
 (0, 81),
 (16, 81),
 (10, 80),
 (13, 80),
 (7, 79),
 (8, 79),
 (0, 78),
 (12, 78),
 (1, 77),
 (15, 77),
 (0, 76),
 (10, 76),
 (4, 75),
 (12, 75),
 (11, 74),
 (17, 74),
 (5, 73),
 (10, 73),
 (9, 72),
 (13, 72),
 (3, 71),
 (9, 71),
 (7, 70),
 (18, 70),
 (19, 69),
 (22, 69),
 (5, 68),
 (11, 68),
 (14, 67),
 (21, 67),
 (2, 66),
 (14, 66),
 (7, 65),
 (22, 65),
 (2, 64),
 (8, 64),
 (7, 63),
 (20, 63),
 (3, 62),
 (21, 62),
 (6, 61),
 (9, 61),
 (10, 60),
 (11, 60),
 (10, 59),
 (21, 59),
 (11, 58),
 (13, 58),
 (12, 57),
 (21, 57),
 (9, 56),
 (18, 56),
 (4, 55),
 (8, 55),
 (10, 54),
 (16, 54),
 (17, 53),
 (18, 53),
 (9, 52),
 (21, 52),
 (1, 51),
 (2, 51),
 (4, 50),
 (22, 50),
 (13, 49),
 (22, 49),
 (1, 48),
 (19, 48),
 (2, 47),
 (5, 47),
 (11, 46),
 (15, 46),
 (8, 45),
 (18, 45),
 (6, 44),
 (18, 44),
 (6, 43),
 (21, 43),
 (4, 42),
 (14, 42),
 (8, 41),
 (15, 41),
 (8, 40),
 (12, 40),
 (12, 39),
 (16, 39),
 (14, 38),
 (15, 38),
 (8, 37),
 (19, 37),
 (13, 36),
 (19, 36),
 (0, 35),
 (3, 35),
 (11, 34),
 (22, 34),
 (1, 33),
 (17, 33),
 (1, 32),
 (11, 32),
 (2, 31),
 (4, 31),
 (17, 30),
 (23, 30),
 (5, 29),
 (21, 29),
 (14, 28),
 (18, 28),
 (10, 27),
 (15, 27),
 (3, 26),
 (5, 26),
 (1, 25),
 (14, 25),
 (0, 24),
 (21, 24)]
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['connected(a(412),[a(103)],[1]).\n',
 'connected(a(411),[a(12)],[1]).\n',
 'connected(a(410),[a(101)],[1]).\n',
 'connected(a(409),[a(89)],[1]).\n',
 'connected(a(408),[a(121)],[1]).\n',
 'connected(a(407),[a(132)],[1]).\n',
 'connected(a(406),[a(100)],[1]).\n',
 'connected(a(405),[a(18)],[1]).\n',
 'connected(a(404),[a(12)],[1]).\n',
 'connected(a(403),[a(88)],[1]).\n',
 'connected(a(402),[a(129)],[1]).\n',
 'connected(a(401),[a(47)],[1]).\n',
 'connected(a(400),[a(127)],[1]).\n',
 'connected(a(399),[a(101)],[1]).\n',
 'connected(a(398),[a(19)],[1]).\n',
 'connected(a(397),[a(8)],[1]).\n',
 'connected(a(396),[a(41)],[1]).\n',
 'connected(a(395),[a(130)],[1]).\n',
 'connected(a(394),[a(20)],[1]).\n',
 'connected(a(393),[a(125)],[1]).\n',
 'connected(a(392),[a(5)],[1]).\n',
 'connected(a(391),[a(85)],[1]).\n',
 'connected(a(390),[a(95)],[1]).\n',
 'connected(a(389),[a(100)],[1]).\n',
 'connected(a(388),[a(21)],[1]).\n',
 'connected(a(387),[a(108)],[1]).\n',
 'connected(a(386),[a(16)],[1]).\n',
 'connected(a(385),[a(82)],[1]).\n',
 'connected(a(384),[a(8)],[1]).\n',
 'connected(a(383),[a(12)],[1]).\n',
 'connected(a(382),[a(70)],[1]).\n',
 'connected(a(381),[a(27)],[1]).\n',
 'connected(a(380),[a(125)],[1]).\n',
 'connected(a(379),[a(130)],[1]).\n',
 'connected(a(378),[a(117)],[1]).\n',
 'connected(a(377),[a(70)],[1]).\n',
 'connected(a(376),[a(85)],[1]).\n',
 'connected(a(375),[a(122)],[1]).\n',
 'connected(a(374),[a(23)],[1]).\n',
 'connected(a(373),[a(1)],[1]).\n',
 'connected(a(372),[a(13)],[1]).\n',
 'connected(a(371),[a(93)],[1]).\n',
 'connected(a(370),[a(57)],[1]).\n',
 'connected(a(369),[a(109)],[1]).\n',
 'connected(a(368),[a(12)],[1]).\n',
 'connected(a(367),[a(67)],[1]).\n',
 'connected(a(366),[a(28)],[1]).\n',
 'connected(a(365),[a(70)],[1]).\n',
 'connected(a(364),[a(33)],[1]).\n',
 'connected(a(363),[a(8)],[1]).\n',
 'connected(a(362),[a(94)],[1]).\n',
 'connected(a(361),[a(77)],[1]).\n',
 'connected(a(360),[a(87)],[1]).\n',
 'connected(a(359),[a(74)],[1]).\n',
 'connected(a(358),[a(75)],[1]).\n',
 'connected(a(357),[a(91)],[1]).\n',
 'connected(a(356),[a(35)],[1]).\n',
 'connected(a(355),[a(37)],[1]).\n',
 'connected(a(354),[a(137)],[1]).\n',
 'connected(a(353),[a(81)],[1]).\n',
 'connected(a(352),[a(127)],[1]).\n',
 'connected(a(351),[a(53)],[1]).\n',
 'connected(a(350),[a(134)],[1]).\n',
 'connected(a(349),[a(16)],[1]).\n',
 'connected(a(348),[a(35)],[1]).\n',
 'connected(a(347),[a(26)],[1]).\n',
 'connected(a(346),[a(118)],[1]).\n',
 'connected(a(345),[a(110)],[1]).\n',
 'connected(a(344),[a(135)],[1]).\n',
 'connected(a(343),[a(67)],[1]).\n',
 'connected(a(342),[a(11)],[1]).\n',
 'connected(a(341),[a(104)],[1]).\n',
 'connected(a(340),[a(81)],[1]).\n',
 'connected(a(339),[a(102)],[1]).\n',
 'connected(a(338),[a(100)],[1]).\n',
 'connected(a(337),[a(110)],[1]).\n',
 'connected(a(336),[a(40)],[1]).\n',
 'connected(a(335),[a(126)],[1]).\n',
 'connected(a(334),[a(44)],[1]).\n',
 'connected(a(333),[a(41)],[1]).\n',
 'connected(a(332),[a(97)],[1]).\n',
 'connected(a(331),[a(74)],[1]).\n',
 'connected(a(330),[a(7)],[1]).\n',
 'connected(a(329),[a(25)],[1]).\n',
 'connected(a(328),[a(18)],[1]).\n',
 'connected(a(327),[a(104)],[1]).\n',
 'connected(a(326),[a(65)],[1]).\n',
 'connected(a(325),[a(24)],[1]).\n',
 'connected(a(324),[a(120)],[1]).\n',
 'connected(a(323),[a(25)],[1]).\n',
 'connected(a(322),[a(4)],[1]).\n',
 'connected(a(321),[a(134)],[1]).\n',
 'connected(a(320),[a(67)],[1]).\n',
 'connected(a(319),[a(26)],[1]).\n',
 'connected(a(318),[a(115)],[1]).\n',
 'connected(a(317),[a(51)],[1]).\n',
 'connected(a(316),[a(15)],[1]).\n',
 'connected(a(315),[a(50)],[1]).\n',
 'connected(a(314),[a(63)],[1]).\n',
 'connected(a(313),[a(97)],[1]).\n',
 'connected(a(312),[a(130)],[1]).\n',
 'connected(a(311),[a(134)],[1]).\n',
 'connected(a(310),[a(37)],[1]).\n',
 'connected(a(309),[a(108)],[1]).\n',
 'connected(a(308),[a(53)],[1]).\n',
 'connected(a(307),[a(118)],[1]).\n',
 'connected(a(306),[a(69)],[1]).\n',
 'connected(a(305),[a(84)],[1]).\n',
 'connected(a(304),[a(73)],[1]).\n',
 'connected(a(303),[a(5)],[1]).\n',
 'connected(a(302),[a(5)],[1]).\n',
 'connected(a(301),[a(133)],[1]).\n',
 'connected(a(300),[a(67)],[1]).\n',
 'connected(a(299),[a(120)],[1]).\n',
 'connected(a(298),[a(87)],[1]).\n',
 'connected(a(297),[a(136)],[1]).\n',
 'connected(a(296),[a(46)],[1]).\n',
 'connected(a(295),[a(123)],[1]).\n',
 'connected(a(294),[a(51)],[1]).\n',
 'connected(a(293),[a(24)],[1]).\n',
 'connected(a(292),[a(69)],[1]).\n',
 'connected(a(291),[a(84)],[1]).\n',
 'connected(a(290),[a(10)],[1]).\n',
 'connected(a(289),[a(6)],[1]).\n',
 'connected(a(288),[a(2)],[1]).\n',
 'connected(a(287),[a(73)],[1]).\n',
 'connected(a(286),[a(128)],[1]).\n',
 'connected(a(285),[a(89)],[1]).\n',
 'connected(a(284),[a(20)],[1]).\n',
 'connected(a(283),[a(68)],[1]).\n',
 'connected(a(282),[a(104)],[1]).\n',
 'connected(a(281),[a(49)],[1]).\n',
 'connected(a(280),[a(116)],[1]).\n',
 'connected(a(279),[a(8)],[1]).\n',
 'connected(a(278),[a(38)],[1]).\n',
 'connected(a(277),[a(75)],[1]).\n',
 'connected(a(276),[a(25)],[1]).\n',
 'connected(a(275),[a(52)],[1]).\n',
 'connected(a(274),[a(75)],[1]).\n',
 'connected(a(273),[a(68)],[1]).\n',
 'connected(a(272),[a(93)],[1]).\n',
 'connected(a(271),[a(117)],[1]).\n',
 'connected(a(270),[a(6)],[1]).\n',
 'connected(a(269),[a(69)],[1]).\n',
 'connected(a(268),[a(3)],[1]).\n',
 'connected(a(267),[a(2)],[1]).\n',
 'connected(a(266),[a(126)],[1]).\n',
 'connected(a(265),[a(7)],[1]).\n',
 'connected(a(264),[a(115)],[1]).\n',
 'connected(a(263),[a(92)],[1]).\n',
 'connected(a(262),[a(100)],[1]).\n',
 'connected(a(261),[a(96)],[1]).\n',
 'connected(a(260),[a(69)],[1]).\n',
 'connected(a(259),[a(75)],[1]).\n',
 'connected(a(258),[a(103)],[1]).\n',
 'connected(a(257),[a(89)],[1]).\n',
 'connected(a(256),[a(41)],[1]).\n',
 'connected(a(255),[a(60)],[1]).\n',
 'connected(a(254),[a(117)],[1]).\n',
 'connected(a(253),[a(103)],[1]).\n',
 'connected(a(252),[a(111)],[1]).\n',
 'connected(a(251),[a(83)],[1]).\n',
 'connected(a(250),[a(55)],[1]).\n',
 'connected(a(249),[a(133)],[1]).\n',
 'connected(a(248),[a(56)],[1]).\n',
 'connected(a(247),[a(68)],[1]).\n',
 'connected(a(246),[a(136)],[1]).\n',
 'connected(a(245),[a(81)],[1]).\n',
 'connected(a(244),[a(28)],[1]).\n',
 'connected(a(243),[a(53)],[1]).\n',
 'connected(a(242),[a(117)],[1]).\n',
 'connected(a(241),[a(42)],[1]).\n',
 'connected(a(240),[a(18)],[1]).\n',
 'connected(a(239),[a(72)],[1]).\n',
 'connected(a(238),[a(132)],[1]).\n',
 'connected(a(237),[a(105)],[1]).\n',
 'connected(a(236),[a(52)],[1]).\n',
 'connected(a(235),[a(43)],[1]).\n',
 'connected(a(234),[a(68)],[1]).\n',
 'connected(a(233),[a(20)],[1]).\n',
 'connected(a(232),[a(24)],[1]).\n',
 'connected(a(231),[a(25)],[1]).\n',
 'connected(a(230),[a(75)],[1]).\n',
 'connected(a(229),[a(10)],[1]).\n',
 'connected(a(228),[a(73)],[1]).\n',
 'connected(a(227),[a(96)],[1]).\n',
 'connected(a(226),[a(73)],[1]).\n',
 'connected(a(225),[a(69)],[1]).\n',
 'connected(a(224),[a(96)],[1]).\n',
 'connected(a(223),[a(99)],[1]).\n',
 'connected(a(222),[a(82)],[1]).\n',
 'connected(a(221),[a(29)],[1]).\n',
 'connected(a(220),[a(28)],[1]).\n',
 'connected(a(219),[a(84)],[1]).\n',
 'connected(a(218),[a(85)],[1]).\n',
 'connected(a(217),[a(112)],[1]).\n',
 'connected(a(216),[a(28)],[1]).\n',
 'connected(a(215),[a(63)],[1]).\n',
 'connected(a(214),[a(92)],[1]).\n',
 'connected(a(213),[a(68)],[1]).\n',
 'connected(a(212),[a(26)],[1]).\n',
 'connected(a(211),[a(45)],[1]).\n',
 'connected(a(210),[a(128)],[1]).\n',
 'connected(a(209),[a(127)],[1]).\n',
 'connected(a(208),[a(131)],[1]).\n',
 'connected(a(207),[a(31)],[1]).\n',
 'connected(a(206),[a(117)],[1]).\n',
 'connected(a(205),[a(1)],[1]).\n',
 'connected(a(204),[a(123)],[1]).\n',
 'connected(a(203),[a(118)],[1]).\n',
 'connected(a(202),[a(26)],[1]).\n',
 'connected(a(201),[a(25)],[1]).\n',
 'connected(a(200),[a(17)],[1]).\n',
 'connected(a(199),[a(117)],[1]).\n',
 'connected(a(198),[a(22)],[1]).\n',
 'connected(a(197),[a(51)],[1]).\n',
 'connected(a(196),[a(17)],[1]).\n',
 'connected(a(195),[a(131)],[1]).\n',
 'connected(a(194),[a(136)],[1]).\n',
 'connected(a(193),[a(6)],[1]).\n',
 'connected(a(192),[a(110)],[1]).\n',
 'connected(a(191),[a(132)],[1]).\n',
 'connected(a(190),[a(108)],[1]).\n',
 'connected(a(189),[a(92)],[1]).\n',
 'connected(a(188),[a(4)],[1]).\n',
 'connected(a(187),[a(109)],[1]).\n',
 'connected(a(186),[a(122)],[1]).\n',
 'connected(a(185),[a(1)],[1]).\n',
 'connected(a(184),[a(131)],[1]).\n',
 'connected(a(183),[a(82)],[1]).\n',
 'connected(a(182),[a(43)],[1]).\n',
 'connected(a(181),[a(49)],[1]).\n',
 'connected(a(180),[a(53)],[1]).\n',
 'connected(a(179),[a(85)],[1]).\n',
 'connected(a(178),[a(64)],[1]).\n',
 'connected(a(177),[a(2)],[1]).\n',
 'connected(a(176),[a(102)],[1]).\n',
 'connected(a(175),[a(90)],[1]).\n',
 'connected(a(174),[a(105)],[1]).\n',
 'connected(a(173),[a(17)],[1]).\n',
 'connected(a(172),[a(130)],[1]).\n',
 'connected(a(171),[a(44)],[1]).\n',
 'connected(a(170),[a(16)],[1]).\n',
 'connected(a(169),[a(77)],[1]).\n',
 'connected(a(168),[a(13)],[1]).\n',
 'connected(a(167),[a(67)],[1]).\n',
 'connected(a(166),[a(83)],[1]).\n',
 'connected(a(165),[a(114)],[1]).\n',
 'connected(a(164),[a(29)],[1]).\n',
 'connected(a(163),[a(25)],[1]).\n',
 'connected(a(162),[a(105)],[1]).\n',
 'connected(a(161),[a(11),a(24)],[1,1]).\n',
 'connected(a(160),[a(16),a(17)],[1,1]).\n',
 'connected(a(159),[a(1),a(16)],[1,1]).\n',
 'connected(a(158),[a(3),a(18)],[1,1]).\n',
 'connected(a(157),[a(2),a(14)],[1,1]).\n',
 'connected(a(156),[a(10),a(21)],[1,1]).\n',
 'connected(a(155),[a(3),a(23)],[1,1]).\n',
 'connected(a(154),[a(5),a(22)],[1,1]).\n',
 'connected(a(153),[a(17),a(20)],[1,1]).\n',
 'connected(a(152),[a(9),a(15)],[1,1]).\n',
 'connected(a(151),[a(4),a(8)],[1,1]).\n',
 'connected(a(150),[a(12),a(13)],[1,1]).\n',
 'connected(a(149),[a(3),a(22)],[1,1]).\n',
 'connected(a(148),[a(6),a(19)],[1,1]).\n',
 'connected(a(147),[a(11),a(18)],[1,1]).\n',
 'connected(a(146),[a(21),a(23)],[1,1]).\n',
 'connected(a(145),[a(3),a(19)],[1,1]).\n',
 'connected(a(144),[a(9),a(11)],[1,1]).\n',
 'connected(a(143),[a(8),a(17)],[1,1]).\n',
 'connected(a(142),[a(3),a(24)],[1,1]).\n',
 'connected(a(141),[a(16),a(20)],[1,1]).\n',
 'connected(a(140),[a(8),a(12)],[1,1]).\n',
 'connected(a(139),[a(10),a(24)],[1,1]).\n',
 'connected(a(138),[a(2),a(22)],[1,1]).\n',
 'connected(a(137),[a(13),a(18)],[1,1]).\n',
 'connected(a(136),[a(19),a(23)],[1,1]).\n',
 'connected(a(135),[a(5),a(19)],[1,1]).\n',
 'connected(a(134),[a(7),a(18)],[1,1]).\n',
 'connected(a(133),[a(15),a(23)],[1,1]).\n',
 'connected(a(132),[a(1),a(19)],[1,1]).\n',
 'connected(a(131),[a(6),a(15)],[1,1]).\n',
 'connected(a(130),[a(9),a(12)],[1,1]).\n',
 'connected(a(129),[a(2),a(13)],[1,1]).\n',
 'connected(a(128),[a(16),a(21)],[1,1]).\n',
 'connected(a(127),[a(20),a(24)],[1,1]).\n',
 'connected(a(126),[a(8),a(13)],[1,1]).\n',
 'connected(a(125),[a(4),a(21)],[1,1]).\n',
 'connected(a(124),[a(9),a(24)],[1,1]).\n',
 'connected(a(123),[a(17),a(21)],[1,1]).\n',
 'connected(a(122),[a(12),a(22)],[1,1]).\n',
 'connected(a(121),[a(2),a(10)],[1,1]).\n',
 'connected(a(120),[a(4),a(20)],[1,1]).\n',
 'connected(a(119),[a(8),a(22)],[1,1]).\n',
 'connected(a(118),[a(6),a(9)],[1,1]).\n',
 'connected(a(117),[a(1),a(15)],[1,1]).\n',
 'connected(a(116),[a(19),a(21)],[1,1]).\n',
 'connected(a(115),[a(8),a(24)],[1,1]).\n',
 'connected(a(114),[a(12),a(15)],[1,1]).\n',
 'connected(a(113),[a(17),a(18)],[1,1]).\n',
 'connected(a(112),[a(20),a(21)],[1,1]).\n',
 'connected(a(111),[a(17),a(23)],[1,1]).\n',
 'connected(a(110),[a(13),a(23)],[1,1]).\n',
 'connected(a(109),[a(4),a(24)],[1,1]).\n',
 'connected(a(108),[a(10),a(23)],[1,1]).\n',
 'connected(a(107),[a(10),a(18)],[1,1]).\n',
 'connected(a(106),[a(18),a(20)],[1,1]).\n',
 'connected(a(105),[a(8),a(14)],[1,1]).\n',
 'connected(a(104),[a(7),a(16)],[1,1]).\n',
 'connected(a(103),[a(11),a(19)],[1,1]).\n',
 'connected(a(102),[a(1),a(18)],[1,1]).\n',
 'connected(a(101),[a(5),a(20)],[1,1]).\n',
 'connected(a(100),[a(2),a(5)],[1,1]).\n',
 'connected(a(99),[a(1),a(21)],[1,1]).\n',
 'connected(a(98),[a(7),a(21)],[1,1]).\n',
 'connected(a(97),[a(15),a(21)],[1,1]).\n',
 'connected(a(96),[a(18),a(23)],[1,1]).\n',
 'connected(a(95),[a(17),a(24)],[1,1]).\n',
 'connected(a(94),[a(6),a(20)],[1,1]).\n',
 'connected(a(93),[a(19),a(22)],[1,1]).\n',
 'connected(a(92),[a(6),a(13)],[1,1]).\n',
 'connected(a(91),[a(10),a(13)],[1,1]).\n',
 'connected(a(90),[a(4),a(19)],[1,1]).\n',
 'connected(a(89),[a(7),a(8)],[1,1]).\n',
 'connected(a(88),[a(6),a(24)],[1,1]).\n',
 'connected(a(87),[a(1),a(10)],[1,1]).\n',
 'connected(a(86),[a(7),a(13)],[1,1]).\n',
 'connected(a(85),[a(10),a(17)],[1,1]).\n',
 'connected(a(84),[a(18),a(22)],[1,1]).\n',
 'connected(a(83),[a(1),a(6)],[1,1]).\n',
 'connected(a(82),[a(1),a(17)],[1,1]).\n',
 'connected(a(81),[a(11),a(14)],[1,1]).\n',
 'connected(a(80),[a(8),a(9)],[1,1]).\n',
 'connected(a(79),[a(1),a(13)],[1,1]).\n',
 'connected(a(78),[a(2),a(16)],[1,1]).\n',
 'connected(a(77),[a(1),a(11)],[1,1]).\n',
 'connected(a(76),[a(5),a(13)],[1,1]).\n',
 'connected(a(75),[a(12),a(18)],[1,1]).\n',
 'connected(a(74),[a(6),a(11)],[1,1]).\n',
 'connected(a(73),[a(10),a(14)],[1,1]).\n',
 'connected(a(72),[a(4),a(10)],[1,1]).\n',
 'connected(a(71),[a(8),a(19)],[1,1]).\n',
 'connected(a(70),[a(20),a(23)],[1,1]).\n',
 'connected(a(69),[a(6),a(12)],[1,1]).\n',
 'connected(a(68),[a(15),a(22)],[1,1]).\n',
 'connected(a(67),[a(3),a(15)],[1,1]).\n',
 'connected(a(66),[a(8),a(23)],[1,1]).\n',
 'connected(a(65),[a(3),a(9)],[1,1]).\n',
 'connected(a(64),[a(8),a(21)],[1,1]).\n',
 'connected(a(63),[a(4),a(22)],[1,1]).\n',
 'connected(a(62),[a(7),a(10)],[1,1]).\n',
 'connected(a(61),[a(11),a(12)],[1,1]).\n',
 'connected(a(60),[a(11),a(22)],[1,1]).\n',
 'connected(a(59),[a(12),a(14)],[1,1]).\n',
 'connected(a(58),[a(13),a(22)],[1,1]).\n',
 'connected(a(57),[a(10),a(19)],[1,1]).\n',
 'connected(a(56),[a(5),a(9)],[1,1]).\n',
 'connected(a(55),[a(11),a(17)],[1,1]).\n',
 'connected(a(54),[a(18),a(19)],[1,1]).\n',
 'connected(a(53),[a(10),a(22)],[1,1]).\n',
 'connected(a(52),[a(2),a(3)],[1,1]).\n',
 'connected(a(51),[a(5),a(23)],[1,1]).\n',
 'connected(a(50),[a(14),a(23)],[1,1]).\n',
 'connected(a(49),[a(2),a(20)],[1,1]).\n',
 'connected(a(48),[a(3),a(6)],[1,1]).\n',
 'connected(a(47),[a(12),a(16)],[1,1]).\n',
 'connected(a(46),[a(9),a(19)],[1,1]).\n',
 'connected(a(45),[a(7),a(19)],[1,1]).\n',
 'connected(a(44),[a(7),a(22)],[1,1]).\n',
 'connected(a(43),[a(5),a(15)],[1,1]).\n',
 'connected(a(42),[a(9),a(16)],[1,1]).\n',
 'connected(a(41),[a(9),a(13)],[1,1]).\n',
 'connected(a(40),[a(13),a(17)],[1,1]).\n',
 'connected(a(39),[a(15),a(16)],[1,1]).\n',
 'connected(a(38),[a(9),a(20)],[1,1]).\n',
 'connected(a(37),[a(14),a(20)],[1,1]).\n',
 'connected(a(36),[a(1),a(4)],[1,1]).\n',
 'connected(a(35),[a(12),a(23)],[1,1]).\n',
 'connected(a(34),[a(2),a(18)],[1,1]).\n',
 'connected(a(33),[a(2),a(12)],[1,1]).\n',
 'connected(a(32),[a(3),a(5)],[1,1]).\n',
 'connected(a(31),[a(18),a(24)],[1,1]).\n',
 'connected(a(30),[a(6),a(22)],[1,1]).\n',
 'connected(a(29),[a(15),a(19)],[1,1]).\n',
 'connected(a(28),[a(11),a(16)],[1,1]).\n',
 'connected(a(27),[a(4),a(6)],[1,1]).\n',
 'connected(a(26),[a(2),a(15)],[1,1]).\n',
 'connected(a(25),[a(1),a(22)],[1,1]).\n',
 'connected(a(24),[a(0),a(0)],[1,0]).\n',
 'connected(a(23),[a(0),a(0)],[1,0]).\n',
 'connected(a(22),[a(0),a(0)],[1,0]).\n',
 'connected(a(21),[a(0),a(0)],[1,0]).\n',
 'connected(a(20),[a(0),a(0)],[1,0]).\n',
 'connected(a(19),[a(0),a(0)],[1,0]).\n',
 'connected(a(18),[a(0),a(0)],[1,0]).\n',
 'connected(a(17),[a(0),a(0)],[1,0]).\n',
 'connected(a(16),[a(0),a(0)],[1,0]).\n',
 'connected(a(15),[a(0),a(0)],[1,0]).\n',
 'connected(a(14),[a(0),a(0)],[1,0]).\n',
 'connected(a(13),[a(0),a(0)],[1,0]).\n',
 'connected(a(12),[a(0),a(0)],[1,0]).\n',
 'connected(a(11),[a(0),a(0)],[1,0]).\n',
 'connected(a(10),[a(0),a(0)],[1,0]).\n',
 'connected(a(9),[a(0),a(0)],[1,0]).\n',
 'connected(a(8),[a(0),a(0)],[1,0]).\n',
 'connected(a(7),[a(0),a(0)],[1,0]).\n',
 'connected(a(6),[a(0),a(0)],[1,0]).\n',
 'connected(a(5),[a(0),a(0)],[1,0]).\n',
 'connected(a(4),[a(0),a(0)],[1,0]).\n',
 'connected(a(3),[a(0),a(0)],[1,0]).\n',
 'connected(a(2),[a(0),a(0)],[1,0]).\n',
 'connected(a(1),[a(0),a(0)],[1,0]).\n']
[(102, 411),
 (11, 410),
 (100, 409),
 (88, 408),
 (120, 407),
 (131, 406),
 (99, 405),
 (17, 404),
 (11, 403),
 (87, 402),
 (128, 401),
 (46, 400),
 (126, 399),
 (100, 398),
 (18, 397),
 (7, 396),
 (40, 395),
 (129, 394),
 (19, 393),
 (124, 392),
 (4, 391),
 (84, 390),
 (94, 389),
 (99, 388),
 (20, 387),
 (107, 386),
 (15, 385),
 (81, 384),
 (7, 383),
 (11, 382),
 (69, 381),
 (26, 380),
 (124, 379),
 (129, 378),
 (116, 377),
 (69, 376),
 (84, 375),
 (121, 374),
 (22, 373),
 (0, 372),
 (12, 371),
 (92, 370),
 (56, 369),
 (108, 368),
 (11, 367),
 (66, 366),
 (27, 365),
 (69, 364),
 (32, 363),
 (7, 362),
 (93, 361),
 (76, 360),
 (86, 359),
 (73, 358),
 (74, 357),
 (90, 356),
 (34, 355),
 (36, 354),
 (136, 353),
 (80, 352),
 (126, 351),
 (52, 350),
 (133, 349),
 (15, 348),
 (34, 347),
 (25, 346),
 (117, 345),
 (109, 344),
 (134, 343),
 (66, 342),
 (10, 341),
 (103, 340),
 (80, 339),
 (101, 338),
 (99, 337),
 (109, 336),
 (39, 335),
 (125, 334),
 (43, 333),
 (40, 332),
 (96, 331),
 (73, 330),
 (6, 329),
 (24, 328),
 (17, 327),
 (103, 326),
 (64, 325),
 (23, 324),
 (119, 323),
 (24, 322),
 (3, 321),
 (133, 320),
 (66, 319),
 (25, 318),
 (114, 317),
 (50, 316),
 (14, 315),
 (49, 314),
 (62, 313),
 (96, 312),
 (129, 311),
 (133, 310),
 (36, 309),
 (107, 308),
 (52, 307),
 (117, 306),
 (68, 305),
 (83, 304),
 (72, 303),
 (4, 302),
 (4, 301),
 (132, 300),
 (66, 299),
 (119, 298),
 (86, 297),
 (135, 296),
 (45, 295),
 (122, 294),
 (50, 293),
 (23, 292),
 (68, 291),
 (83, 290),
 (9, 289),
 (5, 288),
 (1, 287),
 (72, 286),
 (127, 285),
 (88, 284),
 (19, 283),
 (67, 282),
 (103, 281),
 (48, 280),
 (115, 279),
 (7, 278),
 (37, 277),
 (74, 276),
 (24, 275),
 (51, 274),
 (74, 273),
 (67, 272),
 (92, 271),
 (116, 270),
 (5, 269),
 (68, 268),
 (2, 267),
 (1, 266),
 (125, 265),
 (6, 264),
 (114, 263),
 (91, 262),
 (99, 261),
 (95, 260),
 (68, 259),
 (74, 258),
 (102, 257),
 (88, 256),
 (40, 255),
 (59, 254),
 (116, 253),
 (102, 252),
 (110, 251),
 (82, 250),
 (54, 249),
 (132, 248),
 (55, 247),
 (67, 246),
 (135, 245),
 (80, 244),
 (27, 243),
 (52, 242),
 (116, 241),
 (41, 240),
 (17, 239),
 (71, 238),
 (131, 237),
 (104, 236),
 (51, 235),
 (42, 234),
 (67, 233),
 (19, 232),
 (23, 231),
 (24, 230),
 (74, 229),
 (9, 228),
 (72, 227),
 (95, 226),
 (72, 225),
 (68, 224),
 (95, 223),
 (98, 222),
 (81, 221),
 (28, 220),
 (27, 219),
 (83, 218),
 (84, 217),
 (111, 216),
 (27, 215),
 (62, 214),
 (91, 213),
 (67, 212),
 (25, 211),
 (44, 210),
 (127, 209),
 (126, 208),
 (130, 207),
 (30, 206),
 (116, 205),
 (0, 204),
 (122, 203),
 (117, 202),
 (25, 201),
 (24, 200),
 (16, 199),
 (116, 198),
 (21, 197),
 (50, 196),
 (16, 195),
 (130, 194),
 (135, 193),
 (5, 192),
 (109, 191),
 (131, 190),
 (107, 189),
 (91, 188),
 (3, 187),
 (108, 186),
 (121, 185),
 (0, 184),
 (130, 183),
 (81, 182),
 (42, 181),
 (48, 180),
 (52, 179),
 (84, 178),
 (63, 177),
 (1, 176),
 (101, 175),
 (89, 174),
 (104, 173),
 (16, 172),
 (129, 171),
 (43, 170),
 (15, 169),
 (76, 168),
 (12, 167),
 (66, 166),
 (82, 165),
 (113, 164),
 (28, 163),
 (24, 162),
 (104, 161),
 (10, 160),
 (23, 160),
 (15, 159),
 (16, 159),
 (0, 158),
 (15, 158),
 (2, 157),
 (17, 157),
 (1, 156),
 (13, 156),
 (9, 155),
 (20, 155),
 (2, 154),
 (22, 154),
 (4, 153),
 (21, 153),
 (16, 152),
 (19, 152),
 (8, 151),
 (14, 151),
 (3, 150),
 (7, 150),
 (11, 149),
 (12, 149),
 (2, 148),
 (21, 148),
 (5, 147),
 (18, 147),
 (10, 146),
 (17, 146),
 (20, 145),
 (22, 145),
 (2, 144),
 (18, 144),
 (8, 143),
 (10, 143),
 (7, 142),
 (16, 142),
 (2, 141),
 (23, 141),
 (15, 140),
 (19, 140),
 (7, 139),
 (11, 139),
 (9, 138),
 (23, 138),
 (1, 137),
 (21, 137),
 (12, 136),
 (17, 136),
 (18, 135),
 (22, 135),
 (4, 134),
 (18, 134),
 (6, 133),
 (17, 133),
 (14, 132),
 (22, 132),
 (0, 131),
 (18, 131),
 (5, 130),
 (14, 130),
 (8, 129),
 (11, 129),
 (1, 128),
 (12, 128),
 (15, 127),
 (20, 127),
 (19, 126),
 (23, 126),
 (7, 125),
 (12, 125),
 (3, 124),
 (20, 124),
 (8, 123),
 (23, 123),
 (16, 122),
 (20, 122),
 (11, 121),
 (21, 121),
 (1, 120),
 (9, 120),
 (3, 119),
 (19, 119),
 (7, 118),
 (21, 118),
 (5, 117),
 (8, 117),
 (0, 116),
 (14, 116),
 (18, 115),
 (20, 115),
 (7, 114),
 (23, 114),
 (11, 113),
 (14, 113),
 (16, 112),
 (17, 112),
 (19, 111),
 (20, 111),
 (16, 110),
 (22, 110),
 (12, 109),
 (22, 109),
 (3, 108),
 (23, 108),
 (9, 107),
 (22, 107),
 (9, 106),
 (17, 106),
 (17, 105),
 (19, 105),
 (7, 104),
 (13, 104),
 (6, 103),
 (15, 103),
 (10, 102),
 (18, 102),
 (0, 101),
 (17, 101),
 (4, 100),
 (19, 100),
 (1, 99),
 (4, 99),
 (0, 98),
 (20, 98),
 (6, 97),
 (20, 97),
 (14, 96),
 (20, 96),
 (17, 95),
 (22, 95),
 (16, 94),
 (23, 94),
 (5, 93),
 (19, 93),
 (18, 92),
 (21, 92),
 (5, 91),
 (12, 91),
 (9, 90),
 (12, 90),
 (3, 89),
 (18, 89),
 (6, 88),
 (7, 88),
 (5, 87),
 (23, 87),
 (0, 86),
 (9, 86),
 (6, 85),
 (12, 85),
 (9, 84),
 (16, 84),
 (17, 83),
 (21, 83),
 (0, 82),
 (5, 82),
 (0, 81),
 (16, 81),
 (10, 80),
 (13, 80),
 (7, 79),
 (8, 79),
 (0, 78),
 (12, 78),
 (1, 77),
 (15, 77),
 (0, 76),
 (10, 76),
 (4, 75),
 (12, 75),
 (11, 74),
 (17, 74),
 (5, 73),
 (10, 73),
 (9, 72),
 (13, 72),
 (3, 71),
 (9, 71),
 (7, 70),
 (18, 70),
 (19, 69),
 (22, 69),
 (5, 68),
 (11, 68),
 (14, 67),
 (21, 67),
 (2, 66),
 (14, 66),
 (7, 65),
 (22, 65),
 (2, 64),
 (8, 64),
 (7, 63),
 (20, 63),
 (3, 62),
 (21, 62),
 (6, 61),
 (9, 61),
 (10, 60),
 (11, 60),
 (10, 59),
 (21, 59),
 (11, 58),
 (13, 58),
 (12, 57),
 (21, 57),
 (9, 56),
 (18, 56),
 (4, 55),
 (8, 55),
 (10, 54),
 (16, 54),
 (17, 53),
 (18, 53),
 (9, 52),
 (21, 52),
 (1, 51),
 (2, 51),
 (4, 50),
 (22, 50),
 (13, 49),
 (22, 49),
 (1, 48),
 (19, 48),
 (2, 47),
 (5, 47),
 (11, 46),
 (15, 46),
 (8, 45),
 (18, 45),
 (6, 44),
 (18, 44),
 (6, 43),
 (21, 43),
 (4, 42),
 (14, 42),
 (8, 41),
 (15, 41),
 (8, 40),
 (12, 40),
 (12, 39),
 (16, 39),
 (14, 38),
 (15, 38),
 (8, 37),
 (19, 37),
 (13, 36),
 (19, 36),
 (0, 35),
 (3, 35),
 (11, 34),
 (22, 34),
 (1, 33),
 (17, 33),
 (1, 32),
 (11, 32),
 (2, 31),
 (4, 31),
 (17, 30),
 (23, 30),
 (5, 29),
 (21, 29),
 (14, 28),
 (18, 28),
 (10, 27),
 (15, 27),
 (3, 26),
 (5, 26),
 (1, 25),
 (14, 25),
 (0, 24),
 (21, 24)]
410
395
408
410
396
410
404
404
404
410
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
410
395
408
410
396
410
404
404
404
410
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
410
395
408
410
396
410
404
404
404
410
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
('>  1 411 404 396 395 392 372 368 358 356 342 328 303 302 297 261 259 258 240 '
 '172 150 147 144 137 136 135 130 110 103 96 76 75 61 56 54 51 46 41 35 23 19 '
 '18 13 12 11 9 5\n')
410
('>  2 396 392 372 342 337 333 326 305 302 294 293 291 261 255 240 227 198 168 '
 '161 158 155 154 149 147 146 144 142 137 124 110 96 84 76 65 60 58 56 51 41 '
 '32 31 24 23 22 21 18 13 11 9 5 3\n')
395
('>  3 409 397 384 372 363 345 330 308 304 290 289 270 228 198 193 174 139 126 '
 '119 115 110 108 105 92 91 89 88 86 73 66 62 58 53 50 44 30 24 23 22 14 13 10 '
 '8 7 6\n')
408
('>  4 411 405 394 347 328 319 288 284 267 230 219 213 212 202 173 171 165 153 '
 '138 134 122 114 113 106 84 75 68 49 44 34 33 26 22 20 18 17 15 12 7 2\n')
410
('>  5 397 386 384 316 160 143 133 111 108 104 89 85 66 62 39 23 17 16 15 10 8 '
 '7\n')
396
('>  6 411 405 404 394 372 358 328 284 240 233 153 150 147 137 134 113 106 86 '
 '75 61 55 40 20 18 17 13 12 11 7\n')
410
('>  7 405 394 328 316 284 240 233 161 153 152 147 144 139 127 124 113 107 106 '
 '95 85 55 38 31 24 20 18 17 15 11 10 9\n')
404
'>  8 405 397 384 328 316 240 143 134 113 107 89 85 62 18 17 15 10 8 7\n'
404
('>  9 405 397 394 384 372 328 304 284 240 233 137 126 107 106 105 91 80 73 41 '
 '38 37 20 18 14 13 10 9 8\n')
404
('>  10 411 405 404 395 372 358 328 240 150 147 144 137 130 113 111 110 96 75 '
 '61 55 41 40 35 23 18 17 13 12 11 9\n')
410
''
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
('>  1 411 404 396 395 392 372 368 358 356 342 328 303 302 297 261 259 258 240 '
 '172 150 147 144 137 136 135 130 110 103 96 76 75 61 56 54 51 46 41 35 23 19 '
 '18 13 12 11 9 5\n')
('>  2 396 392 372 342 337 333 326 305 302 294 293 291 261 255 240 227 198 168 '
 '161 158 155 154 149 147 146 144 142 137 124 110 96 84 76 65 60 58 56 51 41 '
 '32 31 24 23 22 21 18 13 11 9 5 3\n')
('>  3 409 397 384 372 363 345 330 308 304 290 289 270 228 198 193 174 139 126 '
 '119 115 110 108 105 92 91 89 88 86 73 66 62 58 53 50 44 30 24 23 22 14 13 10 '
 '8 7 6\n')
('>  4 411 405 394 347 328 319 288 284 267 230 219 213 212 202 173 171 165 153 '
 '138 134 122 114 113 106 84 75 68 49 44 34 33 26 22 20 18 17 15 12 7 2\n')
('>  5 397 386 384 316 160 143 133 111 108 104 89 85 66 62 39 23 17 16 15 10 8 '
 '7\n')
('>  6 411 405 404 394 372 358 328 284 240 233 153 150 147 137 134 113 106 86 '
 '75 61 55 40 20 18 17 13 12 11 7\n')
('>  7 405 394 328 316 284 240 233 161 153 152 147 144 139 127 124 113 107 106 '
 '95 85 55 38 31 24 20 18 17 15 11 10 9\n')
'>  8 405 397 384 328 316 240 143 134 113 107 89 85 62 18 17 15 10 8 7\n'
('>  9 405 397 394 384 372 328 304 284 240 233 137 126 107 106 105 91 80 73 41 '
 '38 37 20 18 14 13 10 9 8\n')
('>  10 411 405 404 395 372 358 328 240 150 147 144 137 130 113 111 110 96 75 '
 '61 55 41 40 35 23 18 17 13 12 11 9\n')
''
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['411',
 '404',
 '396',
 '395',
 '392',
 '372',
 '368',
 '358',
 '356',
 '342',
 '328',
 '303',
 '302',
 '297',
 '261',
 '259',
 '258',
 '240',
 '172',
 '150',
 '147',
 '144',
 '137',
 '136',
 '135',
 '130',
 '110',
 '103',
 '96',
 '76',
 '75',
 '61',
 '56',
 '54',
 '51',
 '46',
 '41',
 '35',
 '23',
 '19',
 '18',
 '13',
 '12',
 '11',
 '9']
['396',
 '392',
 '372',
 '342',
 '337',
 '333',
 '326',
 '305',
 '302',
 '294',
 '293',
 '291',
 '261',
 '255',
 '240',
 '227',
 '198',
 '168',
 '161',
 '158',
 '155',
 '154',
 '149',
 '147',
 '146',
 '144',
 '142',
 '137',
 '124',
 '110',
 '96',
 '84',
 '76',
 '65',
 '60',
 '58',
 '56',
 '51',
 '41',
 '32',
 '31',
 '24',
 '23',
 '22',
 '21',
 '18',
 '13',
 '11',
 '9',
 '5']
['409',
 '397',
 '384',
 '372',
 '363',
 '345',
 '330',
 '308',
 '304',
 '290',
 '289',
 '270',
 '228',
 '198',
 '193',
 '174',
 '139',
 '126',
 '119',
 '115',
 '110',
 '108',
 '105',
 '92',
 '91',
 '89',
 '88',
 '86',
 '73',
 '66',
 '62',
 '58',
 '53',
 '50',
 '44',
 '30',
 '24',
 '23',
 '22',
 '14',
 '13',
 '10',
 '8',
 '7']
['411',
 '405',
 '394',
 '347',
 '328',
 '319',
 '288',
 '284',
 '267',
 '230',
 '219',
 '213',
 '212',
 '202',
 '173',
 '171',
 '165',
 '153',
 '138',
 '134',
 '122',
 '114',
 '113',
 '106',
 '84',
 '75',
 '68',
 '49',
 '44',
 '34',
 '33',
 '26',
 '22',
 '20',
 '18',
 '17',
 '15',
 '12',
 '7']
['397',
 '386',
 '384',
 '316',
 '160',
 '143',
 '133',
 '111',
 '108',
 '104',
 '89',
 '85',
 '66',
 '62',
 '39',
 '23',
 '17',
 '16',
 '15',
 '10',
 '8']
['411',
 '405',
 '404',
 '394',
 '372',
 '358',
 '328',
 '284',
 '240',
 '233',
 '153',
 '150',
 '147',
 '137',
 '134',
 '113',
 '106',
 '86',
 '75',
 '61',
 '55',
 '40',
 '20',
 '18',
 '17',
 '13',
 '12',
 '11']
['405',
 '394',
 '328',
 '316',
 '284',
 '240',
 '233',
 '161',
 '153',
 '152',
 '147',
 '144',
 '139',
 '127',
 '124',
 '113',
 '107',
 '106',
 '95',
 '85',
 '55',
 '38',
 '31',
 '24',
 '20',
 '18',
 '17',
 '15',
 '11',
 '10']
['405',
 '397',
 '384',
 '328',
 '316',
 '240',
 '143',
 '134',
 '113',
 '107',
 '89',
 '85',
 '62',
 '18',
 '17',
 '15',
 '10',
 '8']
['405',
 '397',
 '394',
 '384',
 '372',
 '328',
 '304',
 '284',
 '240',
 '233',
 '137',
 '126',
 '107',
 '106',
 '105',
 '91',
 '80',
 '73',
 '41',
 '38',
 '37',
 '20',
 '18',
 '14',
 '13',
 '10',
 '9']
['411',
 '405',
 '404',
 '395',
 '372',
 '358',
 '328',
 '240',
 '150',
 '147',
 '144',
 '137',
 '130',
 '113',
 '111',
 '110',
 '96',
 '75',
 '61',
 '55',
 '41',
 '40',
 '35',
 '23',
 '18',
 '17',
 '13',
 '12',
 '11']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['411', '404', '396', '395', '392', '372', '368', '358', '356', '342', '328', '303', '302', '297', '261', '259', '258', '240', '172', '150', '147', '144', '137', '136', '135', '130', '110', '103', '96', '76', '75', '61', '56', '54', '51', '46', '41', '35', '23', '19', '18', '13', '12', '11', '9']
['396', '392', '372', '342', '337', '333', '326', '305', '302', '294', '293', '291', '261', '255', '240', '227', '198', '168', '161', '158', '155', '154', '149', '147', '146', '144', '142', '137', '124', '110', '96', '84', '76', '65', '60', '58', '56', '51', '41', '32', '31', '24', '23', '22', '21', '18', '13', '11', '9', '5']
['409', '397', '384', '372', '363', '345', '330', '308', '304', '290', '289', '270', '228', '198', '193', '174', '139', '126', '119', '115', '110', '108', '105', '92', '91', '89', '88', '86', '73', '66', '62', '58', '53', '50', '44', '30', '24', '23', '22', '14', '13', '10', '8', '7']
['411', '405', '394', '347', '328', '319', '288', '284', '267', '230', '219', '213', '212', '202', '173', '171', '165', '153', '138', '134', '122', '114', '113', '106', '84', '75', '68', '49', '44', '34', '33', '26', '22', '20', '18', '17', '15', '12', '7']
['397', '386', '384', '316', '160', '143', '133', '111', '108', '104', '89', '85', '66', '62', '39', '23', '17', '16', '15', '10', '8']
['411', '405', '404', '394', '372', '358', '328', '284', '240', '233', '153', '150', '147', '137', '134', '113', '106', '86', '75', '61', '55', '40', '20', '18', '17', '13', '12', '11']
['405', '394', '328', '316', '284', '240', '233', '161', '153', '152', '147', '144', '139', '127', '124', '113', '107', '106', '95', '85', '55', '38', '31', '24', '20', '18', '17', '15', '11', '10']
['405', '397', '384', '328', '316', '240', '143', '134', '113', '107', '89', '85', '62', '18', '17', '15', '10', '8']
['405', '397', '394', '384', '372', '328', '304', '284', '240', '233', '137', '126', '107', '106', '105', '91', '80', '73', '41', '38', '37', '20', '18', '14', '13', '10', '9']
['411', '405', '404', '395', '372', '358', '328', '240', '150', '147', '144', '137', '130', '113', '111', '110', '96', '75', '61', '55', '41', '40', '35', '23', '18', '17', '13', '12', '11']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['411', '404', '396', '395', '392', '372', '368', '358', '356', '342', '328', '303', '302', '297', '261', '259', '258', '240', '172', '150', '147', '144', '137', '136', '135', '130', '110', '103', '96', '76', '75', '61', '56', '54', '51', '46', '41', '35', '23', '19', '18', '13', '12', '11', '9']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['411', '404', '396', '395', '392', '372', '368', '358', '356', '342', '328', '303', '302', '297', '261', '259', '258', '240', '172', '150', '147', '144', '137', '136', '135', '130', '110', '103', '96', '76', '75', '61', '56', '54', '51', '46', '41', '35', '23', '19', '18', '13', '12', '11', '9']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
['999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
>  1 999 407 405 404 385 383 373 361 358 329 328 323 322 277 276 274 240 222 205 200 198 147 132 122 113 103 102 93 90 84 82 77 75 63 61 60 55 54 36 25 22 19 18 17 12 11 4 1

1 999 407 405 404 385 383 373 361 358 329 328 323 322 277 276 274 240 222 205 200 198 147 132 122 113 103 102 93 90 84 82 77 75 63 61 60 55 54 36 25 22 19 18 17 12 11 4 1
['999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
>  1 999 407 405 404 385 383 373 361 358 329 328 323 322 277 276 274 240 222 205 200 198 147 132 122 113 103 102 93 90 84 82 77 75 63 61 60 55 54 36 25 22 19 18 17 12 11 4 1

['>', '', '1', '999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4', '1\n']
['999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
>  1 999 407 405 404 385 383 373 361 358 329 328 323 322 277 276 274 240 222 205 200 198 147 132 122 113 103 102 93 90 84 82 77 75 63 61 60 55 54 36 25 22 19 18 17 12 11 4 1

['>', '', '1', '999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4', '1\n']
['999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4', '1\n']
***Creating CRM structure***
***Training CRM***
Namespace(explain=False, file='./data/minichess/config', gpu=False, num_epochs=10, output='./data/minichess/results1', saved_model=None, tune=False, verbose=True)
***Loading data***
>  1 999 407 405 404 385 383 373 361 358 329 328 323 322 277 276 274 240 222 205 200 198 147 132 122 113 103 102 93 90 84 82 77 75 63 61 60 55 54 36 25 22 19 18 17 12 11 4 1

['>', '', '1', '999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4', '1\n']
['999', '407', '405', '404', '385', '383', '373', '361', '358', '329', '328', '323', '322', '277', '276', '274', '240', '222', '205', '200', '198', '147', '132', '122', '113', '103', '102', '93', '90', '84', '82', '77', '75', '63', '61', '60', '55', '54', '36', '25', '22', '19', '18', '17', '12', '11', '4', '1\n']
0
***Creating CRM structure***
***Training CRM***
